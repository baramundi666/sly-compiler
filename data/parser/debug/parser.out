Grammar:

Rule 0     S' -> start
Rule 1     empty -> <empty>
Rule 2     start -> { start } start
Rule 3     start -> statement start
Rule 4     start -> empty
Rule 5     expression -> [ list ]
Rule 6     expression -> EYE ( expression )
Rule 7     expression -> ONES ( expression )
Rule 8     expression -> ZEROS ( expression )
Rule 9     expression -> - expression  [precedence=right, level=6]
Rule 10    expression -> expression '  [precedence=right, level=5]
Rule 11    expression -> expression = expression
Rule 12    expression -> expression EQ expression  [precedence=nonassoc, level=2]
Rule 13    expression -> expression NEQ expression  [precedence=nonassoc, level=2]
Rule 14    expression -> expression GE expression  [precedence=nonassoc, level=2]
Rule 15    expression -> expression LE expression  [precedence=nonassoc, level=2]
Rule 16    expression -> expression GT expression  [precedence=nonassoc, level=2]
Rule 17    expression -> expression LT expression  [precedence=nonassoc, level=2]
Rule 18    expression -> expression DOTDIVIDE expression  [precedence=left, level=4]
Rule 19    expression -> expression DOTTIMES expression  [precedence=left, level=4]
Rule 20    expression -> expression DOTMINUS expression  [precedence=left, level=3]
Rule 21    expression -> expression DOTPLUS expression  [precedence=left, level=3]
Rule 22    expression -> expression / expression  [precedence=left, level=4]
Rule 23    expression -> expression * expression  [precedence=left, level=4]
Rule 24    expression -> expression - expression  [precedence=right, level=6]
Rule 25    expression -> expression + expression  [precedence=left, level=3]
Rule 26    expression -> ( expression )
Rule 27    expression -> STRING
Rule 28    expression -> FLOATNUM
Rule 29    expression -> INTNUM
Rule 30    list_element -> list
Rule 31    list_element -> ID
Rule 32    list_element -> STRING
Rule 33    list_element -> FLOATNUM
Rule 34    list_element -> INTNUM
Rule 35    spread_elements -> list_element
Rule 36    spread_elements -> spread_elements , list_element
Rule 37    list -> [ spread_elements ]
Rule 38    list -> list , [ spread_elements ]
Rule 39    assignable -> ID [ indexes ]
Rule 40    assignable -> ID
Rule 41    indexes -> INTNUM
Rule 42    indexes -> INTNUM , indexes
Rule 43    statement -> FOR ID = range block
Rule 44    statement -> WHILE expression block
Rule 45    statement -> IF expression block ELSE block
Rule 46    statement -> IF expression block
Rule 47    statement -> PRINT prints ;
Rule 48    statement -> expression ;
Rule 49    statement -> BREAK ;
Rule 50    statement -> CONTINUE ;
Rule 51    statement -> RETURN expression ;
Rule 52    statement -> assignable DIVASSIGN expression ;
Rule 53    statement -> assignable MULASSIGN expression ;
Rule 54    statement -> assignable SUBASSIGN expression ;
Rule 55    statement -> assignable ADDASSIGN expression ;
Rule 56    statement -> assignable = expression ;
Rule 57    block -> { start }
Rule 58    block -> statement
Rule 59    prints -> expression ;
Rule 60    prints -> expression , prints
Rule 61    range -> INTNUM : ID
Rule 62    range -> ID : INTNUM
Rule 63    range -> ID : ID
Rule 64    range -> INTNUM : INTNUM

Terminals, with rules where they appear:

'                    : 10
(                    : 6 7 8 26
)                    : 6 7 8 26
*                    : 23
+                    : 25
,                    : 36 38 42 60
-                    : 9 24
/                    : 22
:                    : 61 62 63 64
;                    : 47 48 49 50 51 52 53 54 55 56 59
=                    : 11 43 56
ADDASSIGN            : 55
BREAK                : 49
CONTINUE             : 50
DIVASSIGN            : 52
DOTDIVIDE            : 18
DOTMINUS             : 20
DOTPLUS              : 21
DOTTIMES             : 19
ELSE                 : 45
EQ                   : 12
EYE                  : 6
FLOATNUM             : 28 33
FOR                  : 43
GE                   : 14
GT                   : 16
ID                   : 31 39 40 43 61 62 63 63
IF                   : 45 46
INTNUM               : 29 34 41 42 61 62 64 64
LE                   : 15
LT                   : 17
MULASSIGN            : 53
NEQ                  : 13
ONES                 : 7
PRINT                : 47
RETURN               : 51
STRING               : 27 32
SUBASSIGN            : 54
WHILE                : 44
ZEROS                : 8
[                    : 5 37 38 39
]                    : 5 37 38 39
error                : 
{                    : 2 57
}                    : 2 57

Nonterminals, with rules where they appear:

assignable           : 52 53 54 55 56
block                : 43 44 45 45 46
empty                : 4
expression           : 6 7 8 9 10 11 11 12 12 13 13 14 14 15 15 16 16 17 17 18 18 19 19 20 20 21 21 22 22 23 23 24 24 25 25 26 44 45 46 48 51 52 53 54 55 56 59 60
indexes              : 39 42
list                 : 5 30 38
list_element         : 35 36
prints               : 47 60
range                : 43
spread_elements      : 36 37 38
start                : 2 2 3 57 0
statement            : 3 58


state 0

    (0) S' -> . start
    (2) start -> . { start } start
    (3) start -> . statement start
    (4) start -> . empty
    (43) statement -> . FOR ID = range block
    (44) statement -> . WHILE expression block
    (45) statement -> . IF expression block ELSE block
    (46) statement -> . IF expression block
    (47) statement -> . PRINT prints ;
    (48) statement -> . expression ;
    (49) statement -> . BREAK ;
    (50) statement -> . CONTINUE ;
    (51) statement -> . RETURN expression ;
    (52) statement -> . assignable DIVASSIGN expression ;
    (53) statement -> . assignable MULASSIGN expression ;
    (54) statement -> . assignable SUBASSIGN expression ;
    (55) statement -> . assignable ADDASSIGN expression ;
    (56) statement -> . assignable = expression ;
    (1) empty -> .
    (5) expression -> . [ list ]
    (6) expression -> . EYE ( expression )
    (7) expression -> . ONES ( expression )
    (8) expression -> . ZEROS ( expression )
    (9) expression -> . - expression
    (10) expression -> . expression '
    (11) expression -> . expression = expression
    (12) expression -> . expression EQ expression
    (13) expression -> . expression NEQ expression
    (14) expression -> . expression GE expression
    (15) expression -> . expression LE expression
    (16) expression -> . expression GT expression
    (17) expression -> . expression LT expression
    (18) expression -> . expression DOTDIVIDE expression
    (19) expression -> . expression DOTTIMES expression
    (20) expression -> . expression DOTMINUS expression
    (21) expression -> . expression DOTPLUS expression
    (22) expression -> . expression / expression
    (23) expression -> . expression * expression
    (24) expression -> . expression - expression
    (25) expression -> . expression + expression
    (26) expression -> . ( expression )
    (27) expression -> . STRING
    (28) expression -> . FLOATNUM
    (29) expression -> . INTNUM
    (39) assignable -> . ID [ indexes ]
    (40) assignable -> . ID
    {               shift and go to state 2
    FOR             shift and go to state 5
    WHILE           shift and go to state 7
    IF              shift and go to state 9
    PRINT           shift and go to state 10
    BREAK           shift and go to state 11
    CONTINUE        shift and go to state 12
    RETURN          shift and go to state 13
    $end            reduce using rule 1 (empty -> .)
    [               shift and go to state 15
    EYE             shift and go to state 16
    ONES            shift and go to state 18
    ZEROS           shift and go to state 19
    -               shift and go to state 20
    (               shift and go to state 17
    STRING          shift and go to state 21
    FLOATNUM        shift and go to state 22
    INTNUM          shift and go to state 23
    ID              shift and go to state 6

    start                          shift and go to state 1
    statement                      shift and go to state 3
    empty                          shift and go to state 4
    expression                     shift and go to state 8
    assignable                     shift and go to state 14

state 1

    (0) S' -> start .


state 2

    (2) start -> { . start } start
    (2) start -> . { start } start
    (3) start -> . statement start
    (4) start -> . empty
    (43) statement -> . FOR ID = range block
    (44) statement -> . WHILE expression block
    (45) statement -> . IF expression block ELSE block
    (46) statement -> . IF expression block
    (47) statement -> . PRINT prints ;
    (48) statement -> . expression ;
    (49) statement -> . BREAK ;
    (50) statement -> . CONTINUE ;
    (51) statement -> . RETURN expression ;
    (52) statement -> . assignable DIVASSIGN expression ;
    (53) statement -> . assignable MULASSIGN expression ;
    (54) statement -> . assignable SUBASSIGN expression ;
    (55) statement -> . assignable ADDASSIGN expression ;
    (56) statement -> . assignable = expression ;
    (1) empty -> .
    (5) expression -> . [ list ]
    (6) expression -> . EYE ( expression )
    (7) expression -> . ONES ( expression )
    (8) expression -> . ZEROS ( expression )
    (9) expression -> . - expression
    (10) expression -> . expression '
    (11) expression -> . expression = expression
    (12) expression -> . expression EQ expression
    (13) expression -> . expression NEQ expression
    (14) expression -> . expression GE expression
    (15) expression -> . expression LE expression
    (16) expression -> . expression GT expression
    (17) expression -> . expression LT expression
    (18) expression -> . expression DOTDIVIDE expression
    (19) expression -> . expression DOTTIMES expression
    (20) expression -> . expression DOTMINUS expression
    (21) expression -> . expression DOTPLUS expression
    (22) expression -> . expression / expression
    (23) expression -> . expression * expression
    (24) expression -> . expression - expression
    (25) expression -> . expression + expression
    (26) expression -> . ( expression )
    (27) expression -> . STRING
    (28) expression -> . FLOATNUM
    (29) expression -> . INTNUM
    (39) assignable -> . ID [ indexes ]
    (40) assignable -> . ID
    {               shift and go to state 2
    FOR             shift and go to state 5
    WHILE           shift and go to state 7
    IF              shift and go to state 9
    PRINT           shift and go to state 10
    BREAK           shift and go to state 11
    CONTINUE        shift and go to state 12
    RETURN          shift and go to state 13
    }               reduce using rule 1 (empty -> .)
    [               shift and go to state 15
    EYE             shift and go to state 16
    ONES            shift and go to state 18
    ZEROS           shift and go to state 19
    -               shift and go to state 20
    (               shift and go to state 17
    STRING          shift and go to state 21
    FLOATNUM        shift and go to state 22
    INTNUM          shift and go to state 23
    ID              shift and go to state 6

    start                          shift and go to state 24
    statement                      shift and go to state 3
    empty                          shift and go to state 4
    expression                     shift and go to state 8
    assignable                     shift and go to state 14

state 3

    (3) start -> statement . start
    (2) start -> . { start } start
    (3) start -> . statement start
    (4) start -> . empty
    (43) statement -> . FOR ID = range block
    (44) statement -> . WHILE expression block
    (45) statement -> . IF expression block ELSE block
    (46) statement -> . IF expression block
    (47) statement -> . PRINT prints ;
    (48) statement -> . expression ;
    (49) statement -> . BREAK ;
    (50) statement -> . CONTINUE ;
    (51) statement -> . RETURN expression ;
    (52) statement -> . assignable DIVASSIGN expression ;
    (53) statement -> . assignable MULASSIGN expression ;
    (54) statement -> . assignable SUBASSIGN expression ;
    (55) statement -> . assignable ADDASSIGN expression ;
    (56) statement -> . assignable = expression ;
    (1) empty -> .
    (5) expression -> . [ list ]
    (6) expression -> . EYE ( expression )
    (7) expression -> . ONES ( expression )
    (8) expression -> . ZEROS ( expression )
    (9) expression -> . - expression
    (10) expression -> . expression '
    (11) expression -> . expression = expression
    (12) expression -> . expression EQ expression
    (13) expression -> . expression NEQ expression
    (14) expression -> . expression GE expression
    (15) expression -> . expression LE expression
    (16) expression -> . expression GT expression
    (17) expression -> . expression LT expression
    (18) expression -> . expression DOTDIVIDE expression
    (19) expression -> . expression DOTTIMES expression
    (20) expression -> . expression DOTMINUS expression
    (21) expression -> . expression DOTPLUS expression
    (22) expression -> . expression / expression
    (23) expression -> . expression * expression
    (24) expression -> . expression - expression
    (25) expression -> . expression + expression
    (26) expression -> . ( expression )
    (27) expression -> . STRING
    (28) expression -> . FLOATNUM
    (29) expression -> . INTNUM
    (39) assignable -> . ID [ indexes ]
    (40) assignable -> . ID
    {               shift and go to state 2
    FOR             shift and go to state 5
    WHILE           shift and go to state 7
    IF              shift and go to state 9
    PRINT           shift and go to state 10
    BREAK           shift and go to state 11
    CONTINUE        shift and go to state 12
    RETURN          shift and go to state 13
    $end            reduce using rule 1 (empty -> .)
    }               reduce using rule 1 (empty -> .)
    [               shift and go to state 15
    EYE             shift and go to state 16
    ONES            shift and go to state 18
    ZEROS           shift and go to state 19
    -               shift and go to state 20
    (               shift and go to state 17
    STRING          shift and go to state 21
    FLOATNUM        shift and go to state 22
    INTNUM          shift and go to state 23
    ID              shift and go to state 6

    statement                      shift and go to state 3
    start                          shift and go to state 25
    empty                          shift and go to state 4
    expression                     shift and go to state 8
    assignable                     shift and go to state 14

state 4

    (4) start -> empty .
    $end            reduce using rule 4 (start -> empty .)
    }               reduce using rule 4 (start -> empty .)


state 5

    (43) statement -> FOR . ID = range block
    ID              shift and go to state 26


state 6

    (39) assignable -> ID . [ indexes ]
    (40) assignable -> ID .
    [               shift and go to state 27
    DIVASSIGN       reduce using rule 40 (assignable -> ID .)
    MULASSIGN       reduce using rule 40 (assignable -> ID .)
    SUBASSIGN       reduce using rule 40 (assignable -> ID .)
    ADDASSIGN       reduce using rule 40 (assignable -> ID .)
    =               reduce using rule 40 (assignable -> ID .)


state 7

    (44) statement -> WHILE . expression block
    (5) expression -> . [ list ]
    (6) expression -> . EYE ( expression )
    (7) expression -> . ONES ( expression )
    (8) expression -> . ZEROS ( expression )
    (9) expression -> . - expression
    (10) expression -> . expression '
    (11) expression -> . expression = expression
    (12) expression -> . expression EQ expression
    (13) expression -> . expression NEQ expression
    (14) expression -> . expression GE expression
    (15) expression -> . expression LE expression
    (16) expression -> . expression GT expression
    (17) expression -> . expression LT expression
    (18) expression -> . expression DOTDIVIDE expression
    (19) expression -> . expression DOTTIMES expression
    (20) expression -> . expression DOTMINUS expression
    (21) expression -> . expression DOTPLUS expression
    (22) expression -> . expression / expression
    (23) expression -> . expression * expression
    (24) expression -> . expression - expression
    (25) expression -> . expression + expression
    (26) expression -> . ( expression )
    (27) expression -> . STRING
    (28) expression -> . FLOATNUM
    (29) expression -> . INTNUM
    [               shift and go to state 15
    EYE             shift and go to state 16
    ONES            shift and go to state 18
    ZEROS           shift and go to state 19
    -               shift and go to state 20
    (               shift and go to state 17
    STRING          shift and go to state 21
    FLOATNUM        shift and go to state 22
    INTNUM          shift and go to state 23

    expression                     shift and go to state 28

state 8

    (48) statement -> expression . ;
    (10) expression -> expression . '
    (11) expression -> expression . = expression
    (12) expression -> expression . EQ expression
    (13) expression -> expression . NEQ expression
    (14) expression -> expression . GE expression
    (15) expression -> expression . LE expression
    (16) expression -> expression . GT expression
    (17) expression -> expression . LT expression
    (18) expression -> expression . DOTDIVIDE expression
    (19) expression -> expression . DOTTIMES expression
    (20) expression -> expression . DOTMINUS expression
    (21) expression -> expression . DOTPLUS expression
    (22) expression -> expression . / expression
    (23) expression -> expression . * expression
    (24) expression -> expression . - expression
    (25) expression -> expression . + expression
    ;               shift and go to state 29
    '               shift and go to state 30
    =               shift and go to state 31
    EQ              shift and go to state 32
    NEQ             shift and go to state 33
    GE              shift and go to state 34
    LE              shift and go to state 35
    GT              shift and go to state 36
    LT              shift and go to state 37
    DOTDIVIDE       shift and go to state 38
    DOTTIMES        shift and go to state 39
    DOTMINUS        shift and go to state 40
    DOTPLUS         shift and go to state 41
    /               shift and go to state 42
    *               shift and go to state 43
    -               shift and go to state 44
    +               shift and go to state 45


state 9

    (45) statement -> IF . expression block ELSE block
    (46) statement -> IF . expression block
    (5) expression -> . [ list ]
    (6) expression -> . EYE ( expression )
    (7) expression -> . ONES ( expression )
    (8) expression -> . ZEROS ( expression )
    (9) expression -> . - expression
    (10) expression -> . expression '
    (11) expression -> . expression = expression
    (12) expression -> . expression EQ expression
    (13) expression -> . expression NEQ expression
    (14) expression -> . expression GE expression
    (15) expression -> . expression LE expression
    (16) expression -> . expression GT expression
    (17) expression -> . expression LT expression
    (18) expression -> . expression DOTDIVIDE expression
    (19) expression -> . expression DOTTIMES expression
    (20) expression -> . expression DOTMINUS expression
    (21) expression -> . expression DOTPLUS expression
    (22) expression -> . expression / expression
    (23) expression -> . expression * expression
    (24) expression -> . expression - expression
    (25) expression -> . expression + expression
    (26) expression -> . ( expression )
    (27) expression -> . STRING
    (28) expression -> . FLOATNUM
    (29) expression -> . INTNUM
    [               shift and go to state 15
    EYE             shift and go to state 16
    ONES            shift and go to state 18
    ZEROS           shift and go to state 19
    -               shift and go to state 20
    (               shift and go to state 17
    STRING          shift and go to state 21
    FLOATNUM        shift and go to state 22
    INTNUM          shift and go to state 23

    expression                     shift and go to state 46

state 10

    (47) statement -> PRINT . prints ;
    (59) prints -> . expression ;
    (60) prints -> . expression , prints
    (5) expression -> . [ list ]
    (6) expression -> . EYE ( expression )
    (7) expression -> . ONES ( expression )
    (8) expression -> . ZEROS ( expression )
    (9) expression -> . - expression
    (10) expression -> . expression '
    (11) expression -> . expression = expression
    (12) expression -> . expression EQ expression
    (13) expression -> . expression NEQ expression
    (14) expression -> . expression GE expression
    (15) expression -> . expression LE expression
    (16) expression -> . expression GT expression
    (17) expression -> . expression LT expression
    (18) expression -> . expression DOTDIVIDE expression
    (19) expression -> . expression DOTTIMES expression
    (20) expression -> . expression DOTMINUS expression
    (21) expression -> . expression DOTPLUS expression
    (22) expression -> . expression / expression
    (23) expression -> . expression * expression
    (24) expression -> . expression - expression
    (25) expression -> . expression + expression
    (26) expression -> . ( expression )
    (27) expression -> . STRING
    (28) expression -> . FLOATNUM
    (29) expression -> . INTNUM
    [               shift and go to state 15
    EYE             shift and go to state 16
    ONES            shift and go to state 18
    ZEROS           shift and go to state 19
    -               shift and go to state 20
    (               shift and go to state 17
    STRING          shift and go to state 21
    FLOATNUM        shift and go to state 22
    INTNUM          shift and go to state 23

    prints                         shift and go to state 47
    expression                     shift and go to state 48

state 11

    (49) statement -> BREAK . ;
    ;               shift and go to state 49


state 12

    (50) statement -> CONTINUE . ;
    ;               shift and go to state 50


state 13

    (51) statement -> RETURN . expression ;
    (5) expression -> . [ list ]
    (6) expression -> . EYE ( expression )
    (7) expression -> . ONES ( expression )
    (8) expression -> . ZEROS ( expression )
    (9) expression -> . - expression
    (10) expression -> . expression '
    (11) expression -> . expression = expression
    (12) expression -> . expression EQ expression
    (13) expression -> . expression NEQ expression
    (14) expression -> . expression GE expression
    (15) expression -> . expression LE expression
    (16) expression -> . expression GT expression
    (17) expression -> . expression LT expression
    (18) expression -> . expression DOTDIVIDE expression
    (19) expression -> . expression DOTTIMES expression
    (20) expression -> . expression DOTMINUS expression
    (21) expression -> . expression DOTPLUS expression
    (22) expression -> . expression / expression
    (23) expression -> . expression * expression
    (24) expression -> . expression - expression
    (25) expression -> . expression + expression
    (26) expression -> . ( expression )
    (27) expression -> . STRING
    (28) expression -> . FLOATNUM
    (29) expression -> . INTNUM
    [               shift and go to state 15
    EYE             shift and go to state 16
    ONES            shift and go to state 18
    ZEROS           shift and go to state 19
    -               shift and go to state 20
    (               shift and go to state 17
    STRING          shift and go to state 21
    FLOATNUM        shift and go to state 22
    INTNUM          shift and go to state 23

    expression                     shift and go to state 51

state 14

    (52) statement -> assignable . DIVASSIGN expression ;
    (53) statement -> assignable . MULASSIGN expression ;
    (54) statement -> assignable . SUBASSIGN expression ;
    (55) statement -> assignable . ADDASSIGN expression ;
    (56) statement -> assignable . = expression ;
    DIVASSIGN       shift and go to state 52
    MULASSIGN       shift and go to state 53
    SUBASSIGN       shift and go to state 54
    ADDASSIGN       shift and go to state 55
    =               shift and go to state 56


state 15

    (5) expression -> [ . list ]
    (37) list -> . [ spread_elements ]
    (38) list -> . list , [ spread_elements ]
    [               shift and go to state 57

    list                           shift and go to state 58

state 16

    (6) expression -> EYE . ( expression )
    (               shift and go to state 59


state 17

    (26) expression -> ( . expression )
    (5) expression -> . [ list ]
    (6) expression -> . EYE ( expression )
    (7) expression -> . ONES ( expression )
    (8) expression -> . ZEROS ( expression )
    (9) expression -> . - expression
    (10) expression -> . expression '
    (11) expression -> . expression = expression
    (12) expression -> . expression EQ expression
    (13) expression -> . expression NEQ expression
    (14) expression -> . expression GE expression
    (15) expression -> . expression LE expression
    (16) expression -> . expression GT expression
    (17) expression -> . expression LT expression
    (18) expression -> . expression DOTDIVIDE expression
    (19) expression -> . expression DOTTIMES expression
    (20) expression -> . expression DOTMINUS expression
    (21) expression -> . expression DOTPLUS expression
    (22) expression -> . expression / expression
    (23) expression -> . expression * expression
    (24) expression -> . expression - expression
    (25) expression -> . expression + expression
    (26) expression -> . ( expression )
    (27) expression -> . STRING
    (28) expression -> . FLOATNUM
    (29) expression -> . INTNUM
    [               shift and go to state 15
    EYE             shift and go to state 16
    ONES            shift and go to state 18
    ZEROS           shift and go to state 19
    -               shift and go to state 20
    (               shift and go to state 17
    STRING          shift and go to state 21
    FLOATNUM        shift and go to state 22
    INTNUM          shift and go to state 23

    expression                     shift and go to state 60

state 18

    (7) expression -> ONES . ( expression )
    (               shift and go to state 61


state 19

    (8) expression -> ZEROS . ( expression )
    (               shift and go to state 62


state 20

    (9) expression -> - . expression
    (5) expression -> . [ list ]
    (6) expression -> . EYE ( expression )
    (7) expression -> . ONES ( expression )
    (8) expression -> . ZEROS ( expression )
    (9) expression -> . - expression
    (10) expression -> . expression '
    (11) expression -> . expression = expression
    (12) expression -> . expression EQ expression
    (13) expression -> . expression NEQ expression
    (14) expression -> . expression GE expression
    (15) expression -> . expression LE expression
    (16) expression -> . expression GT expression
    (17) expression -> . expression LT expression
    (18) expression -> . expression DOTDIVIDE expression
    (19) expression -> . expression DOTTIMES expression
    (20) expression -> . expression DOTMINUS expression
    (21) expression -> . expression DOTPLUS expression
    (22) expression -> . expression / expression
    (23) expression -> . expression * expression
    (24) expression -> . expression - expression
    (25) expression -> . expression + expression
    (26) expression -> . ( expression )
    (27) expression -> . STRING
    (28) expression -> . FLOATNUM
    (29) expression -> . INTNUM
    [               shift and go to state 15
    EYE             shift and go to state 16
    ONES            shift and go to state 18
    ZEROS           shift and go to state 19
    -               shift and go to state 20
    (               shift and go to state 17
    STRING          shift and go to state 21
    FLOATNUM        shift and go to state 22
    INTNUM          shift and go to state 23

    expression                     shift and go to state 63

state 21

    (27) expression -> STRING .
    ;               reduce using rule 27 (expression -> STRING .)
    '               reduce using rule 27 (expression -> STRING .)
    =               reduce using rule 27 (expression -> STRING .)
    EQ              reduce using rule 27 (expression -> STRING .)
    NEQ             reduce using rule 27 (expression -> STRING .)
    GE              reduce using rule 27 (expression -> STRING .)
    LE              reduce using rule 27 (expression -> STRING .)
    GT              reduce using rule 27 (expression -> STRING .)
    LT              reduce using rule 27 (expression -> STRING .)
    DOTDIVIDE       reduce using rule 27 (expression -> STRING .)
    DOTTIMES        reduce using rule 27 (expression -> STRING .)
    DOTMINUS        reduce using rule 27 (expression -> STRING .)
    DOTPLUS         reduce using rule 27 (expression -> STRING .)
    /               reduce using rule 27 (expression -> STRING .)
    *               reduce using rule 27 (expression -> STRING .)
    -               reduce using rule 27 (expression -> STRING .)
    +               reduce using rule 27 (expression -> STRING .)
    {               reduce using rule 27 (expression -> STRING .)
    FOR             reduce using rule 27 (expression -> STRING .)
    WHILE           reduce using rule 27 (expression -> STRING .)
    IF              reduce using rule 27 (expression -> STRING .)
    PRINT           reduce using rule 27 (expression -> STRING .)
    BREAK           reduce using rule 27 (expression -> STRING .)
    CONTINUE        reduce using rule 27 (expression -> STRING .)
    RETURN          reduce using rule 27 (expression -> STRING .)
    [               reduce using rule 27 (expression -> STRING .)
    EYE             reduce using rule 27 (expression -> STRING .)
    ONES            reduce using rule 27 (expression -> STRING .)
    ZEROS           reduce using rule 27 (expression -> STRING .)
    (               reduce using rule 27 (expression -> STRING .)
    STRING          reduce using rule 27 (expression -> STRING .)
    FLOATNUM        reduce using rule 27 (expression -> STRING .)
    INTNUM          reduce using rule 27 (expression -> STRING .)
    ID              reduce using rule 27 (expression -> STRING .)
    ,               reduce using rule 27 (expression -> STRING .)
    )               reduce using rule 27 (expression -> STRING .)


state 22

    (28) expression -> FLOATNUM .
    ;               reduce using rule 28 (expression -> FLOATNUM .)
    '               reduce using rule 28 (expression -> FLOATNUM .)
    =               reduce using rule 28 (expression -> FLOATNUM .)
    EQ              reduce using rule 28 (expression -> FLOATNUM .)
    NEQ             reduce using rule 28 (expression -> FLOATNUM .)
    GE              reduce using rule 28 (expression -> FLOATNUM .)
    LE              reduce using rule 28 (expression -> FLOATNUM .)
    GT              reduce using rule 28 (expression -> FLOATNUM .)
    LT              reduce using rule 28 (expression -> FLOATNUM .)
    DOTDIVIDE       reduce using rule 28 (expression -> FLOATNUM .)
    DOTTIMES        reduce using rule 28 (expression -> FLOATNUM .)
    DOTMINUS        reduce using rule 28 (expression -> FLOATNUM .)
    DOTPLUS         reduce using rule 28 (expression -> FLOATNUM .)
    /               reduce using rule 28 (expression -> FLOATNUM .)
    *               reduce using rule 28 (expression -> FLOATNUM .)
    -               reduce using rule 28 (expression -> FLOATNUM .)
    +               reduce using rule 28 (expression -> FLOATNUM .)
    {               reduce using rule 28 (expression -> FLOATNUM .)
    FOR             reduce using rule 28 (expression -> FLOATNUM .)
    WHILE           reduce using rule 28 (expression -> FLOATNUM .)
    IF              reduce using rule 28 (expression -> FLOATNUM .)
    PRINT           reduce using rule 28 (expression -> FLOATNUM .)
    BREAK           reduce using rule 28 (expression -> FLOATNUM .)
    CONTINUE        reduce using rule 28 (expression -> FLOATNUM .)
    RETURN          reduce using rule 28 (expression -> FLOATNUM .)
    [               reduce using rule 28 (expression -> FLOATNUM .)
    EYE             reduce using rule 28 (expression -> FLOATNUM .)
    ONES            reduce using rule 28 (expression -> FLOATNUM .)
    ZEROS           reduce using rule 28 (expression -> FLOATNUM .)
    (               reduce using rule 28 (expression -> FLOATNUM .)
    STRING          reduce using rule 28 (expression -> FLOATNUM .)
    FLOATNUM        reduce using rule 28 (expression -> FLOATNUM .)
    INTNUM          reduce using rule 28 (expression -> FLOATNUM .)
    ID              reduce using rule 28 (expression -> FLOATNUM .)
    ,               reduce using rule 28 (expression -> FLOATNUM .)
    )               reduce using rule 28 (expression -> FLOATNUM .)


state 23

    (29) expression -> INTNUM .
    ;               reduce using rule 29 (expression -> INTNUM .)
    '               reduce using rule 29 (expression -> INTNUM .)
    =               reduce using rule 29 (expression -> INTNUM .)
    EQ              reduce using rule 29 (expression -> INTNUM .)
    NEQ             reduce using rule 29 (expression -> INTNUM .)
    GE              reduce using rule 29 (expression -> INTNUM .)
    LE              reduce using rule 29 (expression -> INTNUM .)
    GT              reduce using rule 29 (expression -> INTNUM .)
    LT              reduce using rule 29 (expression -> INTNUM .)
    DOTDIVIDE       reduce using rule 29 (expression -> INTNUM .)
    DOTTIMES        reduce using rule 29 (expression -> INTNUM .)
    DOTMINUS        reduce using rule 29 (expression -> INTNUM .)
    DOTPLUS         reduce using rule 29 (expression -> INTNUM .)
    /               reduce using rule 29 (expression -> INTNUM .)
    *               reduce using rule 29 (expression -> INTNUM .)
    -               reduce using rule 29 (expression -> INTNUM .)
    +               reduce using rule 29 (expression -> INTNUM .)
    {               reduce using rule 29 (expression -> INTNUM .)
    FOR             reduce using rule 29 (expression -> INTNUM .)
    WHILE           reduce using rule 29 (expression -> INTNUM .)
    IF              reduce using rule 29 (expression -> INTNUM .)
    PRINT           reduce using rule 29 (expression -> INTNUM .)
    BREAK           reduce using rule 29 (expression -> INTNUM .)
    CONTINUE        reduce using rule 29 (expression -> INTNUM .)
    RETURN          reduce using rule 29 (expression -> INTNUM .)
    [               reduce using rule 29 (expression -> INTNUM .)
    EYE             reduce using rule 29 (expression -> INTNUM .)
    ONES            reduce using rule 29 (expression -> INTNUM .)
    ZEROS           reduce using rule 29 (expression -> INTNUM .)
    (               reduce using rule 29 (expression -> INTNUM .)
    STRING          reduce using rule 29 (expression -> INTNUM .)
    FLOATNUM        reduce using rule 29 (expression -> INTNUM .)
    INTNUM          reduce using rule 29 (expression -> INTNUM .)
    ID              reduce using rule 29 (expression -> INTNUM .)
    ,               reduce using rule 29 (expression -> INTNUM .)
    )               reduce using rule 29 (expression -> INTNUM .)


state 24

    (2) start -> { start . } start
    }               shift and go to state 64


state 25

    (3) start -> statement start .
    $end            reduce using rule 3 (start -> statement start .)
    }               reduce using rule 3 (start -> statement start .)


state 26

    (43) statement -> FOR ID . = range block
    =               shift and go to state 65


state 27

    (39) assignable -> ID [ . indexes ]
    (41) indexes -> . INTNUM
    (42) indexes -> . INTNUM , indexes
    INTNUM          shift and go to state 67

    indexes                        shift and go to state 66

state 28

    (44) statement -> WHILE expression . block
    (10) expression -> expression . '
    (11) expression -> expression . = expression
    (12) expression -> expression . EQ expression
    (13) expression -> expression . NEQ expression
    (14) expression -> expression . GE expression
    (15) expression -> expression . LE expression
    (16) expression -> expression . GT expression
    (17) expression -> expression . LT expression
    (18) expression -> expression . DOTDIVIDE expression
    (19) expression -> expression . DOTTIMES expression
    (20) expression -> expression . DOTMINUS expression
    (21) expression -> expression . DOTPLUS expression
    (22) expression -> expression . / expression
    (23) expression -> expression . * expression
    (24) expression -> expression . - expression
    (25) expression -> expression . + expression
    (57) block -> . { start }
    (58) block -> . statement
    (43) statement -> . FOR ID = range block
    (44) statement -> . WHILE expression block
    (45) statement -> . IF expression block ELSE block
    (46) statement -> . IF expression block
    (47) statement -> . PRINT prints ;
    (48) statement -> . expression ;
    (49) statement -> . BREAK ;
    (50) statement -> . CONTINUE ;
    (51) statement -> . RETURN expression ;
    (52) statement -> . assignable DIVASSIGN expression ;
    (53) statement -> . assignable MULASSIGN expression ;
    (54) statement -> . assignable SUBASSIGN expression ;
    (55) statement -> . assignable ADDASSIGN expression ;
    (56) statement -> . assignable = expression ;
    (5) expression -> . [ list ]
    (6) expression -> . EYE ( expression )
    (7) expression -> . ONES ( expression )
    (8) expression -> . ZEROS ( expression )
    (9) expression -> . - expression
    (10) expression -> . expression '
    (11) expression -> . expression = expression
    (12) expression -> . expression EQ expression
    (13) expression -> . expression NEQ expression
    (14) expression -> . expression GE expression
    (15) expression -> . expression LE expression
    (16) expression -> . expression GT expression
    (17) expression -> . expression LT expression
    (18) expression -> . expression DOTDIVIDE expression
    (19) expression -> . expression DOTTIMES expression
    (20) expression -> . expression DOTMINUS expression
    (21) expression -> . expression DOTPLUS expression
    (22) expression -> . expression / expression
    (23) expression -> . expression * expression
    (24) expression -> . expression - expression
    (25) expression -> . expression + expression
    (26) expression -> . ( expression )
    (27) expression -> . STRING
    (28) expression -> . FLOATNUM
    (29) expression -> . INTNUM
    (39) assignable -> . ID [ indexes ]
    (40) assignable -> . ID
    '               shift and go to state 30
    =               shift and go to state 31
    EQ              shift and go to state 32
    NEQ             shift and go to state 33
    GE              shift and go to state 34
    LE              shift and go to state 35
    GT              shift and go to state 36
    LT              shift and go to state 37
    DOTDIVIDE       shift and go to state 38
    DOTTIMES        shift and go to state 39
    DOTMINUS        shift and go to state 40
    DOTPLUS         shift and go to state 41
    /               shift and go to state 42
    *               shift and go to state 43
    -               shift and go to state 69
    +               shift and go to state 45
    {               shift and go to state 70
    FOR             shift and go to state 5
    WHILE           shift and go to state 7
    IF              shift and go to state 9
    PRINT           shift and go to state 10
    BREAK           shift and go to state 11
    CONTINUE        shift and go to state 12
    RETURN          shift and go to state 13
    [               shift and go to state 15
    EYE             shift and go to state 16
    ONES            shift and go to state 18
    ZEROS           shift and go to state 19
    (               shift and go to state 17
    STRING          shift and go to state 21
    FLOATNUM        shift and go to state 22
    INTNUM          shift and go to state 23
    ID              shift and go to state 6

    expression                     shift and go to state 8
    block                          shift and go to state 68
    statement                      shift and go to state 71
    assignable                     shift and go to state 14

state 29

    (48) statement -> expression ; .
    {               reduce using rule 48 (statement -> expression ; .)
    FOR             reduce using rule 48 (statement -> expression ; .)
    WHILE           reduce using rule 48 (statement -> expression ; .)
    IF              reduce using rule 48 (statement -> expression ; .)
    PRINT           reduce using rule 48 (statement -> expression ; .)
    BREAK           reduce using rule 48 (statement -> expression ; .)
    CONTINUE        reduce using rule 48 (statement -> expression ; .)
    RETURN          reduce using rule 48 (statement -> expression ; .)
    [               reduce using rule 48 (statement -> expression ; .)
    EYE             reduce using rule 48 (statement -> expression ; .)
    ONES            reduce using rule 48 (statement -> expression ; .)
    ZEROS           reduce using rule 48 (statement -> expression ; .)
    -               reduce using rule 48 (statement -> expression ; .)
    (               reduce using rule 48 (statement -> expression ; .)
    STRING          reduce using rule 48 (statement -> expression ; .)
    FLOATNUM        reduce using rule 48 (statement -> expression ; .)
    INTNUM          reduce using rule 48 (statement -> expression ; .)
    ID              reduce using rule 48 (statement -> expression ; .)
    $end            reduce using rule 48 (statement -> expression ; .)
    }               reduce using rule 48 (statement -> expression ; .)
    ELSE            reduce using rule 48 (statement -> expression ; .)


state 30

    (10) expression -> expression ' .
    ;               reduce using rule 10 (expression -> expression ' .)
    '               reduce using rule 10 (expression -> expression ' .)
    =               reduce using rule 10 (expression -> expression ' .)
    EQ              reduce using rule 10 (expression -> expression ' .)
    NEQ             reduce using rule 10 (expression -> expression ' .)
    GE              reduce using rule 10 (expression -> expression ' .)
    LE              reduce using rule 10 (expression -> expression ' .)
    GT              reduce using rule 10 (expression -> expression ' .)
    LT              reduce using rule 10 (expression -> expression ' .)
    DOTDIVIDE       reduce using rule 10 (expression -> expression ' .)
    DOTTIMES        reduce using rule 10 (expression -> expression ' .)
    DOTMINUS        reduce using rule 10 (expression -> expression ' .)
    DOTPLUS         reduce using rule 10 (expression -> expression ' .)
    /               reduce using rule 10 (expression -> expression ' .)
    *               reduce using rule 10 (expression -> expression ' .)
    -               reduce using rule 10 (expression -> expression ' .)
    +               reduce using rule 10 (expression -> expression ' .)
    {               reduce using rule 10 (expression -> expression ' .)
    FOR             reduce using rule 10 (expression -> expression ' .)
    WHILE           reduce using rule 10 (expression -> expression ' .)
    IF              reduce using rule 10 (expression -> expression ' .)
    PRINT           reduce using rule 10 (expression -> expression ' .)
    BREAK           reduce using rule 10 (expression -> expression ' .)
    CONTINUE        reduce using rule 10 (expression -> expression ' .)
    RETURN          reduce using rule 10 (expression -> expression ' .)
    [               reduce using rule 10 (expression -> expression ' .)
    EYE             reduce using rule 10 (expression -> expression ' .)
    ONES            reduce using rule 10 (expression -> expression ' .)
    ZEROS           reduce using rule 10 (expression -> expression ' .)
    (               reduce using rule 10 (expression -> expression ' .)
    STRING          reduce using rule 10 (expression -> expression ' .)
    FLOATNUM        reduce using rule 10 (expression -> expression ' .)
    INTNUM          reduce using rule 10 (expression -> expression ' .)
    ID              reduce using rule 10 (expression -> expression ' .)
    ,               reduce using rule 10 (expression -> expression ' .)
    )               reduce using rule 10 (expression -> expression ' .)


state 31

    (11) expression -> expression = . expression
    (5) expression -> . [ list ]
    (6) expression -> . EYE ( expression )
    (7) expression -> . ONES ( expression )
    (8) expression -> . ZEROS ( expression )
    (9) expression -> . - expression
    (10) expression -> . expression '
    (11) expression -> . expression = expression
    (12) expression -> . expression EQ expression
    (13) expression -> . expression NEQ expression
    (14) expression -> . expression GE expression
    (15) expression -> . expression LE expression
    (16) expression -> . expression GT expression
    (17) expression -> . expression LT expression
    (18) expression -> . expression DOTDIVIDE expression
    (19) expression -> . expression DOTTIMES expression
    (20) expression -> . expression DOTMINUS expression
    (21) expression -> . expression DOTPLUS expression
    (22) expression -> . expression / expression
    (23) expression -> . expression * expression
    (24) expression -> . expression - expression
    (25) expression -> . expression + expression
    (26) expression -> . ( expression )
    (27) expression -> . STRING
    (28) expression -> . FLOATNUM
    (29) expression -> . INTNUM
    [               shift and go to state 15
    EYE             shift and go to state 16
    ONES            shift and go to state 18
    ZEROS           shift and go to state 19
    -               shift and go to state 20
    (               shift and go to state 17
    STRING          shift and go to state 21
    FLOATNUM        shift and go to state 22
    INTNUM          shift and go to state 23

    expression                     shift and go to state 72

state 32

    (12) expression -> expression EQ . expression
    (5) expression -> . [ list ]
    (6) expression -> . EYE ( expression )
    (7) expression -> . ONES ( expression )
    (8) expression -> . ZEROS ( expression )
    (9) expression -> . - expression
    (10) expression -> . expression '
    (11) expression -> . expression = expression
    (12) expression -> . expression EQ expression
    (13) expression -> . expression NEQ expression
    (14) expression -> . expression GE expression
    (15) expression -> . expression LE expression
    (16) expression -> . expression GT expression
    (17) expression -> . expression LT expression
    (18) expression -> . expression DOTDIVIDE expression
    (19) expression -> . expression DOTTIMES expression
    (20) expression -> . expression DOTMINUS expression
    (21) expression -> . expression DOTPLUS expression
    (22) expression -> . expression / expression
    (23) expression -> . expression * expression
    (24) expression -> . expression - expression
    (25) expression -> . expression + expression
    (26) expression -> . ( expression )
    (27) expression -> . STRING
    (28) expression -> . FLOATNUM
    (29) expression -> . INTNUM
    [               shift and go to state 15
    EYE             shift and go to state 16
    ONES            shift and go to state 18
    ZEROS           shift and go to state 19
    -               shift and go to state 20
    (               shift and go to state 17
    STRING          shift and go to state 21
    FLOATNUM        shift and go to state 22
    INTNUM          shift and go to state 23

    expression                     shift and go to state 73

state 33

    (13) expression -> expression NEQ . expression
    (5) expression -> . [ list ]
    (6) expression -> . EYE ( expression )
    (7) expression -> . ONES ( expression )
    (8) expression -> . ZEROS ( expression )
    (9) expression -> . - expression
    (10) expression -> . expression '
    (11) expression -> . expression = expression
    (12) expression -> . expression EQ expression
    (13) expression -> . expression NEQ expression
    (14) expression -> . expression GE expression
    (15) expression -> . expression LE expression
    (16) expression -> . expression GT expression
    (17) expression -> . expression LT expression
    (18) expression -> . expression DOTDIVIDE expression
    (19) expression -> . expression DOTTIMES expression
    (20) expression -> . expression DOTMINUS expression
    (21) expression -> . expression DOTPLUS expression
    (22) expression -> . expression / expression
    (23) expression -> . expression * expression
    (24) expression -> . expression - expression
    (25) expression -> . expression + expression
    (26) expression -> . ( expression )
    (27) expression -> . STRING
    (28) expression -> . FLOATNUM
    (29) expression -> . INTNUM
    [               shift and go to state 15
    EYE             shift and go to state 16
    ONES            shift and go to state 18
    ZEROS           shift and go to state 19
    -               shift and go to state 20
    (               shift and go to state 17
    STRING          shift and go to state 21
    FLOATNUM        shift and go to state 22
    INTNUM          shift and go to state 23

    expression                     shift and go to state 74

state 34

    (14) expression -> expression GE . expression
    (5) expression -> . [ list ]
    (6) expression -> . EYE ( expression )
    (7) expression -> . ONES ( expression )
    (8) expression -> . ZEROS ( expression )
    (9) expression -> . - expression
    (10) expression -> . expression '
    (11) expression -> . expression = expression
    (12) expression -> . expression EQ expression
    (13) expression -> . expression NEQ expression
    (14) expression -> . expression GE expression
    (15) expression -> . expression LE expression
    (16) expression -> . expression GT expression
    (17) expression -> . expression LT expression
    (18) expression -> . expression DOTDIVIDE expression
    (19) expression -> . expression DOTTIMES expression
    (20) expression -> . expression DOTMINUS expression
    (21) expression -> . expression DOTPLUS expression
    (22) expression -> . expression / expression
    (23) expression -> . expression * expression
    (24) expression -> . expression - expression
    (25) expression -> . expression + expression
    (26) expression -> . ( expression )
    (27) expression -> . STRING
    (28) expression -> . FLOATNUM
    (29) expression -> . INTNUM
    [               shift and go to state 15
    EYE             shift and go to state 16
    ONES            shift and go to state 18
    ZEROS           shift and go to state 19
    -               shift and go to state 20
    (               shift and go to state 17
    STRING          shift and go to state 21
    FLOATNUM        shift and go to state 22
    INTNUM          shift and go to state 23

    expression                     shift and go to state 75

state 35

    (15) expression -> expression LE . expression
    (5) expression -> . [ list ]
    (6) expression -> . EYE ( expression )
    (7) expression -> . ONES ( expression )
    (8) expression -> . ZEROS ( expression )
    (9) expression -> . - expression
    (10) expression -> . expression '
    (11) expression -> . expression = expression
    (12) expression -> . expression EQ expression
    (13) expression -> . expression NEQ expression
    (14) expression -> . expression GE expression
    (15) expression -> . expression LE expression
    (16) expression -> . expression GT expression
    (17) expression -> . expression LT expression
    (18) expression -> . expression DOTDIVIDE expression
    (19) expression -> . expression DOTTIMES expression
    (20) expression -> . expression DOTMINUS expression
    (21) expression -> . expression DOTPLUS expression
    (22) expression -> . expression / expression
    (23) expression -> . expression * expression
    (24) expression -> . expression - expression
    (25) expression -> . expression + expression
    (26) expression -> . ( expression )
    (27) expression -> . STRING
    (28) expression -> . FLOATNUM
    (29) expression -> . INTNUM
    [               shift and go to state 15
    EYE             shift and go to state 16
    ONES            shift and go to state 18
    ZEROS           shift and go to state 19
    -               shift and go to state 20
    (               shift and go to state 17
    STRING          shift and go to state 21
    FLOATNUM        shift and go to state 22
    INTNUM          shift and go to state 23

    expression                     shift and go to state 76

state 36

    (16) expression -> expression GT . expression
    (5) expression -> . [ list ]
    (6) expression -> . EYE ( expression )
    (7) expression -> . ONES ( expression )
    (8) expression -> . ZEROS ( expression )
    (9) expression -> . - expression
    (10) expression -> . expression '
    (11) expression -> . expression = expression
    (12) expression -> . expression EQ expression
    (13) expression -> . expression NEQ expression
    (14) expression -> . expression GE expression
    (15) expression -> . expression LE expression
    (16) expression -> . expression GT expression
    (17) expression -> . expression LT expression
    (18) expression -> . expression DOTDIVIDE expression
    (19) expression -> . expression DOTTIMES expression
    (20) expression -> . expression DOTMINUS expression
    (21) expression -> . expression DOTPLUS expression
    (22) expression -> . expression / expression
    (23) expression -> . expression * expression
    (24) expression -> . expression - expression
    (25) expression -> . expression + expression
    (26) expression -> . ( expression )
    (27) expression -> . STRING
    (28) expression -> . FLOATNUM
    (29) expression -> . INTNUM
    [               shift and go to state 15
    EYE             shift and go to state 16
    ONES            shift and go to state 18
    ZEROS           shift and go to state 19
    -               shift and go to state 20
    (               shift and go to state 17
    STRING          shift and go to state 21
    FLOATNUM        shift and go to state 22
    INTNUM          shift and go to state 23

    expression                     shift and go to state 77

state 37

    (17) expression -> expression LT . expression
    (5) expression -> . [ list ]
    (6) expression -> . EYE ( expression )
    (7) expression -> . ONES ( expression )
    (8) expression -> . ZEROS ( expression )
    (9) expression -> . - expression
    (10) expression -> . expression '
    (11) expression -> . expression = expression
    (12) expression -> . expression EQ expression
    (13) expression -> . expression NEQ expression
    (14) expression -> . expression GE expression
    (15) expression -> . expression LE expression
    (16) expression -> . expression GT expression
    (17) expression -> . expression LT expression
    (18) expression -> . expression DOTDIVIDE expression
    (19) expression -> . expression DOTTIMES expression
    (20) expression -> . expression DOTMINUS expression
    (21) expression -> . expression DOTPLUS expression
    (22) expression -> . expression / expression
    (23) expression -> . expression * expression
    (24) expression -> . expression - expression
    (25) expression -> . expression + expression
    (26) expression -> . ( expression )
    (27) expression -> . STRING
    (28) expression -> . FLOATNUM
    (29) expression -> . INTNUM
    [               shift and go to state 15
    EYE             shift and go to state 16
    ONES            shift and go to state 18
    ZEROS           shift and go to state 19
    -               shift and go to state 20
    (               shift and go to state 17
    STRING          shift and go to state 21
    FLOATNUM        shift and go to state 22
    INTNUM          shift and go to state 23

    expression                     shift and go to state 78

state 38

    (18) expression -> expression DOTDIVIDE . expression
    (5) expression -> . [ list ]
    (6) expression -> . EYE ( expression )
    (7) expression -> . ONES ( expression )
    (8) expression -> . ZEROS ( expression )
    (9) expression -> . - expression
    (10) expression -> . expression '
    (11) expression -> . expression = expression
    (12) expression -> . expression EQ expression
    (13) expression -> . expression NEQ expression
    (14) expression -> . expression GE expression
    (15) expression -> . expression LE expression
    (16) expression -> . expression GT expression
    (17) expression -> . expression LT expression
    (18) expression -> . expression DOTDIVIDE expression
    (19) expression -> . expression DOTTIMES expression
    (20) expression -> . expression DOTMINUS expression
    (21) expression -> . expression DOTPLUS expression
    (22) expression -> . expression / expression
    (23) expression -> . expression * expression
    (24) expression -> . expression - expression
    (25) expression -> . expression + expression
    (26) expression -> . ( expression )
    (27) expression -> . STRING
    (28) expression -> . FLOATNUM
    (29) expression -> . INTNUM
    [               shift and go to state 15
    EYE             shift and go to state 16
    ONES            shift and go to state 18
    ZEROS           shift and go to state 19
    -               shift and go to state 20
    (               shift and go to state 17
    STRING          shift and go to state 21
    FLOATNUM        shift and go to state 22
    INTNUM          shift and go to state 23

    expression                     shift and go to state 79

state 39

    (19) expression -> expression DOTTIMES . expression
    (5) expression -> . [ list ]
    (6) expression -> . EYE ( expression )
    (7) expression -> . ONES ( expression )
    (8) expression -> . ZEROS ( expression )
    (9) expression -> . - expression
    (10) expression -> . expression '
    (11) expression -> . expression = expression
    (12) expression -> . expression EQ expression
    (13) expression -> . expression NEQ expression
    (14) expression -> . expression GE expression
    (15) expression -> . expression LE expression
    (16) expression -> . expression GT expression
    (17) expression -> . expression LT expression
    (18) expression -> . expression DOTDIVIDE expression
    (19) expression -> . expression DOTTIMES expression
    (20) expression -> . expression DOTMINUS expression
    (21) expression -> . expression DOTPLUS expression
    (22) expression -> . expression / expression
    (23) expression -> . expression * expression
    (24) expression -> . expression - expression
    (25) expression -> . expression + expression
    (26) expression -> . ( expression )
    (27) expression -> . STRING
    (28) expression -> . FLOATNUM
    (29) expression -> . INTNUM
    [               shift and go to state 15
    EYE             shift and go to state 16
    ONES            shift and go to state 18
    ZEROS           shift and go to state 19
    -               shift and go to state 20
    (               shift and go to state 17
    STRING          shift and go to state 21
    FLOATNUM        shift and go to state 22
    INTNUM          shift and go to state 23

    expression                     shift and go to state 80

state 40

    (20) expression -> expression DOTMINUS . expression
    (5) expression -> . [ list ]
    (6) expression -> . EYE ( expression )
    (7) expression -> . ONES ( expression )
    (8) expression -> . ZEROS ( expression )
    (9) expression -> . - expression
    (10) expression -> . expression '
    (11) expression -> . expression = expression
    (12) expression -> . expression EQ expression
    (13) expression -> . expression NEQ expression
    (14) expression -> . expression GE expression
    (15) expression -> . expression LE expression
    (16) expression -> . expression GT expression
    (17) expression -> . expression LT expression
    (18) expression -> . expression DOTDIVIDE expression
    (19) expression -> . expression DOTTIMES expression
    (20) expression -> . expression DOTMINUS expression
    (21) expression -> . expression DOTPLUS expression
    (22) expression -> . expression / expression
    (23) expression -> . expression * expression
    (24) expression -> . expression - expression
    (25) expression -> . expression + expression
    (26) expression -> . ( expression )
    (27) expression -> . STRING
    (28) expression -> . FLOATNUM
    (29) expression -> . INTNUM
    [               shift and go to state 15
    EYE             shift and go to state 16
    ONES            shift and go to state 18
    ZEROS           shift and go to state 19
    -               shift and go to state 20
    (               shift and go to state 17
    STRING          shift and go to state 21
    FLOATNUM        shift and go to state 22
    INTNUM          shift and go to state 23

    expression                     shift and go to state 81

state 41

    (21) expression -> expression DOTPLUS . expression
    (5) expression -> . [ list ]
    (6) expression -> . EYE ( expression )
    (7) expression -> . ONES ( expression )
    (8) expression -> . ZEROS ( expression )
    (9) expression -> . - expression
    (10) expression -> . expression '
    (11) expression -> . expression = expression
    (12) expression -> . expression EQ expression
    (13) expression -> . expression NEQ expression
    (14) expression -> . expression GE expression
    (15) expression -> . expression LE expression
    (16) expression -> . expression GT expression
    (17) expression -> . expression LT expression
    (18) expression -> . expression DOTDIVIDE expression
    (19) expression -> . expression DOTTIMES expression
    (20) expression -> . expression DOTMINUS expression
    (21) expression -> . expression DOTPLUS expression
    (22) expression -> . expression / expression
    (23) expression -> . expression * expression
    (24) expression -> . expression - expression
    (25) expression -> . expression + expression
    (26) expression -> . ( expression )
    (27) expression -> . STRING
    (28) expression -> . FLOATNUM
    (29) expression -> . INTNUM
    [               shift and go to state 15
    EYE             shift and go to state 16
    ONES            shift and go to state 18
    ZEROS           shift and go to state 19
    -               shift and go to state 20
    (               shift and go to state 17
    STRING          shift and go to state 21
    FLOATNUM        shift and go to state 22
    INTNUM          shift and go to state 23

    expression                     shift and go to state 82

state 42

    (22) expression -> expression / . expression
    (5) expression -> . [ list ]
    (6) expression -> . EYE ( expression )
    (7) expression -> . ONES ( expression )
    (8) expression -> . ZEROS ( expression )
    (9) expression -> . - expression
    (10) expression -> . expression '
    (11) expression -> . expression = expression
    (12) expression -> . expression EQ expression
    (13) expression -> . expression NEQ expression
    (14) expression -> . expression GE expression
    (15) expression -> . expression LE expression
    (16) expression -> . expression GT expression
    (17) expression -> . expression LT expression
    (18) expression -> . expression DOTDIVIDE expression
    (19) expression -> . expression DOTTIMES expression
    (20) expression -> . expression DOTMINUS expression
    (21) expression -> . expression DOTPLUS expression
    (22) expression -> . expression / expression
    (23) expression -> . expression * expression
    (24) expression -> . expression - expression
    (25) expression -> . expression + expression
    (26) expression -> . ( expression )
    (27) expression -> . STRING
    (28) expression -> . FLOATNUM
    (29) expression -> . INTNUM
    [               shift and go to state 15
    EYE             shift and go to state 16
    ONES            shift and go to state 18
    ZEROS           shift and go to state 19
    -               shift and go to state 20
    (               shift and go to state 17
    STRING          shift and go to state 21
    FLOATNUM        shift and go to state 22
    INTNUM          shift and go to state 23

    expression                     shift and go to state 83

state 43

    (23) expression -> expression * . expression
    (5) expression -> . [ list ]
    (6) expression -> . EYE ( expression )
    (7) expression -> . ONES ( expression )
    (8) expression -> . ZEROS ( expression )
    (9) expression -> . - expression
    (10) expression -> . expression '
    (11) expression -> . expression = expression
    (12) expression -> . expression EQ expression
    (13) expression -> . expression NEQ expression
    (14) expression -> . expression GE expression
    (15) expression -> . expression LE expression
    (16) expression -> . expression GT expression
    (17) expression -> . expression LT expression
    (18) expression -> . expression DOTDIVIDE expression
    (19) expression -> . expression DOTTIMES expression
    (20) expression -> . expression DOTMINUS expression
    (21) expression -> . expression DOTPLUS expression
    (22) expression -> . expression / expression
    (23) expression -> . expression * expression
    (24) expression -> . expression - expression
    (25) expression -> . expression + expression
    (26) expression -> . ( expression )
    (27) expression -> . STRING
    (28) expression -> . FLOATNUM
    (29) expression -> . INTNUM
    [               shift and go to state 15
    EYE             shift and go to state 16
    ONES            shift and go to state 18
    ZEROS           shift and go to state 19
    -               shift and go to state 20
    (               shift and go to state 17
    STRING          shift and go to state 21
    FLOATNUM        shift and go to state 22
    INTNUM          shift and go to state 23

    expression                     shift and go to state 84

state 44

    (24) expression -> expression - . expression
    (5) expression -> . [ list ]
    (6) expression -> . EYE ( expression )
    (7) expression -> . ONES ( expression )
    (8) expression -> . ZEROS ( expression )
    (9) expression -> . - expression
    (10) expression -> . expression '
    (11) expression -> . expression = expression
    (12) expression -> . expression EQ expression
    (13) expression -> . expression NEQ expression
    (14) expression -> . expression GE expression
    (15) expression -> . expression LE expression
    (16) expression -> . expression GT expression
    (17) expression -> . expression LT expression
    (18) expression -> . expression DOTDIVIDE expression
    (19) expression -> . expression DOTTIMES expression
    (20) expression -> . expression DOTMINUS expression
    (21) expression -> . expression DOTPLUS expression
    (22) expression -> . expression / expression
    (23) expression -> . expression * expression
    (24) expression -> . expression - expression
    (25) expression -> . expression + expression
    (26) expression -> . ( expression )
    (27) expression -> . STRING
    (28) expression -> . FLOATNUM
    (29) expression -> . INTNUM
    [               shift and go to state 15
    EYE             shift and go to state 16
    ONES            shift and go to state 18
    ZEROS           shift and go to state 19
    -               shift and go to state 20
    (               shift and go to state 17
    STRING          shift and go to state 21
    FLOATNUM        shift and go to state 22
    INTNUM          shift and go to state 23

    expression                     shift and go to state 85

state 45

    (25) expression -> expression + . expression
    (5) expression -> . [ list ]
    (6) expression -> . EYE ( expression )
    (7) expression -> . ONES ( expression )
    (8) expression -> . ZEROS ( expression )
    (9) expression -> . - expression
    (10) expression -> . expression '
    (11) expression -> . expression = expression
    (12) expression -> . expression EQ expression
    (13) expression -> . expression NEQ expression
    (14) expression -> . expression GE expression
    (15) expression -> . expression LE expression
    (16) expression -> . expression GT expression
    (17) expression -> . expression LT expression
    (18) expression -> . expression DOTDIVIDE expression
    (19) expression -> . expression DOTTIMES expression
    (20) expression -> . expression DOTMINUS expression
    (21) expression -> . expression DOTPLUS expression
    (22) expression -> . expression / expression
    (23) expression -> . expression * expression
    (24) expression -> . expression - expression
    (25) expression -> . expression + expression
    (26) expression -> . ( expression )
    (27) expression -> . STRING
    (28) expression -> . FLOATNUM
    (29) expression -> . INTNUM
    [               shift and go to state 15
    EYE             shift and go to state 16
    ONES            shift and go to state 18
    ZEROS           shift and go to state 19
    -               shift and go to state 20
    (               shift and go to state 17
    STRING          shift and go to state 21
    FLOATNUM        shift and go to state 22
    INTNUM          shift and go to state 23

    expression                     shift and go to state 86

state 46

    (45) statement -> IF expression . block ELSE block
    (46) statement -> IF expression . block
    (10) expression -> expression . '
    (11) expression -> expression . = expression
    (12) expression -> expression . EQ expression
    (13) expression -> expression . NEQ expression
    (14) expression -> expression . GE expression
    (15) expression -> expression . LE expression
    (16) expression -> expression . GT expression
    (17) expression -> expression . LT expression
    (18) expression -> expression . DOTDIVIDE expression
    (19) expression -> expression . DOTTIMES expression
    (20) expression -> expression . DOTMINUS expression
    (21) expression -> expression . DOTPLUS expression
    (22) expression -> expression . / expression
    (23) expression -> expression . * expression
    (24) expression -> expression . - expression
    (25) expression -> expression . + expression
    (57) block -> . { start }
    (58) block -> . statement
    (43) statement -> . FOR ID = range block
    (44) statement -> . WHILE expression block
    (45) statement -> . IF expression block ELSE block
    (46) statement -> . IF expression block
    (47) statement -> . PRINT prints ;
    (48) statement -> . expression ;
    (49) statement -> . BREAK ;
    (50) statement -> . CONTINUE ;
    (51) statement -> . RETURN expression ;
    (52) statement -> . assignable DIVASSIGN expression ;
    (53) statement -> . assignable MULASSIGN expression ;
    (54) statement -> . assignable SUBASSIGN expression ;
    (55) statement -> . assignable ADDASSIGN expression ;
    (56) statement -> . assignable = expression ;
    (5) expression -> . [ list ]
    (6) expression -> . EYE ( expression )
    (7) expression -> . ONES ( expression )
    (8) expression -> . ZEROS ( expression )
    (9) expression -> . - expression
    (10) expression -> . expression '
    (11) expression -> . expression = expression
    (12) expression -> . expression EQ expression
    (13) expression -> . expression NEQ expression
    (14) expression -> . expression GE expression
    (15) expression -> . expression LE expression
    (16) expression -> . expression GT expression
    (17) expression -> . expression LT expression
    (18) expression -> . expression DOTDIVIDE expression
    (19) expression -> . expression DOTTIMES expression
    (20) expression -> . expression DOTMINUS expression
    (21) expression -> . expression DOTPLUS expression
    (22) expression -> . expression / expression
    (23) expression -> . expression * expression
    (24) expression -> . expression - expression
    (25) expression -> . expression + expression
    (26) expression -> . ( expression )
    (27) expression -> . STRING
    (28) expression -> . FLOATNUM
    (29) expression -> . INTNUM
    (39) assignable -> . ID [ indexes ]
    (40) assignable -> . ID
    '               shift and go to state 30
    =               shift and go to state 31
    EQ              shift and go to state 32
    NEQ             shift and go to state 33
    GE              shift and go to state 34
    LE              shift and go to state 35
    GT              shift and go to state 36
    LT              shift and go to state 37
    DOTDIVIDE       shift and go to state 38
    DOTTIMES        shift and go to state 39
    DOTMINUS        shift and go to state 40
    DOTPLUS         shift and go to state 41
    /               shift and go to state 42
    *               shift and go to state 43
    -               shift and go to state 69
    +               shift and go to state 45
    {               shift and go to state 70
    FOR             shift and go to state 5
    WHILE           shift and go to state 7
    IF              shift and go to state 9
    PRINT           shift and go to state 10
    BREAK           shift and go to state 11
    CONTINUE        shift and go to state 12
    RETURN          shift and go to state 13
    [               shift and go to state 15
    EYE             shift and go to state 16
    ONES            shift and go to state 18
    ZEROS           shift and go to state 19
    (               shift and go to state 17
    STRING          shift and go to state 21
    FLOATNUM        shift and go to state 22
    INTNUM          shift and go to state 23
    ID              shift and go to state 6

    expression                     shift and go to state 8
    block                          shift and go to state 87
    statement                      shift and go to state 71
    assignable                     shift and go to state 14

state 47

    (47) statement -> PRINT prints . ;
    ;               shift and go to state 88


state 48

    (59) prints -> expression . ;
    (60) prints -> expression . , prints
    (10) expression -> expression . '
    (11) expression -> expression . = expression
    (12) expression -> expression . EQ expression
    (13) expression -> expression . NEQ expression
    (14) expression -> expression . GE expression
    (15) expression -> expression . LE expression
    (16) expression -> expression . GT expression
    (17) expression -> expression . LT expression
    (18) expression -> expression . DOTDIVIDE expression
    (19) expression -> expression . DOTTIMES expression
    (20) expression -> expression . DOTMINUS expression
    (21) expression -> expression . DOTPLUS expression
    (22) expression -> expression . / expression
    (23) expression -> expression . * expression
    (24) expression -> expression . - expression
    (25) expression -> expression . + expression
    ;               shift and go to state 89
    ,               shift and go to state 90
    '               shift and go to state 30
    =               shift and go to state 31
    EQ              shift and go to state 32
    NEQ             shift and go to state 33
    GE              shift and go to state 34
    LE              shift and go to state 35
    GT              shift and go to state 36
    LT              shift and go to state 37
    DOTDIVIDE       shift and go to state 38
    DOTTIMES        shift and go to state 39
    DOTMINUS        shift and go to state 40
    DOTPLUS         shift and go to state 41
    /               shift and go to state 42
    *               shift and go to state 43
    -               shift and go to state 44
    +               shift and go to state 45


state 49

    (49) statement -> BREAK ; .
    {               reduce using rule 49 (statement -> BREAK ; .)
    FOR             reduce using rule 49 (statement -> BREAK ; .)
    WHILE           reduce using rule 49 (statement -> BREAK ; .)
    IF              reduce using rule 49 (statement -> BREAK ; .)
    PRINT           reduce using rule 49 (statement -> BREAK ; .)
    BREAK           reduce using rule 49 (statement -> BREAK ; .)
    CONTINUE        reduce using rule 49 (statement -> BREAK ; .)
    RETURN          reduce using rule 49 (statement -> BREAK ; .)
    [               reduce using rule 49 (statement -> BREAK ; .)
    EYE             reduce using rule 49 (statement -> BREAK ; .)
    ONES            reduce using rule 49 (statement -> BREAK ; .)
    ZEROS           reduce using rule 49 (statement -> BREAK ; .)
    -               reduce using rule 49 (statement -> BREAK ; .)
    (               reduce using rule 49 (statement -> BREAK ; .)
    STRING          reduce using rule 49 (statement -> BREAK ; .)
    FLOATNUM        reduce using rule 49 (statement -> BREAK ; .)
    INTNUM          reduce using rule 49 (statement -> BREAK ; .)
    ID              reduce using rule 49 (statement -> BREAK ; .)
    $end            reduce using rule 49 (statement -> BREAK ; .)
    }               reduce using rule 49 (statement -> BREAK ; .)
    ELSE            reduce using rule 49 (statement -> BREAK ; .)


state 50

    (50) statement -> CONTINUE ; .
    {               reduce using rule 50 (statement -> CONTINUE ; .)
    FOR             reduce using rule 50 (statement -> CONTINUE ; .)
    WHILE           reduce using rule 50 (statement -> CONTINUE ; .)
    IF              reduce using rule 50 (statement -> CONTINUE ; .)
    PRINT           reduce using rule 50 (statement -> CONTINUE ; .)
    BREAK           reduce using rule 50 (statement -> CONTINUE ; .)
    CONTINUE        reduce using rule 50 (statement -> CONTINUE ; .)
    RETURN          reduce using rule 50 (statement -> CONTINUE ; .)
    [               reduce using rule 50 (statement -> CONTINUE ; .)
    EYE             reduce using rule 50 (statement -> CONTINUE ; .)
    ONES            reduce using rule 50 (statement -> CONTINUE ; .)
    ZEROS           reduce using rule 50 (statement -> CONTINUE ; .)
    -               reduce using rule 50 (statement -> CONTINUE ; .)
    (               reduce using rule 50 (statement -> CONTINUE ; .)
    STRING          reduce using rule 50 (statement -> CONTINUE ; .)
    FLOATNUM        reduce using rule 50 (statement -> CONTINUE ; .)
    INTNUM          reduce using rule 50 (statement -> CONTINUE ; .)
    ID              reduce using rule 50 (statement -> CONTINUE ; .)
    $end            reduce using rule 50 (statement -> CONTINUE ; .)
    }               reduce using rule 50 (statement -> CONTINUE ; .)
    ELSE            reduce using rule 50 (statement -> CONTINUE ; .)


state 51

    (51) statement -> RETURN expression . ;
    (10) expression -> expression . '
    (11) expression -> expression . = expression
    (12) expression -> expression . EQ expression
    (13) expression -> expression . NEQ expression
    (14) expression -> expression . GE expression
    (15) expression -> expression . LE expression
    (16) expression -> expression . GT expression
    (17) expression -> expression . LT expression
    (18) expression -> expression . DOTDIVIDE expression
    (19) expression -> expression . DOTTIMES expression
    (20) expression -> expression . DOTMINUS expression
    (21) expression -> expression . DOTPLUS expression
    (22) expression -> expression . / expression
    (23) expression -> expression . * expression
    (24) expression -> expression . - expression
    (25) expression -> expression . + expression
    ;               shift and go to state 91
    '               shift and go to state 30
    =               shift and go to state 31
    EQ              shift and go to state 32
    NEQ             shift and go to state 33
    GE              shift and go to state 34
    LE              shift and go to state 35
    GT              shift and go to state 36
    LT              shift and go to state 37
    DOTDIVIDE       shift and go to state 38
    DOTTIMES        shift and go to state 39
    DOTMINUS        shift and go to state 40
    DOTPLUS         shift and go to state 41
    /               shift and go to state 42
    *               shift and go to state 43
    -               shift and go to state 44
    +               shift and go to state 45


state 52

    (52) statement -> assignable DIVASSIGN . expression ;
    (5) expression -> . [ list ]
    (6) expression -> . EYE ( expression )
    (7) expression -> . ONES ( expression )
    (8) expression -> . ZEROS ( expression )
    (9) expression -> . - expression
    (10) expression -> . expression '
    (11) expression -> . expression = expression
    (12) expression -> . expression EQ expression
    (13) expression -> . expression NEQ expression
    (14) expression -> . expression GE expression
    (15) expression -> . expression LE expression
    (16) expression -> . expression GT expression
    (17) expression -> . expression LT expression
    (18) expression -> . expression DOTDIVIDE expression
    (19) expression -> . expression DOTTIMES expression
    (20) expression -> . expression DOTMINUS expression
    (21) expression -> . expression DOTPLUS expression
    (22) expression -> . expression / expression
    (23) expression -> . expression * expression
    (24) expression -> . expression - expression
    (25) expression -> . expression + expression
    (26) expression -> . ( expression )
    (27) expression -> . STRING
    (28) expression -> . FLOATNUM
    (29) expression -> . INTNUM
    [               shift and go to state 15
    EYE             shift and go to state 16
    ONES            shift and go to state 18
    ZEROS           shift and go to state 19
    -               shift and go to state 20
    (               shift and go to state 17
    STRING          shift and go to state 21
    FLOATNUM        shift and go to state 22
    INTNUM          shift and go to state 23

    expression                     shift and go to state 92

state 53

    (53) statement -> assignable MULASSIGN . expression ;
    (5) expression -> . [ list ]
    (6) expression -> . EYE ( expression )
    (7) expression -> . ONES ( expression )
    (8) expression -> . ZEROS ( expression )
    (9) expression -> . - expression
    (10) expression -> . expression '
    (11) expression -> . expression = expression
    (12) expression -> . expression EQ expression
    (13) expression -> . expression NEQ expression
    (14) expression -> . expression GE expression
    (15) expression -> . expression LE expression
    (16) expression -> . expression GT expression
    (17) expression -> . expression LT expression
    (18) expression -> . expression DOTDIVIDE expression
    (19) expression -> . expression DOTTIMES expression
    (20) expression -> . expression DOTMINUS expression
    (21) expression -> . expression DOTPLUS expression
    (22) expression -> . expression / expression
    (23) expression -> . expression * expression
    (24) expression -> . expression - expression
    (25) expression -> . expression + expression
    (26) expression -> . ( expression )
    (27) expression -> . STRING
    (28) expression -> . FLOATNUM
    (29) expression -> . INTNUM
    [               shift and go to state 15
    EYE             shift and go to state 16
    ONES            shift and go to state 18
    ZEROS           shift and go to state 19
    -               shift and go to state 20
    (               shift and go to state 17
    STRING          shift and go to state 21
    FLOATNUM        shift and go to state 22
    INTNUM          shift and go to state 23

    expression                     shift and go to state 93

state 54

    (54) statement -> assignable SUBASSIGN . expression ;
    (5) expression -> . [ list ]
    (6) expression -> . EYE ( expression )
    (7) expression -> . ONES ( expression )
    (8) expression -> . ZEROS ( expression )
    (9) expression -> . - expression
    (10) expression -> . expression '
    (11) expression -> . expression = expression
    (12) expression -> . expression EQ expression
    (13) expression -> . expression NEQ expression
    (14) expression -> . expression GE expression
    (15) expression -> . expression LE expression
    (16) expression -> . expression GT expression
    (17) expression -> . expression LT expression
    (18) expression -> . expression DOTDIVIDE expression
    (19) expression -> . expression DOTTIMES expression
    (20) expression -> . expression DOTMINUS expression
    (21) expression -> . expression DOTPLUS expression
    (22) expression -> . expression / expression
    (23) expression -> . expression * expression
    (24) expression -> . expression - expression
    (25) expression -> . expression + expression
    (26) expression -> . ( expression )
    (27) expression -> . STRING
    (28) expression -> . FLOATNUM
    (29) expression -> . INTNUM
    [               shift and go to state 15
    EYE             shift and go to state 16
    ONES            shift and go to state 18
    ZEROS           shift and go to state 19
    -               shift and go to state 20
    (               shift and go to state 17
    STRING          shift and go to state 21
    FLOATNUM        shift and go to state 22
    INTNUM          shift and go to state 23

    expression                     shift and go to state 94

state 55

    (55) statement -> assignable ADDASSIGN . expression ;
    (5) expression -> . [ list ]
    (6) expression -> . EYE ( expression )
    (7) expression -> . ONES ( expression )
    (8) expression -> . ZEROS ( expression )
    (9) expression -> . - expression
    (10) expression -> . expression '
    (11) expression -> . expression = expression
    (12) expression -> . expression EQ expression
    (13) expression -> . expression NEQ expression
    (14) expression -> . expression GE expression
    (15) expression -> . expression LE expression
    (16) expression -> . expression GT expression
    (17) expression -> . expression LT expression
    (18) expression -> . expression DOTDIVIDE expression
    (19) expression -> . expression DOTTIMES expression
    (20) expression -> . expression DOTMINUS expression
    (21) expression -> . expression DOTPLUS expression
    (22) expression -> . expression / expression
    (23) expression -> . expression * expression
    (24) expression -> . expression - expression
    (25) expression -> . expression + expression
    (26) expression -> . ( expression )
    (27) expression -> . STRING
    (28) expression -> . FLOATNUM
    (29) expression -> . INTNUM
    [               shift and go to state 15
    EYE             shift and go to state 16
    ONES            shift and go to state 18
    ZEROS           shift and go to state 19
    -               shift and go to state 20
    (               shift and go to state 17
    STRING          shift and go to state 21
    FLOATNUM        shift and go to state 22
    INTNUM          shift and go to state 23

    expression                     shift and go to state 95

state 56

    (56) statement -> assignable = . expression ;
    (5) expression -> . [ list ]
    (6) expression -> . EYE ( expression )
    (7) expression -> . ONES ( expression )
    (8) expression -> . ZEROS ( expression )
    (9) expression -> . - expression
    (10) expression -> . expression '
    (11) expression -> . expression = expression
    (12) expression -> . expression EQ expression
    (13) expression -> . expression NEQ expression
    (14) expression -> . expression GE expression
    (15) expression -> . expression LE expression
    (16) expression -> . expression GT expression
    (17) expression -> . expression LT expression
    (18) expression -> . expression DOTDIVIDE expression
    (19) expression -> . expression DOTTIMES expression
    (20) expression -> . expression DOTMINUS expression
    (21) expression -> . expression DOTPLUS expression
    (22) expression -> . expression / expression
    (23) expression -> . expression * expression
    (24) expression -> . expression - expression
    (25) expression -> . expression + expression
    (26) expression -> . ( expression )
    (27) expression -> . STRING
    (28) expression -> . FLOATNUM
    (29) expression -> . INTNUM
    [               shift and go to state 15
    EYE             shift and go to state 16
    ONES            shift and go to state 18
    ZEROS           shift and go to state 19
    -               shift and go to state 20
    (               shift and go to state 17
    STRING          shift and go to state 21
    FLOATNUM        shift and go to state 22
    INTNUM          shift and go to state 23

    expression                     shift and go to state 96

state 57

    (37) list -> [ . spread_elements ]
    (35) spread_elements -> . list_element
    (36) spread_elements -> . spread_elements , list_element
    (30) list_element -> . list
    (31) list_element -> . ID
    (32) list_element -> . STRING
    (33) list_element -> . FLOATNUM
    (34) list_element -> . INTNUM
    (37) list -> . [ spread_elements ]
    (38) list -> . list , [ spread_elements ]
    ID              shift and go to state 100
    STRING          shift and go to state 101
    FLOATNUM        shift and go to state 102
    INTNUM          shift and go to state 103
    [               shift and go to state 57

    spread_elements                shift and go to state 97
    list_element                   shift and go to state 98
    list                           shift and go to state 99

state 58

    (5) expression -> [ list . ]
    (38) list -> list . , [ spread_elements ]
    ]               shift and go to state 104
    ,               shift and go to state 105


state 59

    (6) expression -> EYE ( . expression )
    (5) expression -> . [ list ]
    (6) expression -> . EYE ( expression )
    (7) expression -> . ONES ( expression )
    (8) expression -> . ZEROS ( expression )
    (9) expression -> . - expression
    (10) expression -> . expression '
    (11) expression -> . expression = expression
    (12) expression -> . expression EQ expression
    (13) expression -> . expression NEQ expression
    (14) expression -> . expression GE expression
    (15) expression -> . expression LE expression
    (16) expression -> . expression GT expression
    (17) expression -> . expression LT expression
    (18) expression -> . expression DOTDIVIDE expression
    (19) expression -> . expression DOTTIMES expression
    (20) expression -> . expression DOTMINUS expression
    (21) expression -> . expression DOTPLUS expression
    (22) expression -> . expression / expression
    (23) expression -> . expression * expression
    (24) expression -> . expression - expression
    (25) expression -> . expression + expression
    (26) expression -> . ( expression )
    (27) expression -> . STRING
    (28) expression -> . FLOATNUM
    (29) expression -> . INTNUM
    [               shift and go to state 15
    EYE             shift and go to state 16
    ONES            shift and go to state 18
    ZEROS           shift and go to state 19
    -               shift and go to state 20
    (               shift and go to state 17
    STRING          shift and go to state 21
    FLOATNUM        shift and go to state 22
    INTNUM          shift and go to state 23

    expression                     shift and go to state 106

state 60

    (26) expression -> ( expression . )
    (10) expression -> expression . '
    (11) expression -> expression . = expression
    (12) expression -> expression . EQ expression
    (13) expression -> expression . NEQ expression
    (14) expression -> expression . GE expression
    (15) expression -> expression . LE expression
    (16) expression -> expression . GT expression
    (17) expression -> expression . LT expression
    (18) expression -> expression . DOTDIVIDE expression
    (19) expression -> expression . DOTTIMES expression
    (20) expression -> expression . DOTMINUS expression
    (21) expression -> expression . DOTPLUS expression
    (22) expression -> expression . / expression
    (23) expression -> expression . * expression
    (24) expression -> expression . - expression
    (25) expression -> expression . + expression
    )               shift and go to state 107
    '               shift and go to state 30
    =               shift and go to state 31
    EQ              shift and go to state 32
    NEQ             shift and go to state 33
    GE              shift and go to state 34
    LE              shift and go to state 35
    GT              shift and go to state 36
    LT              shift and go to state 37
    DOTDIVIDE       shift and go to state 38
    DOTTIMES        shift and go to state 39
    DOTMINUS        shift and go to state 40
    DOTPLUS         shift and go to state 41
    /               shift and go to state 42
    *               shift and go to state 43
    -               shift and go to state 44
    +               shift and go to state 45


state 61

    (7) expression -> ONES ( . expression )
    (5) expression -> . [ list ]
    (6) expression -> . EYE ( expression )
    (7) expression -> . ONES ( expression )
    (8) expression -> . ZEROS ( expression )
    (9) expression -> . - expression
    (10) expression -> . expression '
    (11) expression -> . expression = expression
    (12) expression -> . expression EQ expression
    (13) expression -> . expression NEQ expression
    (14) expression -> . expression GE expression
    (15) expression -> . expression LE expression
    (16) expression -> . expression GT expression
    (17) expression -> . expression LT expression
    (18) expression -> . expression DOTDIVIDE expression
    (19) expression -> . expression DOTTIMES expression
    (20) expression -> . expression DOTMINUS expression
    (21) expression -> . expression DOTPLUS expression
    (22) expression -> . expression / expression
    (23) expression -> . expression * expression
    (24) expression -> . expression - expression
    (25) expression -> . expression + expression
    (26) expression -> . ( expression )
    (27) expression -> . STRING
    (28) expression -> . FLOATNUM
    (29) expression -> . INTNUM
    [               shift and go to state 15
    EYE             shift and go to state 16
    ONES            shift and go to state 18
    ZEROS           shift and go to state 19
    -               shift and go to state 20
    (               shift and go to state 17
    STRING          shift and go to state 21
    FLOATNUM        shift and go to state 22
    INTNUM          shift and go to state 23

    expression                     shift and go to state 108

state 62

    (8) expression -> ZEROS ( . expression )
    (5) expression -> . [ list ]
    (6) expression -> . EYE ( expression )
    (7) expression -> . ONES ( expression )
    (8) expression -> . ZEROS ( expression )
    (9) expression -> . - expression
    (10) expression -> . expression '
    (11) expression -> . expression = expression
    (12) expression -> . expression EQ expression
    (13) expression -> . expression NEQ expression
    (14) expression -> . expression GE expression
    (15) expression -> . expression LE expression
    (16) expression -> . expression GT expression
    (17) expression -> . expression LT expression
    (18) expression -> . expression DOTDIVIDE expression
    (19) expression -> . expression DOTTIMES expression
    (20) expression -> . expression DOTMINUS expression
    (21) expression -> . expression DOTPLUS expression
    (22) expression -> . expression / expression
    (23) expression -> . expression * expression
    (24) expression -> . expression - expression
    (25) expression -> . expression + expression
    (26) expression -> . ( expression )
    (27) expression -> . STRING
    (28) expression -> . FLOATNUM
    (29) expression -> . INTNUM
    [               shift and go to state 15
    EYE             shift and go to state 16
    ONES            shift and go to state 18
    ZEROS           shift and go to state 19
    -               shift and go to state 20
    (               shift and go to state 17
    STRING          shift and go to state 21
    FLOATNUM        shift and go to state 22
    INTNUM          shift and go to state 23

    expression                     shift and go to state 109

state 63

    (9) expression -> - expression .
    (10) expression -> expression . '
    (11) expression -> expression . = expression
    (12) expression -> expression . EQ expression
    (13) expression -> expression . NEQ expression
    (14) expression -> expression . GE expression
    (15) expression -> expression . LE expression
    (16) expression -> expression . GT expression
    (17) expression -> expression . LT expression
    (18) expression -> expression . DOTDIVIDE expression
    (19) expression -> expression . DOTTIMES expression
    (20) expression -> expression . DOTMINUS expression
    (21) expression -> expression . DOTPLUS expression
    (22) expression -> expression . / expression
    (23) expression -> expression . * expression
    (24) expression -> expression . - expression
    (25) expression -> expression . + expression
    ;               reduce using rule 9 (expression -> - expression .)
    '               reduce using rule 9 (expression -> - expression .)
    =               reduce using rule 9 (expression -> - expression .)
    EQ              reduce using rule 9 (expression -> - expression .)
    NEQ             reduce using rule 9 (expression -> - expression .)
    GE              reduce using rule 9 (expression -> - expression .)
    LE              reduce using rule 9 (expression -> - expression .)
    GT              reduce using rule 9 (expression -> - expression .)
    LT              reduce using rule 9 (expression -> - expression .)
    DOTDIVIDE       reduce using rule 9 (expression -> - expression .)
    DOTTIMES        reduce using rule 9 (expression -> - expression .)
    DOTMINUS        reduce using rule 9 (expression -> - expression .)
    DOTPLUS         reduce using rule 9 (expression -> - expression .)
    /               reduce using rule 9 (expression -> - expression .)
    *               reduce using rule 9 (expression -> - expression .)
    +               reduce using rule 9 (expression -> - expression .)
    {               reduce using rule 9 (expression -> - expression .)
    FOR             reduce using rule 9 (expression -> - expression .)
    WHILE           reduce using rule 9 (expression -> - expression .)
    IF              reduce using rule 9 (expression -> - expression .)
    PRINT           reduce using rule 9 (expression -> - expression .)
    BREAK           reduce using rule 9 (expression -> - expression .)
    CONTINUE        reduce using rule 9 (expression -> - expression .)
    RETURN          reduce using rule 9 (expression -> - expression .)
    [               reduce using rule 9 (expression -> - expression .)
    EYE             reduce using rule 9 (expression -> - expression .)
    ONES            reduce using rule 9 (expression -> - expression .)
    ZEROS           reduce using rule 9 (expression -> - expression .)
    (               reduce using rule 9 (expression -> - expression .)
    STRING          reduce using rule 9 (expression -> - expression .)
    FLOATNUM        reduce using rule 9 (expression -> - expression .)
    INTNUM          reduce using rule 9 (expression -> - expression .)
    ID              reduce using rule 9 (expression -> - expression .)
    ,               reduce using rule 9 (expression -> - expression .)
    )               reduce using rule 9 (expression -> - expression .)
    -               shift and go to state 44


state 64

    (2) start -> { start } . start
    (2) start -> . { start } start
    (3) start -> . statement start
    (4) start -> . empty
    (43) statement -> . FOR ID = range block
    (44) statement -> . WHILE expression block
    (45) statement -> . IF expression block ELSE block
    (46) statement -> . IF expression block
    (47) statement -> . PRINT prints ;
    (48) statement -> . expression ;
    (49) statement -> . BREAK ;
    (50) statement -> . CONTINUE ;
    (51) statement -> . RETURN expression ;
    (52) statement -> . assignable DIVASSIGN expression ;
    (53) statement -> . assignable MULASSIGN expression ;
    (54) statement -> . assignable SUBASSIGN expression ;
    (55) statement -> . assignable ADDASSIGN expression ;
    (56) statement -> . assignable = expression ;
    (1) empty -> .
    (5) expression -> . [ list ]
    (6) expression -> . EYE ( expression )
    (7) expression -> . ONES ( expression )
    (8) expression -> . ZEROS ( expression )
    (9) expression -> . - expression
    (10) expression -> . expression '
    (11) expression -> . expression = expression
    (12) expression -> . expression EQ expression
    (13) expression -> . expression NEQ expression
    (14) expression -> . expression GE expression
    (15) expression -> . expression LE expression
    (16) expression -> . expression GT expression
    (17) expression -> . expression LT expression
    (18) expression -> . expression DOTDIVIDE expression
    (19) expression -> . expression DOTTIMES expression
    (20) expression -> . expression DOTMINUS expression
    (21) expression -> . expression DOTPLUS expression
    (22) expression -> . expression / expression
    (23) expression -> . expression * expression
    (24) expression -> . expression - expression
    (25) expression -> . expression + expression
    (26) expression -> . ( expression )
    (27) expression -> . STRING
    (28) expression -> . FLOATNUM
    (29) expression -> . INTNUM
    (39) assignable -> . ID [ indexes ]
    (40) assignable -> . ID
    {               shift and go to state 2
    FOR             shift and go to state 5
    WHILE           shift and go to state 7
    IF              shift and go to state 9
    PRINT           shift and go to state 10
    BREAK           shift and go to state 11
    CONTINUE        shift and go to state 12
    RETURN          shift and go to state 13
    $end            reduce using rule 1 (empty -> .)
    }               reduce using rule 1 (empty -> .)
    [               shift and go to state 15
    EYE             shift and go to state 16
    ONES            shift and go to state 18
    ZEROS           shift and go to state 19
    -               shift and go to state 20
    (               shift and go to state 17
    STRING          shift and go to state 21
    FLOATNUM        shift and go to state 22
    INTNUM          shift and go to state 23
    ID              shift and go to state 6

    start                          shift and go to state 110
    statement                      shift and go to state 3
    empty                          shift and go to state 4
    expression                     shift and go to state 8
    assignable                     shift and go to state 14

state 65

    (43) statement -> FOR ID = . range block
    (61) range -> . INTNUM : ID
    (62) range -> . ID : INTNUM
    (63) range -> . ID : ID
    (64) range -> . INTNUM : INTNUM
    INTNUM          shift and go to state 113
    ID              shift and go to state 111

    range                          shift and go to state 112

state 66

    (39) assignable -> ID [ indexes . ]
    ]               shift and go to state 114


state 67

    (41) indexes -> INTNUM .
    (42) indexes -> INTNUM . , indexes
    ]               reduce using rule 41 (indexes -> INTNUM .)
    ,               shift and go to state 115


state 68

    (44) statement -> WHILE expression block .
    {               reduce using rule 44 (statement -> WHILE expression block .)
    FOR             reduce using rule 44 (statement -> WHILE expression block .)
    WHILE           reduce using rule 44 (statement -> WHILE expression block .)
    IF              reduce using rule 44 (statement -> WHILE expression block .)
    PRINT           reduce using rule 44 (statement -> WHILE expression block .)
    BREAK           reduce using rule 44 (statement -> WHILE expression block .)
    CONTINUE        reduce using rule 44 (statement -> WHILE expression block .)
    RETURN          reduce using rule 44 (statement -> WHILE expression block .)
    [               reduce using rule 44 (statement -> WHILE expression block .)
    EYE             reduce using rule 44 (statement -> WHILE expression block .)
    ONES            reduce using rule 44 (statement -> WHILE expression block .)
    ZEROS           reduce using rule 44 (statement -> WHILE expression block .)
    -               reduce using rule 44 (statement -> WHILE expression block .)
    (               reduce using rule 44 (statement -> WHILE expression block .)
    STRING          reduce using rule 44 (statement -> WHILE expression block .)
    FLOATNUM        reduce using rule 44 (statement -> WHILE expression block .)
    INTNUM          reduce using rule 44 (statement -> WHILE expression block .)
    ID              reduce using rule 44 (statement -> WHILE expression block .)
    $end            reduce using rule 44 (statement -> WHILE expression block .)
    }               reduce using rule 44 (statement -> WHILE expression block .)
    ELSE            reduce using rule 44 (statement -> WHILE expression block .)


state 69

    (24) expression -> expression - . expression
    (9) expression -> - . expression
    (5) expression -> . [ list ]
    (6) expression -> . EYE ( expression )
    (7) expression -> . ONES ( expression )
    (8) expression -> . ZEROS ( expression )
    (9) expression -> . - expression
    (10) expression -> . expression '
    (11) expression -> . expression = expression
    (12) expression -> . expression EQ expression
    (13) expression -> . expression NEQ expression
    (14) expression -> . expression GE expression
    (15) expression -> . expression LE expression
    (16) expression -> . expression GT expression
    (17) expression -> . expression LT expression
    (18) expression -> . expression DOTDIVIDE expression
    (19) expression -> . expression DOTTIMES expression
    (20) expression -> . expression DOTMINUS expression
    (21) expression -> . expression DOTPLUS expression
    (22) expression -> . expression / expression
    (23) expression -> . expression * expression
    (24) expression -> . expression - expression
    (25) expression -> . expression + expression
    (26) expression -> . ( expression )
    (27) expression -> . STRING
    (28) expression -> . FLOATNUM
    (29) expression -> . INTNUM
    [               shift and go to state 15
    EYE             shift and go to state 16
    ONES            shift and go to state 18
    ZEROS           shift and go to state 19
    -               shift and go to state 20
    (               shift and go to state 17
    STRING          shift and go to state 21
    FLOATNUM        shift and go to state 22
    INTNUM          shift and go to state 23

    expression                     shift and go to state 116

state 70

    (57) block -> { . start }
    (2) start -> . { start } start
    (3) start -> . statement start
    (4) start -> . empty
    (43) statement -> . FOR ID = range block
    (44) statement -> . WHILE expression block
    (45) statement -> . IF expression block ELSE block
    (46) statement -> . IF expression block
    (47) statement -> . PRINT prints ;
    (48) statement -> . expression ;
    (49) statement -> . BREAK ;
    (50) statement -> . CONTINUE ;
    (51) statement -> . RETURN expression ;
    (52) statement -> . assignable DIVASSIGN expression ;
    (53) statement -> . assignable MULASSIGN expression ;
    (54) statement -> . assignable SUBASSIGN expression ;
    (55) statement -> . assignable ADDASSIGN expression ;
    (56) statement -> . assignable = expression ;
    (1) empty -> .
    (5) expression -> . [ list ]
    (6) expression -> . EYE ( expression )
    (7) expression -> . ONES ( expression )
    (8) expression -> . ZEROS ( expression )
    (9) expression -> . - expression
    (10) expression -> . expression '
    (11) expression -> . expression = expression
    (12) expression -> . expression EQ expression
    (13) expression -> . expression NEQ expression
    (14) expression -> . expression GE expression
    (15) expression -> . expression LE expression
    (16) expression -> . expression GT expression
    (17) expression -> . expression LT expression
    (18) expression -> . expression DOTDIVIDE expression
    (19) expression -> . expression DOTTIMES expression
    (20) expression -> . expression DOTMINUS expression
    (21) expression -> . expression DOTPLUS expression
    (22) expression -> . expression / expression
    (23) expression -> . expression * expression
    (24) expression -> . expression - expression
    (25) expression -> . expression + expression
    (26) expression -> . ( expression )
    (27) expression -> . STRING
    (28) expression -> . FLOATNUM
    (29) expression -> . INTNUM
    (39) assignable -> . ID [ indexes ]
    (40) assignable -> . ID
    {               shift and go to state 2
    FOR             shift and go to state 5
    WHILE           shift and go to state 7
    IF              shift and go to state 9
    PRINT           shift and go to state 10
    BREAK           shift and go to state 11
    CONTINUE        shift and go to state 12
    RETURN          shift and go to state 13
    }               reduce using rule 1 (empty -> .)
    [               shift and go to state 15
    EYE             shift and go to state 16
    ONES            shift and go to state 18
    ZEROS           shift and go to state 19
    -               shift and go to state 20
    (               shift and go to state 17
    STRING          shift and go to state 21
    FLOATNUM        shift and go to state 22
    INTNUM          shift and go to state 23
    ID              shift and go to state 6

    start                          shift and go to state 117
    statement                      shift and go to state 3
    empty                          shift and go to state 4
    expression                     shift and go to state 8
    assignable                     shift and go to state 14

state 71

    (58) block -> statement .
    {               reduce using rule 58 (block -> statement .)
    FOR             reduce using rule 58 (block -> statement .)
    WHILE           reduce using rule 58 (block -> statement .)
    IF              reduce using rule 58 (block -> statement .)
    PRINT           reduce using rule 58 (block -> statement .)
    BREAK           reduce using rule 58 (block -> statement .)
    CONTINUE        reduce using rule 58 (block -> statement .)
    RETURN          reduce using rule 58 (block -> statement .)
    [               reduce using rule 58 (block -> statement .)
    EYE             reduce using rule 58 (block -> statement .)
    ONES            reduce using rule 58 (block -> statement .)
    ZEROS           reduce using rule 58 (block -> statement .)
    -               reduce using rule 58 (block -> statement .)
    (               reduce using rule 58 (block -> statement .)
    STRING          reduce using rule 58 (block -> statement .)
    FLOATNUM        reduce using rule 58 (block -> statement .)
    INTNUM          reduce using rule 58 (block -> statement .)
    ID              reduce using rule 58 (block -> statement .)
    $end            reduce using rule 58 (block -> statement .)
    }               reduce using rule 58 (block -> statement .)
    ELSE            reduce using rule 58 (block -> statement .)


state 72

    (11) expression -> expression = expression .
    (10) expression -> expression . '
    (11) expression -> expression . = expression
    (12) expression -> expression . EQ expression
    (13) expression -> expression . NEQ expression
    (14) expression -> expression . GE expression
    (15) expression -> expression . LE expression
    (16) expression -> expression . GT expression
    (17) expression -> expression . LT expression
    (18) expression -> expression . DOTDIVIDE expression
    (19) expression -> expression . DOTTIMES expression
    (20) expression -> expression . DOTMINUS expression
    (21) expression -> expression . DOTPLUS expression
    (22) expression -> expression . / expression
    (23) expression -> expression . * expression
    (24) expression -> expression . - expression
    (25) expression -> expression . + expression
  ! shift/reduce conflict for ' resolved as shift
  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for DOTDIVIDE resolved as shift
  ! shift/reduce conflict for DOTTIMES resolved as shift
  ! shift/reduce conflict for DOTMINUS resolved as shift
  ! shift/reduce conflict for DOTPLUS resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
    ;               reduce using rule 11 (expression -> expression = expression .)
    {               reduce using rule 11 (expression -> expression = expression .)
    FOR             reduce using rule 11 (expression -> expression = expression .)
    WHILE           reduce using rule 11 (expression -> expression = expression .)
    IF              reduce using rule 11 (expression -> expression = expression .)
    PRINT           reduce using rule 11 (expression -> expression = expression .)
    BREAK           reduce using rule 11 (expression -> expression = expression .)
    CONTINUE        reduce using rule 11 (expression -> expression = expression .)
    RETURN          reduce using rule 11 (expression -> expression = expression .)
    [               reduce using rule 11 (expression -> expression = expression .)
    EYE             reduce using rule 11 (expression -> expression = expression .)
    ONES            reduce using rule 11 (expression -> expression = expression .)
    ZEROS           reduce using rule 11 (expression -> expression = expression .)
    (               reduce using rule 11 (expression -> expression = expression .)
    STRING          reduce using rule 11 (expression -> expression = expression .)
    FLOATNUM        reduce using rule 11 (expression -> expression = expression .)
    INTNUM          reduce using rule 11 (expression -> expression = expression .)
    ID              reduce using rule 11 (expression -> expression = expression .)
    ,               reduce using rule 11 (expression -> expression = expression .)
    )               reduce using rule 11 (expression -> expression = expression .)
    '               shift and go to state 30
    =               shift and go to state 31
    EQ              shift and go to state 32
    NEQ             shift and go to state 33
    GE              shift and go to state 34
    LE              shift and go to state 35
    GT              shift and go to state 36
    LT              shift and go to state 37
    DOTDIVIDE       shift and go to state 38
    DOTTIMES        shift and go to state 39
    DOTMINUS        shift and go to state 40
    DOTPLUS         shift and go to state 41
    /               shift and go to state 42
    *               shift and go to state 43
    -               shift and go to state 44
    +               shift and go to state 45


state 73

    (12) expression -> expression EQ expression .
    (10) expression -> expression . '
    (11) expression -> expression . = expression
    (12) expression -> expression . EQ expression
    (13) expression -> expression . NEQ expression
    (14) expression -> expression . GE expression
    (15) expression -> expression . LE expression
    (16) expression -> expression . GT expression
    (17) expression -> expression . LT expression
    (18) expression -> expression . DOTDIVIDE expression
    (19) expression -> expression . DOTTIMES expression
    (20) expression -> expression . DOTMINUS expression
    (21) expression -> expression . DOTPLUS expression
    (22) expression -> expression . / expression
    (23) expression -> expression . * expression
    (24) expression -> expression . - expression
    (25) expression -> expression . + expression
    ;               reduce using rule 12 (expression -> expression EQ expression .)
    =               reduce using rule 12 (expression -> expression EQ expression .)
    EQ              reduce using rule 12 (expression -> expression EQ expression .)
    NEQ             reduce using rule 12 (expression -> expression EQ expression .)
    GE              reduce using rule 12 (expression -> expression EQ expression .)
    LE              reduce using rule 12 (expression -> expression EQ expression .)
    GT              reduce using rule 12 (expression -> expression EQ expression .)
    LT              reduce using rule 12 (expression -> expression EQ expression .)
    {               reduce using rule 12 (expression -> expression EQ expression .)
    FOR             reduce using rule 12 (expression -> expression EQ expression .)
    WHILE           reduce using rule 12 (expression -> expression EQ expression .)
    IF              reduce using rule 12 (expression -> expression EQ expression .)
    PRINT           reduce using rule 12 (expression -> expression EQ expression .)
    BREAK           reduce using rule 12 (expression -> expression EQ expression .)
    CONTINUE        reduce using rule 12 (expression -> expression EQ expression .)
    RETURN          reduce using rule 12 (expression -> expression EQ expression .)
    [               reduce using rule 12 (expression -> expression EQ expression .)
    EYE             reduce using rule 12 (expression -> expression EQ expression .)
    ONES            reduce using rule 12 (expression -> expression EQ expression .)
    ZEROS           reduce using rule 12 (expression -> expression EQ expression .)
    (               reduce using rule 12 (expression -> expression EQ expression .)
    STRING          reduce using rule 12 (expression -> expression EQ expression .)
    FLOATNUM        reduce using rule 12 (expression -> expression EQ expression .)
    INTNUM          reduce using rule 12 (expression -> expression EQ expression .)
    ID              reduce using rule 12 (expression -> expression EQ expression .)
    ,               reduce using rule 12 (expression -> expression EQ expression .)
    )               reduce using rule 12 (expression -> expression EQ expression .)
    '               shift and go to state 30
    DOTDIVIDE       shift and go to state 38
    DOTTIMES        shift and go to state 39
    DOTMINUS        shift and go to state 40
    DOTPLUS         shift and go to state 41
    /               shift and go to state 42
    *               shift and go to state 43
    -               shift and go to state 44
    +               shift and go to state 45


state 74

    (13) expression -> expression NEQ expression .
    (10) expression -> expression . '
    (11) expression -> expression . = expression
    (12) expression -> expression . EQ expression
    (13) expression -> expression . NEQ expression
    (14) expression -> expression . GE expression
    (15) expression -> expression . LE expression
    (16) expression -> expression . GT expression
    (17) expression -> expression . LT expression
    (18) expression -> expression . DOTDIVIDE expression
    (19) expression -> expression . DOTTIMES expression
    (20) expression -> expression . DOTMINUS expression
    (21) expression -> expression . DOTPLUS expression
    (22) expression -> expression . / expression
    (23) expression -> expression . * expression
    (24) expression -> expression . - expression
    (25) expression -> expression . + expression
    ;               reduce using rule 13 (expression -> expression NEQ expression .)
    =               reduce using rule 13 (expression -> expression NEQ expression .)
    EQ              reduce using rule 13 (expression -> expression NEQ expression .)
    NEQ             reduce using rule 13 (expression -> expression NEQ expression .)
    GE              reduce using rule 13 (expression -> expression NEQ expression .)
    LE              reduce using rule 13 (expression -> expression NEQ expression .)
    GT              reduce using rule 13 (expression -> expression NEQ expression .)
    LT              reduce using rule 13 (expression -> expression NEQ expression .)
    {               reduce using rule 13 (expression -> expression NEQ expression .)
    FOR             reduce using rule 13 (expression -> expression NEQ expression .)
    WHILE           reduce using rule 13 (expression -> expression NEQ expression .)
    IF              reduce using rule 13 (expression -> expression NEQ expression .)
    PRINT           reduce using rule 13 (expression -> expression NEQ expression .)
    BREAK           reduce using rule 13 (expression -> expression NEQ expression .)
    CONTINUE        reduce using rule 13 (expression -> expression NEQ expression .)
    RETURN          reduce using rule 13 (expression -> expression NEQ expression .)
    [               reduce using rule 13 (expression -> expression NEQ expression .)
    EYE             reduce using rule 13 (expression -> expression NEQ expression .)
    ONES            reduce using rule 13 (expression -> expression NEQ expression .)
    ZEROS           reduce using rule 13 (expression -> expression NEQ expression .)
    (               reduce using rule 13 (expression -> expression NEQ expression .)
    STRING          reduce using rule 13 (expression -> expression NEQ expression .)
    FLOATNUM        reduce using rule 13 (expression -> expression NEQ expression .)
    INTNUM          reduce using rule 13 (expression -> expression NEQ expression .)
    ID              reduce using rule 13 (expression -> expression NEQ expression .)
    ,               reduce using rule 13 (expression -> expression NEQ expression .)
    )               reduce using rule 13 (expression -> expression NEQ expression .)
    '               shift and go to state 30
    DOTDIVIDE       shift and go to state 38
    DOTTIMES        shift and go to state 39
    DOTMINUS        shift and go to state 40
    DOTPLUS         shift and go to state 41
    /               shift and go to state 42
    *               shift and go to state 43
    -               shift and go to state 44
    +               shift and go to state 45


state 75

    (14) expression -> expression GE expression .
    (10) expression -> expression . '
    (11) expression -> expression . = expression
    (12) expression -> expression . EQ expression
    (13) expression -> expression . NEQ expression
    (14) expression -> expression . GE expression
    (15) expression -> expression . LE expression
    (16) expression -> expression . GT expression
    (17) expression -> expression . LT expression
    (18) expression -> expression . DOTDIVIDE expression
    (19) expression -> expression . DOTTIMES expression
    (20) expression -> expression . DOTMINUS expression
    (21) expression -> expression . DOTPLUS expression
    (22) expression -> expression . / expression
    (23) expression -> expression . * expression
    (24) expression -> expression . - expression
    (25) expression -> expression . + expression
    ;               reduce using rule 14 (expression -> expression GE expression .)
    =               reduce using rule 14 (expression -> expression GE expression .)
    EQ              reduce using rule 14 (expression -> expression GE expression .)
    NEQ             reduce using rule 14 (expression -> expression GE expression .)
    GE              reduce using rule 14 (expression -> expression GE expression .)
    LE              reduce using rule 14 (expression -> expression GE expression .)
    GT              reduce using rule 14 (expression -> expression GE expression .)
    LT              reduce using rule 14 (expression -> expression GE expression .)
    {               reduce using rule 14 (expression -> expression GE expression .)
    FOR             reduce using rule 14 (expression -> expression GE expression .)
    WHILE           reduce using rule 14 (expression -> expression GE expression .)
    IF              reduce using rule 14 (expression -> expression GE expression .)
    PRINT           reduce using rule 14 (expression -> expression GE expression .)
    BREAK           reduce using rule 14 (expression -> expression GE expression .)
    CONTINUE        reduce using rule 14 (expression -> expression GE expression .)
    RETURN          reduce using rule 14 (expression -> expression GE expression .)
    [               reduce using rule 14 (expression -> expression GE expression .)
    EYE             reduce using rule 14 (expression -> expression GE expression .)
    ONES            reduce using rule 14 (expression -> expression GE expression .)
    ZEROS           reduce using rule 14 (expression -> expression GE expression .)
    (               reduce using rule 14 (expression -> expression GE expression .)
    STRING          reduce using rule 14 (expression -> expression GE expression .)
    FLOATNUM        reduce using rule 14 (expression -> expression GE expression .)
    INTNUM          reduce using rule 14 (expression -> expression GE expression .)
    ID              reduce using rule 14 (expression -> expression GE expression .)
    ,               reduce using rule 14 (expression -> expression GE expression .)
    )               reduce using rule 14 (expression -> expression GE expression .)
    '               shift and go to state 30
    DOTDIVIDE       shift and go to state 38
    DOTTIMES        shift and go to state 39
    DOTMINUS        shift and go to state 40
    DOTPLUS         shift and go to state 41
    /               shift and go to state 42
    *               shift and go to state 43
    -               shift and go to state 44
    +               shift and go to state 45


state 76

    (15) expression -> expression LE expression .
    (10) expression -> expression . '
    (11) expression -> expression . = expression
    (12) expression -> expression . EQ expression
    (13) expression -> expression . NEQ expression
    (14) expression -> expression . GE expression
    (15) expression -> expression . LE expression
    (16) expression -> expression . GT expression
    (17) expression -> expression . LT expression
    (18) expression -> expression . DOTDIVIDE expression
    (19) expression -> expression . DOTTIMES expression
    (20) expression -> expression . DOTMINUS expression
    (21) expression -> expression . DOTPLUS expression
    (22) expression -> expression . / expression
    (23) expression -> expression . * expression
    (24) expression -> expression . - expression
    (25) expression -> expression . + expression
    ;               reduce using rule 15 (expression -> expression LE expression .)
    =               reduce using rule 15 (expression -> expression LE expression .)
    EQ              reduce using rule 15 (expression -> expression LE expression .)
    NEQ             reduce using rule 15 (expression -> expression LE expression .)
    GE              reduce using rule 15 (expression -> expression LE expression .)
    LE              reduce using rule 15 (expression -> expression LE expression .)
    GT              reduce using rule 15 (expression -> expression LE expression .)
    LT              reduce using rule 15 (expression -> expression LE expression .)
    {               reduce using rule 15 (expression -> expression LE expression .)
    FOR             reduce using rule 15 (expression -> expression LE expression .)
    WHILE           reduce using rule 15 (expression -> expression LE expression .)
    IF              reduce using rule 15 (expression -> expression LE expression .)
    PRINT           reduce using rule 15 (expression -> expression LE expression .)
    BREAK           reduce using rule 15 (expression -> expression LE expression .)
    CONTINUE        reduce using rule 15 (expression -> expression LE expression .)
    RETURN          reduce using rule 15 (expression -> expression LE expression .)
    [               reduce using rule 15 (expression -> expression LE expression .)
    EYE             reduce using rule 15 (expression -> expression LE expression .)
    ONES            reduce using rule 15 (expression -> expression LE expression .)
    ZEROS           reduce using rule 15 (expression -> expression LE expression .)
    (               reduce using rule 15 (expression -> expression LE expression .)
    STRING          reduce using rule 15 (expression -> expression LE expression .)
    FLOATNUM        reduce using rule 15 (expression -> expression LE expression .)
    INTNUM          reduce using rule 15 (expression -> expression LE expression .)
    ID              reduce using rule 15 (expression -> expression LE expression .)
    ,               reduce using rule 15 (expression -> expression LE expression .)
    )               reduce using rule 15 (expression -> expression LE expression .)
    '               shift and go to state 30
    DOTDIVIDE       shift and go to state 38
    DOTTIMES        shift and go to state 39
    DOTMINUS        shift and go to state 40
    DOTPLUS         shift and go to state 41
    /               shift and go to state 42
    *               shift and go to state 43
    -               shift and go to state 44
    +               shift and go to state 45


state 77

    (16) expression -> expression GT expression .
    (10) expression -> expression . '
    (11) expression -> expression . = expression
    (12) expression -> expression . EQ expression
    (13) expression -> expression . NEQ expression
    (14) expression -> expression . GE expression
    (15) expression -> expression . LE expression
    (16) expression -> expression . GT expression
    (17) expression -> expression . LT expression
    (18) expression -> expression . DOTDIVIDE expression
    (19) expression -> expression . DOTTIMES expression
    (20) expression -> expression . DOTMINUS expression
    (21) expression -> expression . DOTPLUS expression
    (22) expression -> expression . / expression
    (23) expression -> expression . * expression
    (24) expression -> expression . - expression
    (25) expression -> expression . + expression
    ;               reduce using rule 16 (expression -> expression GT expression .)
    =               reduce using rule 16 (expression -> expression GT expression .)
    EQ              reduce using rule 16 (expression -> expression GT expression .)
    NEQ             reduce using rule 16 (expression -> expression GT expression .)
    GE              reduce using rule 16 (expression -> expression GT expression .)
    LE              reduce using rule 16 (expression -> expression GT expression .)
    GT              reduce using rule 16 (expression -> expression GT expression .)
    LT              reduce using rule 16 (expression -> expression GT expression .)
    {               reduce using rule 16 (expression -> expression GT expression .)
    FOR             reduce using rule 16 (expression -> expression GT expression .)
    WHILE           reduce using rule 16 (expression -> expression GT expression .)
    IF              reduce using rule 16 (expression -> expression GT expression .)
    PRINT           reduce using rule 16 (expression -> expression GT expression .)
    BREAK           reduce using rule 16 (expression -> expression GT expression .)
    CONTINUE        reduce using rule 16 (expression -> expression GT expression .)
    RETURN          reduce using rule 16 (expression -> expression GT expression .)
    [               reduce using rule 16 (expression -> expression GT expression .)
    EYE             reduce using rule 16 (expression -> expression GT expression .)
    ONES            reduce using rule 16 (expression -> expression GT expression .)
    ZEROS           reduce using rule 16 (expression -> expression GT expression .)
    (               reduce using rule 16 (expression -> expression GT expression .)
    STRING          reduce using rule 16 (expression -> expression GT expression .)
    FLOATNUM        reduce using rule 16 (expression -> expression GT expression .)
    INTNUM          reduce using rule 16 (expression -> expression GT expression .)
    ID              reduce using rule 16 (expression -> expression GT expression .)
    ,               reduce using rule 16 (expression -> expression GT expression .)
    )               reduce using rule 16 (expression -> expression GT expression .)
    '               shift and go to state 30
    DOTDIVIDE       shift and go to state 38
    DOTTIMES        shift and go to state 39
    DOTMINUS        shift and go to state 40
    DOTPLUS         shift and go to state 41
    /               shift and go to state 42
    *               shift and go to state 43
    -               shift and go to state 44
    +               shift and go to state 45


state 78

    (17) expression -> expression LT expression .
    (10) expression -> expression . '
    (11) expression -> expression . = expression
    (12) expression -> expression . EQ expression
    (13) expression -> expression . NEQ expression
    (14) expression -> expression . GE expression
    (15) expression -> expression . LE expression
    (16) expression -> expression . GT expression
    (17) expression -> expression . LT expression
    (18) expression -> expression . DOTDIVIDE expression
    (19) expression -> expression . DOTTIMES expression
    (20) expression -> expression . DOTMINUS expression
    (21) expression -> expression . DOTPLUS expression
    (22) expression -> expression . / expression
    (23) expression -> expression . * expression
    (24) expression -> expression . - expression
    (25) expression -> expression . + expression
    ;               reduce using rule 17 (expression -> expression LT expression .)
    =               reduce using rule 17 (expression -> expression LT expression .)
    EQ              reduce using rule 17 (expression -> expression LT expression .)
    NEQ             reduce using rule 17 (expression -> expression LT expression .)
    GE              reduce using rule 17 (expression -> expression LT expression .)
    LE              reduce using rule 17 (expression -> expression LT expression .)
    GT              reduce using rule 17 (expression -> expression LT expression .)
    LT              reduce using rule 17 (expression -> expression LT expression .)
    {               reduce using rule 17 (expression -> expression LT expression .)
    FOR             reduce using rule 17 (expression -> expression LT expression .)
    WHILE           reduce using rule 17 (expression -> expression LT expression .)
    IF              reduce using rule 17 (expression -> expression LT expression .)
    PRINT           reduce using rule 17 (expression -> expression LT expression .)
    BREAK           reduce using rule 17 (expression -> expression LT expression .)
    CONTINUE        reduce using rule 17 (expression -> expression LT expression .)
    RETURN          reduce using rule 17 (expression -> expression LT expression .)
    [               reduce using rule 17 (expression -> expression LT expression .)
    EYE             reduce using rule 17 (expression -> expression LT expression .)
    ONES            reduce using rule 17 (expression -> expression LT expression .)
    ZEROS           reduce using rule 17 (expression -> expression LT expression .)
    (               reduce using rule 17 (expression -> expression LT expression .)
    STRING          reduce using rule 17 (expression -> expression LT expression .)
    FLOATNUM        reduce using rule 17 (expression -> expression LT expression .)
    INTNUM          reduce using rule 17 (expression -> expression LT expression .)
    ID              reduce using rule 17 (expression -> expression LT expression .)
    ,               reduce using rule 17 (expression -> expression LT expression .)
    )               reduce using rule 17 (expression -> expression LT expression .)
    '               shift and go to state 30
    DOTDIVIDE       shift and go to state 38
    DOTTIMES        shift and go to state 39
    DOTMINUS        shift and go to state 40
    DOTPLUS         shift and go to state 41
    /               shift and go to state 42
    *               shift and go to state 43
    -               shift and go to state 44
    +               shift and go to state 45


state 79

    (18) expression -> expression DOTDIVIDE expression .
    (10) expression -> expression . '
    (11) expression -> expression . = expression
    (12) expression -> expression . EQ expression
    (13) expression -> expression . NEQ expression
    (14) expression -> expression . GE expression
    (15) expression -> expression . LE expression
    (16) expression -> expression . GT expression
    (17) expression -> expression . LT expression
    (18) expression -> expression . DOTDIVIDE expression
    (19) expression -> expression . DOTTIMES expression
    (20) expression -> expression . DOTMINUS expression
    (21) expression -> expression . DOTPLUS expression
    (22) expression -> expression . / expression
    (23) expression -> expression . * expression
    (24) expression -> expression . - expression
    (25) expression -> expression . + expression
    ;               reduce using rule 18 (expression -> expression DOTDIVIDE expression .)
    =               reduce using rule 18 (expression -> expression DOTDIVIDE expression .)
    EQ              reduce using rule 18 (expression -> expression DOTDIVIDE expression .)
    NEQ             reduce using rule 18 (expression -> expression DOTDIVIDE expression .)
    GE              reduce using rule 18 (expression -> expression DOTDIVIDE expression .)
    LE              reduce using rule 18 (expression -> expression DOTDIVIDE expression .)
    GT              reduce using rule 18 (expression -> expression DOTDIVIDE expression .)
    LT              reduce using rule 18 (expression -> expression DOTDIVIDE expression .)
    DOTDIVIDE       reduce using rule 18 (expression -> expression DOTDIVIDE expression .)
    DOTTIMES        reduce using rule 18 (expression -> expression DOTDIVIDE expression .)
    DOTMINUS        reduce using rule 18 (expression -> expression DOTDIVIDE expression .)
    DOTPLUS         reduce using rule 18 (expression -> expression DOTDIVIDE expression .)
    /               reduce using rule 18 (expression -> expression DOTDIVIDE expression .)
    *               reduce using rule 18 (expression -> expression DOTDIVIDE expression .)
    +               reduce using rule 18 (expression -> expression DOTDIVIDE expression .)
    {               reduce using rule 18 (expression -> expression DOTDIVIDE expression .)
    FOR             reduce using rule 18 (expression -> expression DOTDIVIDE expression .)
    WHILE           reduce using rule 18 (expression -> expression DOTDIVIDE expression .)
    IF              reduce using rule 18 (expression -> expression DOTDIVIDE expression .)
    PRINT           reduce using rule 18 (expression -> expression DOTDIVIDE expression .)
    BREAK           reduce using rule 18 (expression -> expression DOTDIVIDE expression .)
    CONTINUE        reduce using rule 18 (expression -> expression DOTDIVIDE expression .)
    RETURN          reduce using rule 18 (expression -> expression DOTDIVIDE expression .)
    [               reduce using rule 18 (expression -> expression DOTDIVIDE expression .)
    EYE             reduce using rule 18 (expression -> expression DOTDIVIDE expression .)
    ONES            reduce using rule 18 (expression -> expression DOTDIVIDE expression .)
    ZEROS           reduce using rule 18 (expression -> expression DOTDIVIDE expression .)
    (               reduce using rule 18 (expression -> expression DOTDIVIDE expression .)
    STRING          reduce using rule 18 (expression -> expression DOTDIVIDE expression .)
    FLOATNUM        reduce using rule 18 (expression -> expression DOTDIVIDE expression .)
    INTNUM          reduce using rule 18 (expression -> expression DOTDIVIDE expression .)
    ID              reduce using rule 18 (expression -> expression DOTDIVIDE expression .)
    ,               reduce using rule 18 (expression -> expression DOTDIVIDE expression .)
    )               reduce using rule 18 (expression -> expression DOTDIVIDE expression .)
    '               shift and go to state 30
    -               shift and go to state 44


state 80

    (19) expression -> expression DOTTIMES expression .
    (10) expression -> expression . '
    (11) expression -> expression . = expression
    (12) expression -> expression . EQ expression
    (13) expression -> expression . NEQ expression
    (14) expression -> expression . GE expression
    (15) expression -> expression . LE expression
    (16) expression -> expression . GT expression
    (17) expression -> expression . LT expression
    (18) expression -> expression . DOTDIVIDE expression
    (19) expression -> expression . DOTTIMES expression
    (20) expression -> expression . DOTMINUS expression
    (21) expression -> expression . DOTPLUS expression
    (22) expression -> expression . / expression
    (23) expression -> expression . * expression
    (24) expression -> expression . - expression
    (25) expression -> expression . + expression
    ;               reduce using rule 19 (expression -> expression DOTTIMES expression .)
    =               reduce using rule 19 (expression -> expression DOTTIMES expression .)
    EQ              reduce using rule 19 (expression -> expression DOTTIMES expression .)
    NEQ             reduce using rule 19 (expression -> expression DOTTIMES expression .)
    GE              reduce using rule 19 (expression -> expression DOTTIMES expression .)
    LE              reduce using rule 19 (expression -> expression DOTTIMES expression .)
    GT              reduce using rule 19 (expression -> expression DOTTIMES expression .)
    LT              reduce using rule 19 (expression -> expression DOTTIMES expression .)
    DOTDIVIDE       reduce using rule 19 (expression -> expression DOTTIMES expression .)
    DOTTIMES        reduce using rule 19 (expression -> expression DOTTIMES expression .)
    DOTMINUS        reduce using rule 19 (expression -> expression DOTTIMES expression .)
    DOTPLUS         reduce using rule 19 (expression -> expression DOTTIMES expression .)
    /               reduce using rule 19 (expression -> expression DOTTIMES expression .)
    *               reduce using rule 19 (expression -> expression DOTTIMES expression .)
    +               reduce using rule 19 (expression -> expression DOTTIMES expression .)
    {               reduce using rule 19 (expression -> expression DOTTIMES expression .)
    FOR             reduce using rule 19 (expression -> expression DOTTIMES expression .)
    WHILE           reduce using rule 19 (expression -> expression DOTTIMES expression .)
    IF              reduce using rule 19 (expression -> expression DOTTIMES expression .)
    PRINT           reduce using rule 19 (expression -> expression DOTTIMES expression .)
    BREAK           reduce using rule 19 (expression -> expression DOTTIMES expression .)
    CONTINUE        reduce using rule 19 (expression -> expression DOTTIMES expression .)
    RETURN          reduce using rule 19 (expression -> expression DOTTIMES expression .)
    [               reduce using rule 19 (expression -> expression DOTTIMES expression .)
    EYE             reduce using rule 19 (expression -> expression DOTTIMES expression .)
    ONES            reduce using rule 19 (expression -> expression DOTTIMES expression .)
    ZEROS           reduce using rule 19 (expression -> expression DOTTIMES expression .)
    (               reduce using rule 19 (expression -> expression DOTTIMES expression .)
    STRING          reduce using rule 19 (expression -> expression DOTTIMES expression .)
    FLOATNUM        reduce using rule 19 (expression -> expression DOTTIMES expression .)
    INTNUM          reduce using rule 19 (expression -> expression DOTTIMES expression .)
    ID              reduce using rule 19 (expression -> expression DOTTIMES expression .)
    ,               reduce using rule 19 (expression -> expression DOTTIMES expression .)
    )               reduce using rule 19 (expression -> expression DOTTIMES expression .)
    '               shift and go to state 30
    -               shift and go to state 44


state 81

    (20) expression -> expression DOTMINUS expression .
    (10) expression -> expression . '
    (11) expression -> expression . = expression
    (12) expression -> expression . EQ expression
    (13) expression -> expression . NEQ expression
    (14) expression -> expression . GE expression
    (15) expression -> expression . LE expression
    (16) expression -> expression . GT expression
    (17) expression -> expression . LT expression
    (18) expression -> expression . DOTDIVIDE expression
    (19) expression -> expression . DOTTIMES expression
    (20) expression -> expression . DOTMINUS expression
    (21) expression -> expression . DOTPLUS expression
    (22) expression -> expression . / expression
    (23) expression -> expression . * expression
    (24) expression -> expression . - expression
    (25) expression -> expression . + expression
    ;               reduce using rule 20 (expression -> expression DOTMINUS expression .)
    =               reduce using rule 20 (expression -> expression DOTMINUS expression .)
    EQ              reduce using rule 20 (expression -> expression DOTMINUS expression .)
    NEQ             reduce using rule 20 (expression -> expression DOTMINUS expression .)
    GE              reduce using rule 20 (expression -> expression DOTMINUS expression .)
    LE              reduce using rule 20 (expression -> expression DOTMINUS expression .)
    GT              reduce using rule 20 (expression -> expression DOTMINUS expression .)
    LT              reduce using rule 20 (expression -> expression DOTMINUS expression .)
    DOTMINUS        reduce using rule 20 (expression -> expression DOTMINUS expression .)
    DOTPLUS         reduce using rule 20 (expression -> expression DOTMINUS expression .)
    +               reduce using rule 20 (expression -> expression DOTMINUS expression .)
    {               reduce using rule 20 (expression -> expression DOTMINUS expression .)
    FOR             reduce using rule 20 (expression -> expression DOTMINUS expression .)
    WHILE           reduce using rule 20 (expression -> expression DOTMINUS expression .)
    IF              reduce using rule 20 (expression -> expression DOTMINUS expression .)
    PRINT           reduce using rule 20 (expression -> expression DOTMINUS expression .)
    BREAK           reduce using rule 20 (expression -> expression DOTMINUS expression .)
    CONTINUE        reduce using rule 20 (expression -> expression DOTMINUS expression .)
    RETURN          reduce using rule 20 (expression -> expression DOTMINUS expression .)
    [               reduce using rule 20 (expression -> expression DOTMINUS expression .)
    EYE             reduce using rule 20 (expression -> expression DOTMINUS expression .)
    ONES            reduce using rule 20 (expression -> expression DOTMINUS expression .)
    ZEROS           reduce using rule 20 (expression -> expression DOTMINUS expression .)
    (               reduce using rule 20 (expression -> expression DOTMINUS expression .)
    STRING          reduce using rule 20 (expression -> expression DOTMINUS expression .)
    FLOATNUM        reduce using rule 20 (expression -> expression DOTMINUS expression .)
    INTNUM          reduce using rule 20 (expression -> expression DOTMINUS expression .)
    ID              reduce using rule 20 (expression -> expression DOTMINUS expression .)
    ,               reduce using rule 20 (expression -> expression DOTMINUS expression .)
    )               reduce using rule 20 (expression -> expression DOTMINUS expression .)
    '               shift and go to state 30
    DOTDIVIDE       shift and go to state 38
    DOTTIMES        shift and go to state 39
    /               shift and go to state 42
    *               shift and go to state 43
    -               shift and go to state 44


state 82

    (21) expression -> expression DOTPLUS expression .
    (10) expression -> expression . '
    (11) expression -> expression . = expression
    (12) expression -> expression . EQ expression
    (13) expression -> expression . NEQ expression
    (14) expression -> expression . GE expression
    (15) expression -> expression . LE expression
    (16) expression -> expression . GT expression
    (17) expression -> expression . LT expression
    (18) expression -> expression . DOTDIVIDE expression
    (19) expression -> expression . DOTTIMES expression
    (20) expression -> expression . DOTMINUS expression
    (21) expression -> expression . DOTPLUS expression
    (22) expression -> expression . / expression
    (23) expression -> expression . * expression
    (24) expression -> expression . - expression
    (25) expression -> expression . + expression
    ;               reduce using rule 21 (expression -> expression DOTPLUS expression .)
    =               reduce using rule 21 (expression -> expression DOTPLUS expression .)
    EQ              reduce using rule 21 (expression -> expression DOTPLUS expression .)
    NEQ             reduce using rule 21 (expression -> expression DOTPLUS expression .)
    GE              reduce using rule 21 (expression -> expression DOTPLUS expression .)
    LE              reduce using rule 21 (expression -> expression DOTPLUS expression .)
    GT              reduce using rule 21 (expression -> expression DOTPLUS expression .)
    LT              reduce using rule 21 (expression -> expression DOTPLUS expression .)
    DOTMINUS        reduce using rule 21 (expression -> expression DOTPLUS expression .)
    DOTPLUS         reduce using rule 21 (expression -> expression DOTPLUS expression .)
    +               reduce using rule 21 (expression -> expression DOTPLUS expression .)
    {               reduce using rule 21 (expression -> expression DOTPLUS expression .)
    FOR             reduce using rule 21 (expression -> expression DOTPLUS expression .)
    WHILE           reduce using rule 21 (expression -> expression DOTPLUS expression .)
    IF              reduce using rule 21 (expression -> expression DOTPLUS expression .)
    PRINT           reduce using rule 21 (expression -> expression DOTPLUS expression .)
    BREAK           reduce using rule 21 (expression -> expression DOTPLUS expression .)
    CONTINUE        reduce using rule 21 (expression -> expression DOTPLUS expression .)
    RETURN          reduce using rule 21 (expression -> expression DOTPLUS expression .)
    [               reduce using rule 21 (expression -> expression DOTPLUS expression .)
    EYE             reduce using rule 21 (expression -> expression DOTPLUS expression .)
    ONES            reduce using rule 21 (expression -> expression DOTPLUS expression .)
    ZEROS           reduce using rule 21 (expression -> expression DOTPLUS expression .)
    (               reduce using rule 21 (expression -> expression DOTPLUS expression .)
    STRING          reduce using rule 21 (expression -> expression DOTPLUS expression .)
    FLOATNUM        reduce using rule 21 (expression -> expression DOTPLUS expression .)
    INTNUM          reduce using rule 21 (expression -> expression DOTPLUS expression .)
    ID              reduce using rule 21 (expression -> expression DOTPLUS expression .)
    ,               reduce using rule 21 (expression -> expression DOTPLUS expression .)
    )               reduce using rule 21 (expression -> expression DOTPLUS expression .)
    '               shift and go to state 30
    DOTDIVIDE       shift and go to state 38
    DOTTIMES        shift and go to state 39
    /               shift and go to state 42
    *               shift and go to state 43
    -               shift and go to state 44


state 83

    (22) expression -> expression / expression .
    (10) expression -> expression . '
    (11) expression -> expression . = expression
    (12) expression -> expression . EQ expression
    (13) expression -> expression . NEQ expression
    (14) expression -> expression . GE expression
    (15) expression -> expression . LE expression
    (16) expression -> expression . GT expression
    (17) expression -> expression . LT expression
    (18) expression -> expression . DOTDIVIDE expression
    (19) expression -> expression . DOTTIMES expression
    (20) expression -> expression . DOTMINUS expression
    (21) expression -> expression . DOTPLUS expression
    (22) expression -> expression . / expression
    (23) expression -> expression . * expression
    (24) expression -> expression . - expression
    (25) expression -> expression . + expression
    ;               reduce using rule 22 (expression -> expression / expression .)
    =               reduce using rule 22 (expression -> expression / expression .)
    EQ              reduce using rule 22 (expression -> expression / expression .)
    NEQ             reduce using rule 22 (expression -> expression / expression .)
    GE              reduce using rule 22 (expression -> expression / expression .)
    LE              reduce using rule 22 (expression -> expression / expression .)
    GT              reduce using rule 22 (expression -> expression / expression .)
    LT              reduce using rule 22 (expression -> expression / expression .)
    DOTDIVIDE       reduce using rule 22 (expression -> expression / expression .)
    DOTTIMES        reduce using rule 22 (expression -> expression / expression .)
    DOTMINUS        reduce using rule 22 (expression -> expression / expression .)
    DOTPLUS         reduce using rule 22 (expression -> expression / expression .)
    /               reduce using rule 22 (expression -> expression / expression .)
    *               reduce using rule 22 (expression -> expression / expression .)
    +               reduce using rule 22 (expression -> expression / expression .)
    {               reduce using rule 22 (expression -> expression / expression .)
    FOR             reduce using rule 22 (expression -> expression / expression .)
    WHILE           reduce using rule 22 (expression -> expression / expression .)
    IF              reduce using rule 22 (expression -> expression / expression .)
    PRINT           reduce using rule 22 (expression -> expression / expression .)
    BREAK           reduce using rule 22 (expression -> expression / expression .)
    CONTINUE        reduce using rule 22 (expression -> expression / expression .)
    RETURN          reduce using rule 22 (expression -> expression / expression .)
    [               reduce using rule 22 (expression -> expression / expression .)
    EYE             reduce using rule 22 (expression -> expression / expression .)
    ONES            reduce using rule 22 (expression -> expression / expression .)
    ZEROS           reduce using rule 22 (expression -> expression / expression .)
    (               reduce using rule 22 (expression -> expression / expression .)
    STRING          reduce using rule 22 (expression -> expression / expression .)
    FLOATNUM        reduce using rule 22 (expression -> expression / expression .)
    INTNUM          reduce using rule 22 (expression -> expression / expression .)
    ID              reduce using rule 22 (expression -> expression / expression .)
    ,               reduce using rule 22 (expression -> expression / expression .)
    )               reduce using rule 22 (expression -> expression / expression .)
    '               shift and go to state 30
    -               shift and go to state 44


state 84

    (23) expression -> expression * expression .
    (10) expression -> expression . '
    (11) expression -> expression . = expression
    (12) expression -> expression . EQ expression
    (13) expression -> expression . NEQ expression
    (14) expression -> expression . GE expression
    (15) expression -> expression . LE expression
    (16) expression -> expression . GT expression
    (17) expression -> expression . LT expression
    (18) expression -> expression . DOTDIVIDE expression
    (19) expression -> expression . DOTTIMES expression
    (20) expression -> expression . DOTMINUS expression
    (21) expression -> expression . DOTPLUS expression
    (22) expression -> expression . / expression
    (23) expression -> expression . * expression
    (24) expression -> expression . - expression
    (25) expression -> expression . + expression
    ;               reduce using rule 23 (expression -> expression * expression .)
    =               reduce using rule 23 (expression -> expression * expression .)
    EQ              reduce using rule 23 (expression -> expression * expression .)
    NEQ             reduce using rule 23 (expression -> expression * expression .)
    GE              reduce using rule 23 (expression -> expression * expression .)
    LE              reduce using rule 23 (expression -> expression * expression .)
    GT              reduce using rule 23 (expression -> expression * expression .)
    LT              reduce using rule 23 (expression -> expression * expression .)
    DOTDIVIDE       reduce using rule 23 (expression -> expression * expression .)
    DOTTIMES        reduce using rule 23 (expression -> expression * expression .)
    DOTMINUS        reduce using rule 23 (expression -> expression * expression .)
    DOTPLUS         reduce using rule 23 (expression -> expression * expression .)
    /               reduce using rule 23 (expression -> expression * expression .)
    *               reduce using rule 23 (expression -> expression * expression .)
    +               reduce using rule 23 (expression -> expression * expression .)
    {               reduce using rule 23 (expression -> expression * expression .)
    FOR             reduce using rule 23 (expression -> expression * expression .)
    WHILE           reduce using rule 23 (expression -> expression * expression .)
    IF              reduce using rule 23 (expression -> expression * expression .)
    PRINT           reduce using rule 23 (expression -> expression * expression .)
    BREAK           reduce using rule 23 (expression -> expression * expression .)
    CONTINUE        reduce using rule 23 (expression -> expression * expression .)
    RETURN          reduce using rule 23 (expression -> expression * expression .)
    [               reduce using rule 23 (expression -> expression * expression .)
    EYE             reduce using rule 23 (expression -> expression * expression .)
    ONES            reduce using rule 23 (expression -> expression * expression .)
    ZEROS           reduce using rule 23 (expression -> expression * expression .)
    (               reduce using rule 23 (expression -> expression * expression .)
    STRING          reduce using rule 23 (expression -> expression * expression .)
    FLOATNUM        reduce using rule 23 (expression -> expression * expression .)
    INTNUM          reduce using rule 23 (expression -> expression * expression .)
    ID              reduce using rule 23 (expression -> expression * expression .)
    ,               reduce using rule 23 (expression -> expression * expression .)
    )               reduce using rule 23 (expression -> expression * expression .)
    '               shift and go to state 30
    -               shift and go to state 44


state 85

    (24) expression -> expression - expression .
    (10) expression -> expression . '
    (11) expression -> expression . = expression
    (12) expression -> expression . EQ expression
    (13) expression -> expression . NEQ expression
    (14) expression -> expression . GE expression
    (15) expression -> expression . LE expression
    (16) expression -> expression . GT expression
    (17) expression -> expression . LT expression
    (18) expression -> expression . DOTDIVIDE expression
    (19) expression -> expression . DOTTIMES expression
    (20) expression -> expression . DOTMINUS expression
    (21) expression -> expression . DOTPLUS expression
    (22) expression -> expression . / expression
    (23) expression -> expression . * expression
    (24) expression -> expression . - expression
    (25) expression -> expression . + expression
    ;               reduce using rule 24 (expression -> expression - expression .)
    '               reduce using rule 24 (expression -> expression - expression .)
    =               reduce using rule 24 (expression -> expression - expression .)
    EQ              reduce using rule 24 (expression -> expression - expression .)
    NEQ             reduce using rule 24 (expression -> expression - expression .)
    GE              reduce using rule 24 (expression -> expression - expression .)
    LE              reduce using rule 24 (expression -> expression - expression .)
    GT              reduce using rule 24 (expression -> expression - expression .)
    LT              reduce using rule 24 (expression -> expression - expression .)
    DOTDIVIDE       reduce using rule 24 (expression -> expression - expression .)
    DOTTIMES        reduce using rule 24 (expression -> expression - expression .)
    DOTMINUS        reduce using rule 24 (expression -> expression - expression .)
    DOTPLUS         reduce using rule 24 (expression -> expression - expression .)
    /               reduce using rule 24 (expression -> expression - expression .)
    *               reduce using rule 24 (expression -> expression - expression .)
    +               reduce using rule 24 (expression -> expression - expression .)
    ,               reduce using rule 24 (expression -> expression - expression .)
    )               reduce using rule 24 (expression -> expression - expression .)
    {               reduce using rule 24 (expression -> expression - expression .)
    FOR             reduce using rule 24 (expression -> expression - expression .)
    WHILE           reduce using rule 24 (expression -> expression - expression .)
    IF              reduce using rule 24 (expression -> expression - expression .)
    PRINT           reduce using rule 24 (expression -> expression - expression .)
    BREAK           reduce using rule 24 (expression -> expression - expression .)
    CONTINUE        reduce using rule 24 (expression -> expression - expression .)
    RETURN          reduce using rule 24 (expression -> expression - expression .)
    [               reduce using rule 24 (expression -> expression - expression .)
    EYE             reduce using rule 24 (expression -> expression - expression .)
    ONES            reduce using rule 24 (expression -> expression - expression .)
    ZEROS           reduce using rule 24 (expression -> expression - expression .)
    (               reduce using rule 24 (expression -> expression - expression .)
    STRING          reduce using rule 24 (expression -> expression - expression .)
    FLOATNUM        reduce using rule 24 (expression -> expression - expression .)
    INTNUM          reduce using rule 24 (expression -> expression - expression .)
    ID              reduce using rule 24 (expression -> expression - expression .)
    -               shift and go to state 44


state 86

    (25) expression -> expression + expression .
    (10) expression -> expression . '
    (11) expression -> expression . = expression
    (12) expression -> expression . EQ expression
    (13) expression -> expression . NEQ expression
    (14) expression -> expression . GE expression
    (15) expression -> expression . LE expression
    (16) expression -> expression . GT expression
    (17) expression -> expression . LT expression
    (18) expression -> expression . DOTDIVIDE expression
    (19) expression -> expression . DOTTIMES expression
    (20) expression -> expression . DOTMINUS expression
    (21) expression -> expression . DOTPLUS expression
    (22) expression -> expression . / expression
    (23) expression -> expression . * expression
    (24) expression -> expression . - expression
    (25) expression -> expression . + expression
    ;               reduce using rule 25 (expression -> expression + expression .)
    =               reduce using rule 25 (expression -> expression + expression .)
    EQ              reduce using rule 25 (expression -> expression + expression .)
    NEQ             reduce using rule 25 (expression -> expression + expression .)
    GE              reduce using rule 25 (expression -> expression + expression .)
    LE              reduce using rule 25 (expression -> expression + expression .)
    GT              reduce using rule 25 (expression -> expression + expression .)
    LT              reduce using rule 25 (expression -> expression + expression .)
    DOTMINUS        reduce using rule 25 (expression -> expression + expression .)
    DOTPLUS         reduce using rule 25 (expression -> expression + expression .)
    +               reduce using rule 25 (expression -> expression + expression .)
    {               reduce using rule 25 (expression -> expression + expression .)
    FOR             reduce using rule 25 (expression -> expression + expression .)
    WHILE           reduce using rule 25 (expression -> expression + expression .)
    IF              reduce using rule 25 (expression -> expression + expression .)
    PRINT           reduce using rule 25 (expression -> expression + expression .)
    BREAK           reduce using rule 25 (expression -> expression + expression .)
    CONTINUE        reduce using rule 25 (expression -> expression + expression .)
    RETURN          reduce using rule 25 (expression -> expression + expression .)
    [               reduce using rule 25 (expression -> expression + expression .)
    EYE             reduce using rule 25 (expression -> expression + expression .)
    ONES            reduce using rule 25 (expression -> expression + expression .)
    ZEROS           reduce using rule 25 (expression -> expression + expression .)
    (               reduce using rule 25 (expression -> expression + expression .)
    STRING          reduce using rule 25 (expression -> expression + expression .)
    FLOATNUM        reduce using rule 25 (expression -> expression + expression .)
    INTNUM          reduce using rule 25 (expression -> expression + expression .)
    ID              reduce using rule 25 (expression -> expression + expression .)
    ,               reduce using rule 25 (expression -> expression + expression .)
    )               reduce using rule 25 (expression -> expression + expression .)
    '               shift and go to state 30
    DOTDIVIDE       shift and go to state 38
    DOTTIMES        shift and go to state 39
    /               shift and go to state 42
    *               shift and go to state 43
    -               shift and go to state 44


state 87

    (45) statement -> IF expression block . ELSE block
    (46) statement -> IF expression block .
  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 118
    {               reduce using rule 46 (statement -> IF expression block .)
    FOR             reduce using rule 46 (statement -> IF expression block .)
    WHILE           reduce using rule 46 (statement -> IF expression block .)
    IF              reduce using rule 46 (statement -> IF expression block .)
    PRINT           reduce using rule 46 (statement -> IF expression block .)
    BREAK           reduce using rule 46 (statement -> IF expression block .)
    CONTINUE        reduce using rule 46 (statement -> IF expression block .)
    RETURN          reduce using rule 46 (statement -> IF expression block .)
    [               reduce using rule 46 (statement -> IF expression block .)
    EYE             reduce using rule 46 (statement -> IF expression block .)
    ONES            reduce using rule 46 (statement -> IF expression block .)
    ZEROS           reduce using rule 46 (statement -> IF expression block .)
    -               reduce using rule 46 (statement -> IF expression block .)
    (               reduce using rule 46 (statement -> IF expression block .)
    STRING          reduce using rule 46 (statement -> IF expression block .)
    FLOATNUM        reduce using rule 46 (statement -> IF expression block .)
    INTNUM          reduce using rule 46 (statement -> IF expression block .)
    ID              reduce using rule 46 (statement -> IF expression block .)
    $end            reduce using rule 46 (statement -> IF expression block .)
    }               reduce using rule 46 (statement -> IF expression block .)


state 88

    (47) statement -> PRINT prints ; .
    {               reduce using rule 47 (statement -> PRINT prints ; .)
    FOR             reduce using rule 47 (statement -> PRINT prints ; .)
    WHILE           reduce using rule 47 (statement -> PRINT prints ; .)
    IF              reduce using rule 47 (statement -> PRINT prints ; .)
    PRINT           reduce using rule 47 (statement -> PRINT prints ; .)
    BREAK           reduce using rule 47 (statement -> PRINT prints ; .)
    CONTINUE        reduce using rule 47 (statement -> PRINT prints ; .)
    RETURN          reduce using rule 47 (statement -> PRINT prints ; .)
    [               reduce using rule 47 (statement -> PRINT prints ; .)
    EYE             reduce using rule 47 (statement -> PRINT prints ; .)
    ONES            reduce using rule 47 (statement -> PRINT prints ; .)
    ZEROS           reduce using rule 47 (statement -> PRINT prints ; .)
    -               reduce using rule 47 (statement -> PRINT prints ; .)
    (               reduce using rule 47 (statement -> PRINT prints ; .)
    STRING          reduce using rule 47 (statement -> PRINT prints ; .)
    FLOATNUM        reduce using rule 47 (statement -> PRINT prints ; .)
    INTNUM          reduce using rule 47 (statement -> PRINT prints ; .)
    ID              reduce using rule 47 (statement -> PRINT prints ; .)
    $end            reduce using rule 47 (statement -> PRINT prints ; .)
    }               reduce using rule 47 (statement -> PRINT prints ; .)
    ELSE            reduce using rule 47 (statement -> PRINT prints ; .)


state 89

    (59) prints -> expression ; .
    ;               reduce using rule 59 (prints -> expression ; .)


state 90

    (60) prints -> expression , . prints
    (59) prints -> . expression ;
    (60) prints -> . expression , prints
    (5) expression -> . [ list ]
    (6) expression -> . EYE ( expression )
    (7) expression -> . ONES ( expression )
    (8) expression -> . ZEROS ( expression )
    (9) expression -> . - expression
    (10) expression -> . expression '
    (11) expression -> . expression = expression
    (12) expression -> . expression EQ expression
    (13) expression -> . expression NEQ expression
    (14) expression -> . expression GE expression
    (15) expression -> . expression LE expression
    (16) expression -> . expression GT expression
    (17) expression -> . expression LT expression
    (18) expression -> . expression DOTDIVIDE expression
    (19) expression -> . expression DOTTIMES expression
    (20) expression -> . expression DOTMINUS expression
    (21) expression -> . expression DOTPLUS expression
    (22) expression -> . expression / expression
    (23) expression -> . expression * expression
    (24) expression -> . expression - expression
    (25) expression -> . expression + expression
    (26) expression -> . ( expression )
    (27) expression -> . STRING
    (28) expression -> . FLOATNUM
    (29) expression -> . INTNUM
    [               shift and go to state 15
    EYE             shift and go to state 16
    ONES            shift and go to state 18
    ZEROS           shift and go to state 19
    -               shift and go to state 20
    (               shift and go to state 17
    STRING          shift and go to state 21
    FLOATNUM        shift and go to state 22
    INTNUM          shift and go to state 23

    expression                     shift and go to state 48
    prints                         shift and go to state 119

state 91

    (51) statement -> RETURN expression ; .
    {               reduce using rule 51 (statement -> RETURN expression ; .)
    FOR             reduce using rule 51 (statement -> RETURN expression ; .)
    WHILE           reduce using rule 51 (statement -> RETURN expression ; .)
    IF              reduce using rule 51 (statement -> RETURN expression ; .)
    PRINT           reduce using rule 51 (statement -> RETURN expression ; .)
    BREAK           reduce using rule 51 (statement -> RETURN expression ; .)
    CONTINUE        reduce using rule 51 (statement -> RETURN expression ; .)
    RETURN          reduce using rule 51 (statement -> RETURN expression ; .)
    [               reduce using rule 51 (statement -> RETURN expression ; .)
    EYE             reduce using rule 51 (statement -> RETURN expression ; .)
    ONES            reduce using rule 51 (statement -> RETURN expression ; .)
    ZEROS           reduce using rule 51 (statement -> RETURN expression ; .)
    -               reduce using rule 51 (statement -> RETURN expression ; .)
    (               reduce using rule 51 (statement -> RETURN expression ; .)
    STRING          reduce using rule 51 (statement -> RETURN expression ; .)
    FLOATNUM        reduce using rule 51 (statement -> RETURN expression ; .)
    INTNUM          reduce using rule 51 (statement -> RETURN expression ; .)
    ID              reduce using rule 51 (statement -> RETURN expression ; .)
    $end            reduce using rule 51 (statement -> RETURN expression ; .)
    }               reduce using rule 51 (statement -> RETURN expression ; .)
    ELSE            reduce using rule 51 (statement -> RETURN expression ; .)


state 92

    (52) statement -> assignable DIVASSIGN expression . ;
    (10) expression -> expression . '
    (11) expression -> expression . = expression
    (12) expression -> expression . EQ expression
    (13) expression -> expression . NEQ expression
    (14) expression -> expression . GE expression
    (15) expression -> expression . LE expression
    (16) expression -> expression . GT expression
    (17) expression -> expression . LT expression
    (18) expression -> expression . DOTDIVIDE expression
    (19) expression -> expression . DOTTIMES expression
    (20) expression -> expression . DOTMINUS expression
    (21) expression -> expression . DOTPLUS expression
    (22) expression -> expression . / expression
    (23) expression -> expression . * expression
    (24) expression -> expression . - expression
    (25) expression -> expression . + expression
    ;               shift and go to state 120
    '               shift and go to state 30
    =               shift and go to state 31
    EQ              shift and go to state 32
    NEQ             shift and go to state 33
    GE              shift and go to state 34
    LE              shift and go to state 35
    GT              shift and go to state 36
    LT              shift and go to state 37
    DOTDIVIDE       shift and go to state 38
    DOTTIMES        shift and go to state 39
    DOTMINUS        shift and go to state 40
    DOTPLUS         shift and go to state 41
    /               shift and go to state 42
    *               shift and go to state 43
    -               shift and go to state 44
    +               shift and go to state 45


state 93

    (53) statement -> assignable MULASSIGN expression . ;
    (10) expression -> expression . '
    (11) expression -> expression . = expression
    (12) expression -> expression . EQ expression
    (13) expression -> expression . NEQ expression
    (14) expression -> expression . GE expression
    (15) expression -> expression . LE expression
    (16) expression -> expression . GT expression
    (17) expression -> expression . LT expression
    (18) expression -> expression . DOTDIVIDE expression
    (19) expression -> expression . DOTTIMES expression
    (20) expression -> expression . DOTMINUS expression
    (21) expression -> expression . DOTPLUS expression
    (22) expression -> expression . / expression
    (23) expression -> expression . * expression
    (24) expression -> expression . - expression
    (25) expression -> expression . + expression
    ;               shift and go to state 121
    '               shift and go to state 30
    =               shift and go to state 31
    EQ              shift and go to state 32
    NEQ             shift and go to state 33
    GE              shift and go to state 34
    LE              shift and go to state 35
    GT              shift and go to state 36
    LT              shift and go to state 37
    DOTDIVIDE       shift and go to state 38
    DOTTIMES        shift and go to state 39
    DOTMINUS        shift and go to state 40
    DOTPLUS         shift and go to state 41
    /               shift and go to state 42
    *               shift and go to state 43
    -               shift and go to state 44
    +               shift and go to state 45


state 94

    (54) statement -> assignable SUBASSIGN expression . ;
    (10) expression -> expression . '
    (11) expression -> expression . = expression
    (12) expression -> expression . EQ expression
    (13) expression -> expression . NEQ expression
    (14) expression -> expression . GE expression
    (15) expression -> expression . LE expression
    (16) expression -> expression . GT expression
    (17) expression -> expression . LT expression
    (18) expression -> expression . DOTDIVIDE expression
    (19) expression -> expression . DOTTIMES expression
    (20) expression -> expression . DOTMINUS expression
    (21) expression -> expression . DOTPLUS expression
    (22) expression -> expression . / expression
    (23) expression -> expression . * expression
    (24) expression -> expression . - expression
    (25) expression -> expression . + expression
    ;               shift and go to state 122
    '               shift and go to state 30
    =               shift and go to state 31
    EQ              shift and go to state 32
    NEQ             shift and go to state 33
    GE              shift and go to state 34
    LE              shift and go to state 35
    GT              shift and go to state 36
    LT              shift and go to state 37
    DOTDIVIDE       shift and go to state 38
    DOTTIMES        shift and go to state 39
    DOTMINUS        shift and go to state 40
    DOTPLUS         shift and go to state 41
    /               shift and go to state 42
    *               shift and go to state 43
    -               shift and go to state 44
    +               shift and go to state 45


state 95

    (55) statement -> assignable ADDASSIGN expression . ;
    (10) expression -> expression . '
    (11) expression -> expression . = expression
    (12) expression -> expression . EQ expression
    (13) expression -> expression . NEQ expression
    (14) expression -> expression . GE expression
    (15) expression -> expression . LE expression
    (16) expression -> expression . GT expression
    (17) expression -> expression . LT expression
    (18) expression -> expression . DOTDIVIDE expression
    (19) expression -> expression . DOTTIMES expression
    (20) expression -> expression . DOTMINUS expression
    (21) expression -> expression . DOTPLUS expression
    (22) expression -> expression . / expression
    (23) expression -> expression . * expression
    (24) expression -> expression . - expression
    (25) expression -> expression . + expression
    ;               shift and go to state 123
    '               shift and go to state 30
    =               shift and go to state 31
    EQ              shift and go to state 32
    NEQ             shift and go to state 33
    GE              shift and go to state 34
    LE              shift and go to state 35
    GT              shift and go to state 36
    LT              shift and go to state 37
    DOTDIVIDE       shift and go to state 38
    DOTTIMES        shift and go to state 39
    DOTMINUS        shift and go to state 40
    DOTPLUS         shift and go to state 41
    /               shift and go to state 42
    *               shift and go to state 43
    -               shift and go to state 44
    +               shift and go to state 45


state 96

    (56) statement -> assignable = expression . ;
    (10) expression -> expression . '
    (11) expression -> expression . = expression
    (12) expression -> expression . EQ expression
    (13) expression -> expression . NEQ expression
    (14) expression -> expression . GE expression
    (15) expression -> expression . LE expression
    (16) expression -> expression . GT expression
    (17) expression -> expression . LT expression
    (18) expression -> expression . DOTDIVIDE expression
    (19) expression -> expression . DOTTIMES expression
    (20) expression -> expression . DOTMINUS expression
    (21) expression -> expression . DOTPLUS expression
    (22) expression -> expression . / expression
    (23) expression -> expression . * expression
    (24) expression -> expression . - expression
    (25) expression -> expression . + expression
    ;               shift and go to state 124
    '               shift and go to state 30
    =               shift and go to state 31
    EQ              shift and go to state 32
    NEQ             shift and go to state 33
    GE              shift and go to state 34
    LE              shift and go to state 35
    GT              shift and go to state 36
    LT              shift and go to state 37
    DOTDIVIDE       shift and go to state 38
    DOTTIMES        shift and go to state 39
    DOTMINUS        shift and go to state 40
    DOTPLUS         shift and go to state 41
    /               shift and go to state 42
    *               shift and go to state 43
    -               shift and go to state 44
    +               shift and go to state 45


state 97

    (37) list -> [ spread_elements . ]
    (36) spread_elements -> spread_elements . , list_element
    ]               shift and go to state 125
    ,               shift and go to state 126


state 98

    (35) spread_elements -> list_element .
    ]               reduce using rule 35 (spread_elements -> list_element .)
    ,               reduce using rule 35 (spread_elements -> list_element .)


state 99

    (30) list_element -> list .
    (38) list -> list . , [ spread_elements ]
  ! shift/reduce conflict for , resolved as shift
    ]               reduce using rule 30 (list_element -> list .)
    ,               shift and go to state 105


state 100

    (31) list_element -> ID .
    ]               reduce using rule 31 (list_element -> ID .)
    ,               reduce using rule 31 (list_element -> ID .)


state 101

    (32) list_element -> STRING .
    ]               reduce using rule 32 (list_element -> STRING .)
    ,               reduce using rule 32 (list_element -> STRING .)


state 102

    (33) list_element -> FLOATNUM .
    ]               reduce using rule 33 (list_element -> FLOATNUM .)
    ,               reduce using rule 33 (list_element -> FLOATNUM .)


state 103

    (34) list_element -> INTNUM .
    ]               reduce using rule 34 (list_element -> INTNUM .)
    ,               reduce using rule 34 (list_element -> INTNUM .)


state 104

    (5) expression -> [ list ] .
    ;               reduce using rule 5 (expression -> [ list ] .)
    '               reduce using rule 5 (expression -> [ list ] .)
    =               reduce using rule 5 (expression -> [ list ] .)
    EQ              reduce using rule 5 (expression -> [ list ] .)
    NEQ             reduce using rule 5 (expression -> [ list ] .)
    GE              reduce using rule 5 (expression -> [ list ] .)
    LE              reduce using rule 5 (expression -> [ list ] .)
    GT              reduce using rule 5 (expression -> [ list ] .)
    LT              reduce using rule 5 (expression -> [ list ] .)
    DOTDIVIDE       reduce using rule 5 (expression -> [ list ] .)
    DOTTIMES        reduce using rule 5 (expression -> [ list ] .)
    DOTMINUS        reduce using rule 5 (expression -> [ list ] .)
    DOTPLUS         reduce using rule 5 (expression -> [ list ] .)
    /               reduce using rule 5 (expression -> [ list ] .)
    *               reduce using rule 5 (expression -> [ list ] .)
    -               reduce using rule 5 (expression -> [ list ] .)
    +               reduce using rule 5 (expression -> [ list ] .)
    {               reduce using rule 5 (expression -> [ list ] .)
    FOR             reduce using rule 5 (expression -> [ list ] .)
    WHILE           reduce using rule 5 (expression -> [ list ] .)
    IF              reduce using rule 5 (expression -> [ list ] .)
    PRINT           reduce using rule 5 (expression -> [ list ] .)
    BREAK           reduce using rule 5 (expression -> [ list ] .)
    CONTINUE        reduce using rule 5 (expression -> [ list ] .)
    RETURN          reduce using rule 5 (expression -> [ list ] .)
    [               reduce using rule 5 (expression -> [ list ] .)
    EYE             reduce using rule 5 (expression -> [ list ] .)
    ONES            reduce using rule 5 (expression -> [ list ] .)
    ZEROS           reduce using rule 5 (expression -> [ list ] .)
    (               reduce using rule 5 (expression -> [ list ] .)
    STRING          reduce using rule 5 (expression -> [ list ] .)
    FLOATNUM        reduce using rule 5 (expression -> [ list ] .)
    INTNUM          reduce using rule 5 (expression -> [ list ] .)
    ID              reduce using rule 5 (expression -> [ list ] .)
    ,               reduce using rule 5 (expression -> [ list ] .)
    )               reduce using rule 5 (expression -> [ list ] .)


state 105

    (38) list -> list , . [ spread_elements ]
    [               shift and go to state 127


state 106

    (6) expression -> EYE ( expression . )
    (10) expression -> expression . '
    (11) expression -> expression . = expression
    (12) expression -> expression . EQ expression
    (13) expression -> expression . NEQ expression
    (14) expression -> expression . GE expression
    (15) expression -> expression . LE expression
    (16) expression -> expression . GT expression
    (17) expression -> expression . LT expression
    (18) expression -> expression . DOTDIVIDE expression
    (19) expression -> expression . DOTTIMES expression
    (20) expression -> expression . DOTMINUS expression
    (21) expression -> expression . DOTPLUS expression
    (22) expression -> expression . / expression
    (23) expression -> expression . * expression
    (24) expression -> expression . - expression
    (25) expression -> expression . + expression
    )               shift and go to state 128
    '               shift and go to state 30
    =               shift and go to state 31
    EQ              shift and go to state 32
    NEQ             shift and go to state 33
    GE              shift and go to state 34
    LE              shift and go to state 35
    GT              shift and go to state 36
    LT              shift and go to state 37
    DOTDIVIDE       shift and go to state 38
    DOTTIMES        shift and go to state 39
    DOTMINUS        shift and go to state 40
    DOTPLUS         shift and go to state 41
    /               shift and go to state 42
    *               shift and go to state 43
    -               shift and go to state 44
    +               shift and go to state 45


state 107

    (26) expression -> ( expression ) .
    ;               reduce using rule 26 (expression -> ( expression ) .)
    '               reduce using rule 26 (expression -> ( expression ) .)
    =               reduce using rule 26 (expression -> ( expression ) .)
    EQ              reduce using rule 26 (expression -> ( expression ) .)
    NEQ             reduce using rule 26 (expression -> ( expression ) .)
    GE              reduce using rule 26 (expression -> ( expression ) .)
    LE              reduce using rule 26 (expression -> ( expression ) .)
    GT              reduce using rule 26 (expression -> ( expression ) .)
    LT              reduce using rule 26 (expression -> ( expression ) .)
    DOTDIVIDE       reduce using rule 26 (expression -> ( expression ) .)
    DOTTIMES        reduce using rule 26 (expression -> ( expression ) .)
    DOTMINUS        reduce using rule 26 (expression -> ( expression ) .)
    DOTPLUS         reduce using rule 26 (expression -> ( expression ) .)
    /               reduce using rule 26 (expression -> ( expression ) .)
    *               reduce using rule 26 (expression -> ( expression ) .)
    -               reduce using rule 26 (expression -> ( expression ) .)
    +               reduce using rule 26 (expression -> ( expression ) .)
    {               reduce using rule 26 (expression -> ( expression ) .)
    FOR             reduce using rule 26 (expression -> ( expression ) .)
    WHILE           reduce using rule 26 (expression -> ( expression ) .)
    IF              reduce using rule 26 (expression -> ( expression ) .)
    PRINT           reduce using rule 26 (expression -> ( expression ) .)
    BREAK           reduce using rule 26 (expression -> ( expression ) .)
    CONTINUE        reduce using rule 26 (expression -> ( expression ) .)
    RETURN          reduce using rule 26 (expression -> ( expression ) .)
    [               reduce using rule 26 (expression -> ( expression ) .)
    EYE             reduce using rule 26 (expression -> ( expression ) .)
    ONES            reduce using rule 26 (expression -> ( expression ) .)
    ZEROS           reduce using rule 26 (expression -> ( expression ) .)
    (               reduce using rule 26 (expression -> ( expression ) .)
    STRING          reduce using rule 26 (expression -> ( expression ) .)
    FLOATNUM        reduce using rule 26 (expression -> ( expression ) .)
    INTNUM          reduce using rule 26 (expression -> ( expression ) .)
    ID              reduce using rule 26 (expression -> ( expression ) .)
    ,               reduce using rule 26 (expression -> ( expression ) .)
    )               reduce using rule 26 (expression -> ( expression ) .)


state 108

    (7) expression -> ONES ( expression . )
    (10) expression -> expression . '
    (11) expression -> expression . = expression
    (12) expression -> expression . EQ expression
    (13) expression -> expression . NEQ expression
    (14) expression -> expression . GE expression
    (15) expression -> expression . LE expression
    (16) expression -> expression . GT expression
    (17) expression -> expression . LT expression
    (18) expression -> expression . DOTDIVIDE expression
    (19) expression -> expression . DOTTIMES expression
    (20) expression -> expression . DOTMINUS expression
    (21) expression -> expression . DOTPLUS expression
    (22) expression -> expression . / expression
    (23) expression -> expression . * expression
    (24) expression -> expression . - expression
    (25) expression -> expression . + expression
    )               shift and go to state 129
    '               shift and go to state 30
    =               shift and go to state 31
    EQ              shift and go to state 32
    NEQ             shift and go to state 33
    GE              shift and go to state 34
    LE              shift and go to state 35
    GT              shift and go to state 36
    LT              shift and go to state 37
    DOTDIVIDE       shift and go to state 38
    DOTTIMES        shift and go to state 39
    DOTMINUS        shift and go to state 40
    DOTPLUS         shift and go to state 41
    /               shift and go to state 42
    *               shift and go to state 43
    -               shift and go to state 44
    +               shift and go to state 45


state 109

    (8) expression -> ZEROS ( expression . )
    (10) expression -> expression . '
    (11) expression -> expression . = expression
    (12) expression -> expression . EQ expression
    (13) expression -> expression . NEQ expression
    (14) expression -> expression . GE expression
    (15) expression -> expression . LE expression
    (16) expression -> expression . GT expression
    (17) expression -> expression . LT expression
    (18) expression -> expression . DOTDIVIDE expression
    (19) expression -> expression . DOTTIMES expression
    (20) expression -> expression . DOTMINUS expression
    (21) expression -> expression . DOTPLUS expression
    (22) expression -> expression . / expression
    (23) expression -> expression . * expression
    (24) expression -> expression . - expression
    (25) expression -> expression . + expression
    )               shift and go to state 130
    '               shift and go to state 30
    =               shift and go to state 31
    EQ              shift and go to state 32
    NEQ             shift and go to state 33
    GE              shift and go to state 34
    LE              shift and go to state 35
    GT              shift and go to state 36
    LT              shift and go to state 37
    DOTDIVIDE       shift and go to state 38
    DOTTIMES        shift and go to state 39
    DOTMINUS        shift and go to state 40
    DOTPLUS         shift and go to state 41
    /               shift and go to state 42
    *               shift and go to state 43
    -               shift and go to state 44
    +               shift and go to state 45


state 110

    (2) start -> { start } start .
    $end            reduce using rule 2 (start -> { start } start .)
    }               reduce using rule 2 (start -> { start } start .)


state 111

    (62) range -> ID . : INTNUM
    (63) range -> ID . : ID
    :               shift and go to state 131


state 112

    (43) statement -> FOR ID = range . block
    (57) block -> . { start }
    (58) block -> . statement
    (43) statement -> . FOR ID = range block
    (44) statement -> . WHILE expression block
    (45) statement -> . IF expression block ELSE block
    (46) statement -> . IF expression block
    (47) statement -> . PRINT prints ;
    (48) statement -> . expression ;
    (49) statement -> . BREAK ;
    (50) statement -> . CONTINUE ;
    (51) statement -> . RETURN expression ;
    (52) statement -> . assignable DIVASSIGN expression ;
    (53) statement -> . assignable MULASSIGN expression ;
    (54) statement -> . assignable SUBASSIGN expression ;
    (55) statement -> . assignable ADDASSIGN expression ;
    (56) statement -> . assignable = expression ;
    (5) expression -> . [ list ]
    (6) expression -> . EYE ( expression )
    (7) expression -> . ONES ( expression )
    (8) expression -> . ZEROS ( expression )
    (9) expression -> . - expression
    (10) expression -> . expression '
    (11) expression -> . expression = expression
    (12) expression -> . expression EQ expression
    (13) expression -> . expression NEQ expression
    (14) expression -> . expression GE expression
    (15) expression -> . expression LE expression
    (16) expression -> . expression GT expression
    (17) expression -> . expression LT expression
    (18) expression -> . expression DOTDIVIDE expression
    (19) expression -> . expression DOTTIMES expression
    (20) expression -> . expression DOTMINUS expression
    (21) expression -> . expression DOTPLUS expression
    (22) expression -> . expression / expression
    (23) expression -> . expression * expression
    (24) expression -> . expression - expression
    (25) expression -> . expression + expression
    (26) expression -> . ( expression )
    (27) expression -> . STRING
    (28) expression -> . FLOATNUM
    (29) expression -> . INTNUM
    (39) assignable -> . ID [ indexes ]
    (40) assignable -> . ID
    {               shift and go to state 70
    FOR             shift and go to state 5
    WHILE           shift and go to state 7
    IF              shift and go to state 9
    PRINT           shift and go to state 10
    BREAK           shift and go to state 11
    CONTINUE        shift and go to state 12
    RETURN          shift and go to state 13
    [               shift and go to state 15
    EYE             shift and go to state 16
    ONES            shift and go to state 18
    ZEROS           shift and go to state 19
    -               shift and go to state 20
    (               shift and go to state 17
    STRING          shift and go to state 21
    FLOATNUM        shift and go to state 22
    INTNUM          shift and go to state 23
    ID              shift and go to state 6

    block                          shift and go to state 132
    statement                      shift and go to state 71
    expression                     shift and go to state 8
    assignable                     shift and go to state 14

state 113

    (61) range -> INTNUM . : ID
    (64) range -> INTNUM . : INTNUM
    :               shift and go to state 133


state 114

    (39) assignable -> ID [ indexes ] .
    DIVASSIGN       reduce using rule 39 (assignable -> ID [ indexes ] .)
    MULASSIGN       reduce using rule 39 (assignable -> ID [ indexes ] .)
    SUBASSIGN       reduce using rule 39 (assignable -> ID [ indexes ] .)
    ADDASSIGN       reduce using rule 39 (assignable -> ID [ indexes ] .)
    =               reduce using rule 39 (assignable -> ID [ indexes ] .)


state 115

    (42) indexes -> INTNUM , . indexes
    (41) indexes -> . INTNUM
    (42) indexes -> . INTNUM , indexes
    INTNUM          shift and go to state 67

    indexes                        shift and go to state 134

state 116

    (24) expression -> expression - expression .
    (9) expression -> - expression .
    (10) expression -> expression . '
    (11) expression -> expression . = expression
    (12) expression -> expression . EQ expression
    (13) expression -> expression . NEQ expression
    (14) expression -> expression . GE expression
    (15) expression -> expression . LE expression
    (16) expression -> expression . GT expression
    (17) expression -> expression . LT expression
    (18) expression -> expression . DOTDIVIDE expression
    (19) expression -> expression . DOTTIMES expression
    (20) expression -> expression . DOTMINUS expression
    (21) expression -> expression . DOTPLUS expression
    (22) expression -> expression . / expression
    (23) expression -> expression . * expression
    (24) expression -> expression . - expression
    (25) expression -> expression . + expression
  ! reduce/reduce conflict for ' resolved using rule 24 (expression -> expression - expression .)
  ! reduce/reduce conflict for = resolved using rule 24 (expression -> expression - expression .)
  ! reduce/reduce conflict for EQ resolved using rule 24 (expression -> expression - expression .)
  ! reduce/reduce conflict for NEQ resolved using rule 24 (expression -> expression - expression .)
  ! reduce/reduce conflict for GE resolved using rule 24 (expression -> expression - expression .)
  ! reduce/reduce conflict for LE resolved using rule 24 (expression -> expression - expression .)
  ! reduce/reduce conflict for GT resolved using rule 24 (expression -> expression - expression .)
  ! reduce/reduce conflict for LT resolved using rule 24 (expression -> expression - expression .)
  ! reduce/reduce conflict for DOTDIVIDE resolved using rule 24 (expression -> expression - expression .)
  ! reduce/reduce conflict for DOTTIMES resolved using rule 24 (expression -> expression - expression .)
  ! reduce/reduce conflict for DOTMINUS resolved using rule 24 (expression -> expression - expression .)
  ! reduce/reduce conflict for DOTPLUS resolved using rule 24 (expression -> expression - expression .)
  ! reduce/reduce conflict for / resolved using rule 24 (expression -> expression - expression .)
  ! reduce/reduce conflict for * resolved using rule 24 (expression -> expression - expression .)
  ! reduce/reduce conflict for - resolved using rule 24 (expression -> expression - expression .)
  ! reduce/reduce conflict for + resolved using rule 24 (expression -> expression - expression .)
    '               reduce using rule 24 (expression -> expression - expression .)
    =               reduce using rule 24 (expression -> expression - expression .)
    EQ              reduce using rule 24 (expression -> expression - expression .)
    NEQ             reduce using rule 24 (expression -> expression - expression .)
    GE              reduce using rule 24 (expression -> expression - expression .)
    LE              reduce using rule 24 (expression -> expression - expression .)
    GT              reduce using rule 24 (expression -> expression - expression .)
    LT              reduce using rule 24 (expression -> expression - expression .)
    DOTDIVIDE       reduce using rule 24 (expression -> expression - expression .)
    DOTTIMES        reduce using rule 24 (expression -> expression - expression .)
    DOTMINUS        reduce using rule 24 (expression -> expression - expression .)
    DOTPLUS         reduce using rule 24 (expression -> expression - expression .)
    /               reduce using rule 24 (expression -> expression - expression .)
    *               reduce using rule 24 (expression -> expression - expression .)
    +               reduce using rule 24 (expression -> expression - expression .)
    {               reduce using rule 24 (expression -> expression - expression .)
    FOR             reduce using rule 24 (expression -> expression - expression .)
    WHILE           reduce using rule 24 (expression -> expression - expression .)
    IF              reduce using rule 24 (expression -> expression - expression .)
    PRINT           reduce using rule 24 (expression -> expression - expression .)
    BREAK           reduce using rule 24 (expression -> expression - expression .)
    CONTINUE        reduce using rule 24 (expression -> expression - expression .)
    RETURN          reduce using rule 24 (expression -> expression - expression .)
    [               reduce using rule 24 (expression -> expression - expression .)
    EYE             reduce using rule 24 (expression -> expression - expression .)
    ONES            reduce using rule 24 (expression -> expression - expression .)
    ZEROS           reduce using rule 24 (expression -> expression - expression .)
    (               reduce using rule 24 (expression -> expression - expression .)
    STRING          reduce using rule 24 (expression -> expression - expression .)
    FLOATNUM        reduce using rule 24 (expression -> expression - expression .)
    INTNUM          reduce using rule 24 (expression -> expression - expression .)
    ID              reduce using rule 24 (expression -> expression - expression .)
    ;               reduce using rule 9 (expression -> - expression .)
    -               shift and go to state 44


state 117

    (57) block -> { start . }
    }               shift and go to state 135


state 118

    (45) statement -> IF expression block ELSE . block
    (57) block -> . { start }
    (58) block -> . statement
    (43) statement -> . FOR ID = range block
    (44) statement -> . WHILE expression block
    (45) statement -> . IF expression block ELSE block
    (46) statement -> . IF expression block
    (47) statement -> . PRINT prints ;
    (48) statement -> . expression ;
    (49) statement -> . BREAK ;
    (50) statement -> . CONTINUE ;
    (51) statement -> . RETURN expression ;
    (52) statement -> . assignable DIVASSIGN expression ;
    (53) statement -> . assignable MULASSIGN expression ;
    (54) statement -> . assignable SUBASSIGN expression ;
    (55) statement -> . assignable ADDASSIGN expression ;
    (56) statement -> . assignable = expression ;
    (5) expression -> . [ list ]
    (6) expression -> . EYE ( expression )
    (7) expression -> . ONES ( expression )
    (8) expression -> . ZEROS ( expression )
    (9) expression -> . - expression
    (10) expression -> . expression '
    (11) expression -> . expression = expression
    (12) expression -> . expression EQ expression
    (13) expression -> . expression NEQ expression
    (14) expression -> . expression GE expression
    (15) expression -> . expression LE expression
    (16) expression -> . expression GT expression
    (17) expression -> . expression LT expression
    (18) expression -> . expression DOTDIVIDE expression
    (19) expression -> . expression DOTTIMES expression
    (20) expression -> . expression DOTMINUS expression
    (21) expression -> . expression DOTPLUS expression
    (22) expression -> . expression / expression
    (23) expression -> . expression * expression
    (24) expression -> . expression - expression
    (25) expression -> . expression + expression
    (26) expression -> . ( expression )
    (27) expression -> . STRING
    (28) expression -> . FLOATNUM
    (29) expression -> . INTNUM
    (39) assignable -> . ID [ indexes ]
    (40) assignable -> . ID
    {               shift and go to state 70
    FOR             shift and go to state 5
    WHILE           shift and go to state 7
    IF              shift and go to state 9
    PRINT           shift and go to state 10
    BREAK           shift and go to state 11
    CONTINUE        shift and go to state 12
    RETURN          shift and go to state 13
    [               shift and go to state 15
    EYE             shift and go to state 16
    ONES            shift and go to state 18
    ZEROS           shift and go to state 19
    -               shift and go to state 20
    (               shift and go to state 17
    STRING          shift and go to state 21
    FLOATNUM        shift and go to state 22
    INTNUM          shift and go to state 23
    ID              shift and go to state 6

    expression                     shift and go to state 8
    block                          shift and go to state 136
    statement                      shift and go to state 71
    assignable                     shift and go to state 14

state 119

    (60) prints -> expression , prints .
    ;               reduce using rule 60 (prints -> expression , prints .)


state 120

    (52) statement -> assignable DIVASSIGN expression ; .
    {               reduce using rule 52 (statement -> assignable DIVASSIGN expression ; .)
    FOR             reduce using rule 52 (statement -> assignable DIVASSIGN expression ; .)
    WHILE           reduce using rule 52 (statement -> assignable DIVASSIGN expression ; .)
    IF              reduce using rule 52 (statement -> assignable DIVASSIGN expression ; .)
    PRINT           reduce using rule 52 (statement -> assignable DIVASSIGN expression ; .)
    BREAK           reduce using rule 52 (statement -> assignable DIVASSIGN expression ; .)
    CONTINUE        reduce using rule 52 (statement -> assignable DIVASSIGN expression ; .)
    RETURN          reduce using rule 52 (statement -> assignable DIVASSIGN expression ; .)
    [               reduce using rule 52 (statement -> assignable DIVASSIGN expression ; .)
    EYE             reduce using rule 52 (statement -> assignable DIVASSIGN expression ; .)
    ONES            reduce using rule 52 (statement -> assignable DIVASSIGN expression ; .)
    ZEROS           reduce using rule 52 (statement -> assignable DIVASSIGN expression ; .)
    -               reduce using rule 52 (statement -> assignable DIVASSIGN expression ; .)
    (               reduce using rule 52 (statement -> assignable DIVASSIGN expression ; .)
    STRING          reduce using rule 52 (statement -> assignable DIVASSIGN expression ; .)
    FLOATNUM        reduce using rule 52 (statement -> assignable DIVASSIGN expression ; .)
    INTNUM          reduce using rule 52 (statement -> assignable DIVASSIGN expression ; .)
    ID              reduce using rule 52 (statement -> assignable DIVASSIGN expression ; .)
    $end            reduce using rule 52 (statement -> assignable DIVASSIGN expression ; .)
    }               reduce using rule 52 (statement -> assignable DIVASSIGN expression ; .)
    ELSE            reduce using rule 52 (statement -> assignable DIVASSIGN expression ; .)


state 121

    (53) statement -> assignable MULASSIGN expression ; .
    {               reduce using rule 53 (statement -> assignable MULASSIGN expression ; .)
    FOR             reduce using rule 53 (statement -> assignable MULASSIGN expression ; .)
    WHILE           reduce using rule 53 (statement -> assignable MULASSIGN expression ; .)
    IF              reduce using rule 53 (statement -> assignable MULASSIGN expression ; .)
    PRINT           reduce using rule 53 (statement -> assignable MULASSIGN expression ; .)
    BREAK           reduce using rule 53 (statement -> assignable MULASSIGN expression ; .)
    CONTINUE        reduce using rule 53 (statement -> assignable MULASSIGN expression ; .)
    RETURN          reduce using rule 53 (statement -> assignable MULASSIGN expression ; .)
    [               reduce using rule 53 (statement -> assignable MULASSIGN expression ; .)
    EYE             reduce using rule 53 (statement -> assignable MULASSIGN expression ; .)
    ONES            reduce using rule 53 (statement -> assignable MULASSIGN expression ; .)
    ZEROS           reduce using rule 53 (statement -> assignable MULASSIGN expression ; .)
    -               reduce using rule 53 (statement -> assignable MULASSIGN expression ; .)
    (               reduce using rule 53 (statement -> assignable MULASSIGN expression ; .)
    STRING          reduce using rule 53 (statement -> assignable MULASSIGN expression ; .)
    FLOATNUM        reduce using rule 53 (statement -> assignable MULASSIGN expression ; .)
    INTNUM          reduce using rule 53 (statement -> assignable MULASSIGN expression ; .)
    ID              reduce using rule 53 (statement -> assignable MULASSIGN expression ; .)
    $end            reduce using rule 53 (statement -> assignable MULASSIGN expression ; .)
    }               reduce using rule 53 (statement -> assignable MULASSIGN expression ; .)
    ELSE            reduce using rule 53 (statement -> assignable MULASSIGN expression ; .)


state 122

    (54) statement -> assignable SUBASSIGN expression ; .
    {               reduce using rule 54 (statement -> assignable SUBASSIGN expression ; .)
    FOR             reduce using rule 54 (statement -> assignable SUBASSIGN expression ; .)
    WHILE           reduce using rule 54 (statement -> assignable SUBASSIGN expression ; .)
    IF              reduce using rule 54 (statement -> assignable SUBASSIGN expression ; .)
    PRINT           reduce using rule 54 (statement -> assignable SUBASSIGN expression ; .)
    BREAK           reduce using rule 54 (statement -> assignable SUBASSIGN expression ; .)
    CONTINUE        reduce using rule 54 (statement -> assignable SUBASSIGN expression ; .)
    RETURN          reduce using rule 54 (statement -> assignable SUBASSIGN expression ; .)
    [               reduce using rule 54 (statement -> assignable SUBASSIGN expression ; .)
    EYE             reduce using rule 54 (statement -> assignable SUBASSIGN expression ; .)
    ONES            reduce using rule 54 (statement -> assignable SUBASSIGN expression ; .)
    ZEROS           reduce using rule 54 (statement -> assignable SUBASSIGN expression ; .)
    -               reduce using rule 54 (statement -> assignable SUBASSIGN expression ; .)
    (               reduce using rule 54 (statement -> assignable SUBASSIGN expression ; .)
    STRING          reduce using rule 54 (statement -> assignable SUBASSIGN expression ; .)
    FLOATNUM        reduce using rule 54 (statement -> assignable SUBASSIGN expression ; .)
    INTNUM          reduce using rule 54 (statement -> assignable SUBASSIGN expression ; .)
    ID              reduce using rule 54 (statement -> assignable SUBASSIGN expression ; .)
    $end            reduce using rule 54 (statement -> assignable SUBASSIGN expression ; .)
    }               reduce using rule 54 (statement -> assignable SUBASSIGN expression ; .)
    ELSE            reduce using rule 54 (statement -> assignable SUBASSIGN expression ; .)


state 123

    (55) statement -> assignable ADDASSIGN expression ; .
    {               reduce using rule 55 (statement -> assignable ADDASSIGN expression ; .)
    FOR             reduce using rule 55 (statement -> assignable ADDASSIGN expression ; .)
    WHILE           reduce using rule 55 (statement -> assignable ADDASSIGN expression ; .)
    IF              reduce using rule 55 (statement -> assignable ADDASSIGN expression ; .)
    PRINT           reduce using rule 55 (statement -> assignable ADDASSIGN expression ; .)
    BREAK           reduce using rule 55 (statement -> assignable ADDASSIGN expression ; .)
    CONTINUE        reduce using rule 55 (statement -> assignable ADDASSIGN expression ; .)
    RETURN          reduce using rule 55 (statement -> assignable ADDASSIGN expression ; .)
    [               reduce using rule 55 (statement -> assignable ADDASSIGN expression ; .)
    EYE             reduce using rule 55 (statement -> assignable ADDASSIGN expression ; .)
    ONES            reduce using rule 55 (statement -> assignable ADDASSIGN expression ; .)
    ZEROS           reduce using rule 55 (statement -> assignable ADDASSIGN expression ; .)
    -               reduce using rule 55 (statement -> assignable ADDASSIGN expression ; .)
    (               reduce using rule 55 (statement -> assignable ADDASSIGN expression ; .)
    STRING          reduce using rule 55 (statement -> assignable ADDASSIGN expression ; .)
    FLOATNUM        reduce using rule 55 (statement -> assignable ADDASSIGN expression ; .)
    INTNUM          reduce using rule 55 (statement -> assignable ADDASSIGN expression ; .)
    ID              reduce using rule 55 (statement -> assignable ADDASSIGN expression ; .)
    $end            reduce using rule 55 (statement -> assignable ADDASSIGN expression ; .)
    }               reduce using rule 55 (statement -> assignable ADDASSIGN expression ; .)
    ELSE            reduce using rule 55 (statement -> assignable ADDASSIGN expression ; .)


state 124

    (56) statement -> assignable = expression ; .
    {               reduce using rule 56 (statement -> assignable = expression ; .)
    FOR             reduce using rule 56 (statement -> assignable = expression ; .)
    WHILE           reduce using rule 56 (statement -> assignable = expression ; .)
    IF              reduce using rule 56 (statement -> assignable = expression ; .)
    PRINT           reduce using rule 56 (statement -> assignable = expression ; .)
    BREAK           reduce using rule 56 (statement -> assignable = expression ; .)
    CONTINUE        reduce using rule 56 (statement -> assignable = expression ; .)
    RETURN          reduce using rule 56 (statement -> assignable = expression ; .)
    [               reduce using rule 56 (statement -> assignable = expression ; .)
    EYE             reduce using rule 56 (statement -> assignable = expression ; .)
    ONES            reduce using rule 56 (statement -> assignable = expression ; .)
    ZEROS           reduce using rule 56 (statement -> assignable = expression ; .)
    -               reduce using rule 56 (statement -> assignable = expression ; .)
    (               reduce using rule 56 (statement -> assignable = expression ; .)
    STRING          reduce using rule 56 (statement -> assignable = expression ; .)
    FLOATNUM        reduce using rule 56 (statement -> assignable = expression ; .)
    INTNUM          reduce using rule 56 (statement -> assignable = expression ; .)
    ID              reduce using rule 56 (statement -> assignable = expression ; .)
    $end            reduce using rule 56 (statement -> assignable = expression ; .)
    }               reduce using rule 56 (statement -> assignable = expression ; .)
    ELSE            reduce using rule 56 (statement -> assignable = expression ; .)


state 125

    (37) list -> [ spread_elements ] .
    ]               reduce using rule 37 (list -> [ spread_elements ] .)
    ,               reduce using rule 37 (list -> [ spread_elements ] .)


state 126

    (36) spread_elements -> spread_elements , . list_element
    (30) list_element -> . list
    (31) list_element -> . ID
    (32) list_element -> . STRING
    (33) list_element -> . FLOATNUM
    (34) list_element -> . INTNUM
    (37) list -> . [ spread_elements ]
    (38) list -> . list , [ spread_elements ]
    ID              shift and go to state 100
    STRING          shift and go to state 101
    FLOATNUM        shift and go to state 102
    INTNUM          shift and go to state 103
    [               shift and go to state 57

    list_element                   shift and go to state 137
    list                           shift and go to state 99

state 127

    (38) list -> list , [ . spread_elements ]
    (35) spread_elements -> . list_element
    (36) spread_elements -> . spread_elements , list_element
    (30) list_element -> . list
    (31) list_element -> . ID
    (32) list_element -> . STRING
    (33) list_element -> . FLOATNUM
    (34) list_element -> . INTNUM
    (37) list -> . [ spread_elements ]
    (38) list -> . list , [ spread_elements ]
    ID              shift and go to state 100
    STRING          shift and go to state 101
    FLOATNUM        shift and go to state 102
    INTNUM          shift and go to state 103
    [               shift and go to state 57

    list                           shift and go to state 99
    spread_elements                shift and go to state 138
    list_element                   shift and go to state 98

state 128

    (6) expression -> EYE ( expression ) .
    ;               reduce using rule 6 (expression -> EYE ( expression ) .)
    '               reduce using rule 6 (expression -> EYE ( expression ) .)
    =               reduce using rule 6 (expression -> EYE ( expression ) .)
    EQ              reduce using rule 6 (expression -> EYE ( expression ) .)
    NEQ             reduce using rule 6 (expression -> EYE ( expression ) .)
    GE              reduce using rule 6 (expression -> EYE ( expression ) .)
    LE              reduce using rule 6 (expression -> EYE ( expression ) .)
    GT              reduce using rule 6 (expression -> EYE ( expression ) .)
    LT              reduce using rule 6 (expression -> EYE ( expression ) .)
    DOTDIVIDE       reduce using rule 6 (expression -> EYE ( expression ) .)
    DOTTIMES        reduce using rule 6 (expression -> EYE ( expression ) .)
    DOTMINUS        reduce using rule 6 (expression -> EYE ( expression ) .)
    DOTPLUS         reduce using rule 6 (expression -> EYE ( expression ) .)
    /               reduce using rule 6 (expression -> EYE ( expression ) .)
    *               reduce using rule 6 (expression -> EYE ( expression ) .)
    -               reduce using rule 6 (expression -> EYE ( expression ) .)
    +               reduce using rule 6 (expression -> EYE ( expression ) .)
    {               reduce using rule 6 (expression -> EYE ( expression ) .)
    FOR             reduce using rule 6 (expression -> EYE ( expression ) .)
    WHILE           reduce using rule 6 (expression -> EYE ( expression ) .)
    IF              reduce using rule 6 (expression -> EYE ( expression ) .)
    PRINT           reduce using rule 6 (expression -> EYE ( expression ) .)
    BREAK           reduce using rule 6 (expression -> EYE ( expression ) .)
    CONTINUE        reduce using rule 6 (expression -> EYE ( expression ) .)
    RETURN          reduce using rule 6 (expression -> EYE ( expression ) .)
    [               reduce using rule 6 (expression -> EYE ( expression ) .)
    EYE             reduce using rule 6 (expression -> EYE ( expression ) .)
    ONES            reduce using rule 6 (expression -> EYE ( expression ) .)
    ZEROS           reduce using rule 6 (expression -> EYE ( expression ) .)
    (               reduce using rule 6 (expression -> EYE ( expression ) .)
    STRING          reduce using rule 6 (expression -> EYE ( expression ) .)
    FLOATNUM        reduce using rule 6 (expression -> EYE ( expression ) .)
    INTNUM          reduce using rule 6 (expression -> EYE ( expression ) .)
    ID              reduce using rule 6 (expression -> EYE ( expression ) .)
    ,               reduce using rule 6 (expression -> EYE ( expression ) .)
    )               reduce using rule 6 (expression -> EYE ( expression ) .)


state 129

    (7) expression -> ONES ( expression ) .
    ;               reduce using rule 7 (expression -> ONES ( expression ) .)
    '               reduce using rule 7 (expression -> ONES ( expression ) .)
    =               reduce using rule 7 (expression -> ONES ( expression ) .)
    EQ              reduce using rule 7 (expression -> ONES ( expression ) .)
    NEQ             reduce using rule 7 (expression -> ONES ( expression ) .)
    GE              reduce using rule 7 (expression -> ONES ( expression ) .)
    LE              reduce using rule 7 (expression -> ONES ( expression ) .)
    GT              reduce using rule 7 (expression -> ONES ( expression ) .)
    LT              reduce using rule 7 (expression -> ONES ( expression ) .)
    DOTDIVIDE       reduce using rule 7 (expression -> ONES ( expression ) .)
    DOTTIMES        reduce using rule 7 (expression -> ONES ( expression ) .)
    DOTMINUS        reduce using rule 7 (expression -> ONES ( expression ) .)
    DOTPLUS         reduce using rule 7 (expression -> ONES ( expression ) .)
    /               reduce using rule 7 (expression -> ONES ( expression ) .)
    *               reduce using rule 7 (expression -> ONES ( expression ) .)
    -               reduce using rule 7 (expression -> ONES ( expression ) .)
    +               reduce using rule 7 (expression -> ONES ( expression ) .)
    {               reduce using rule 7 (expression -> ONES ( expression ) .)
    FOR             reduce using rule 7 (expression -> ONES ( expression ) .)
    WHILE           reduce using rule 7 (expression -> ONES ( expression ) .)
    IF              reduce using rule 7 (expression -> ONES ( expression ) .)
    PRINT           reduce using rule 7 (expression -> ONES ( expression ) .)
    BREAK           reduce using rule 7 (expression -> ONES ( expression ) .)
    CONTINUE        reduce using rule 7 (expression -> ONES ( expression ) .)
    RETURN          reduce using rule 7 (expression -> ONES ( expression ) .)
    [               reduce using rule 7 (expression -> ONES ( expression ) .)
    EYE             reduce using rule 7 (expression -> ONES ( expression ) .)
    ONES            reduce using rule 7 (expression -> ONES ( expression ) .)
    ZEROS           reduce using rule 7 (expression -> ONES ( expression ) .)
    (               reduce using rule 7 (expression -> ONES ( expression ) .)
    STRING          reduce using rule 7 (expression -> ONES ( expression ) .)
    FLOATNUM        reduce using rule 7 (expression -> ONES ( expression ) .)
    INTNUM          reduce using rule 7 (expression -> ONES ( expression ) .)
    ID              reduce using rule 7 (expression -> ONES ( expression ) .)
    ,               reduce using rule 7 (expression -> ONES ( expression ) .)
    )               reduce using rule 7 (expression -> ONES ( expression ) .)


state 130

    (8) expression -> ZEROS ( expression ) .
    ;               reduce using rule 8 (expression -> ZEROS ( expression ) .)
    '               reduce using rule 8 (expression -> ZEROS ( expression ) .)
    =               reduce using rule 8 (expression -> ZEROS ( expression ) .)
    EQ              reduce using rule 8 (expression -> ZEROS ( expression ) .)
    NEQ             reduce using rule 8 (expression -> ZEROS ( expression ) .)
    GE              reduce using rule 8 (expression -> ZEROS ( expression ) .)
    LE              reduce using rule 8 (expression -> ZEROS ( expression ) .)
    GT              reduce using rule 8 (expression -> ZEROS ( expression ) .)
    LT              reduce using rule 8 (expression -> ZEROS ( expression ) .)
    DOTDIVIDE       reduce using rule 8 (expression -> ZEROS ( expression ) .)
    DOTTIMES        reduce using rule 8 (expression -> ZEROS ( expression ) .)
    DOTMINUS        reduce using rule 8 (expression -> ZEROS ( expression ) .)
    DOTPLUS         reduce using rule 8 (expression -> ZEROS ( expression ) .)
    /               reduce using rule 8 (expression -> ZEROS ( expression ) .)
    *               reduce using rule 8 (expression -> ZEROS ( expression ) .)
    -               reduce using rule 8 (expression -> ZEROS ( expression ) .)
    +               reduce using rule 8 (expression -> ZEROS ( expression ) .)
    {               reduce using rule 8 (expression -> ZEROS ( expression ) .)
    FOR             reduce using rule 8 (expression -> ZEROS ( expression ) .)
    WHILE           reduce using rule 8 (expression -> ZEROS ( expression ) .)
    IF              reduce using rule 8 (expression -> ZEROS ( expression ) .)
    PRINT           reduce using rule 8 (expression -> ZEROS ( expression ) .)
    BREAK           reduce using rule 8 (expression -> ZEROS ( expression ) .)
    CONTINUE        reduce using rule 8 (expression -> ZEROS ( expression ) .)
    RETURN          reduce using rule 8 (expression -> ZEROS ( expression ) .)
    [               reduce using rule 8 (expression -> ZEROS ( expression ) .)
    EYE             reduce using rule 8 (expression -> ZEROS ( expression ) .)
    ONES            reduce using rule 8 (expression -> ZEROS ( expression ) .)
    ZEROS           reduce using rule 8 (expression -> ZEROS ( expression ) .)
    (               reduce using rule 8 (expression -> ZEROS ( expression ) .)
    STRING          reduce using rule 8 (expression -> ZEROS ( expression ) .)
    FLOATNUM        reduce using rule 8 (expression -> ZEROS ( expression ) .)
    INTNUM          reduce using rule 8 (expression -> ZEROS ( expression ) .)
    ID              reduce using rule 8 (expression -> ZEROS ( expression ) .)
    ,               reduce using rule 8 (expression -> ZEROS ( expression ) .)
    )               reduce using rule 8 (expression -> ZEROS ( expression ) .)


state 131

    (62) range -> ID : . INTNUM
    (63) range -> ID : . ID
    INTNUM          shift and go to state 140
    ID              shift and go to state 139


state 132

    (43) statement -> FOR ID = range block .
    {               reduce using rule 43 (statement -> FOR ID = range block .)
    FOR             reduce using rule 43 (statement -> FOR ID = range block .)
    WHILE           reduce using rule 43 (statement -> FOR ID = range block .)
    IF              reduce using rule 43 (statement -> FOR ID = range block .)
    PRINT           reduce using rule 43 (statement -> FOR ID = range block .)
    BREAK           reduce using rule 43 (statement -> FOR ID = range block .)
    CONTINUE        reduce using rule 43 (statement -> FOR ID = range block .)
    RETURN          reduce using rule 43 (statement -> FOR ID = range block .)
    [               reduce using rule 43 (statement -> FOR ID = range block .)
    EYE             reduce using rule 43 (statement -> FOR ID = range block .)
    ONES            reduce using rule 43 (statement -> FOR ID = range block .)
    ZEROS           reduce using rule 43 (statement -> FOR ID = range block .)
    -               reduce using rule 43 (statement -> FOR ID = range block .)
    (               reduce using rule 43 (statement -> FOR ID = range block .)
    STRING          reduce using rule 43 (statement -> FOR ID = range block .)
    FLOATNUM        reduce using rule 43 (statement -> FOR ID = range block .)
    INTNUM          reduce using rule 43 (statement -> FOR ID = range block .)
    ID              reduce using rule 43 (statement -> FOR ID = range block .)
    $end            reduce using rule 43 (statement -> FOR ID = range block .)
    }               reduce using rule 43 (statement -> FOR ID = range block .)
    ELSE            reduce using rule 43 (statement -> FOR ID = range block .)


state 133

    (61) range -> INTNUM : . ID
    (64) range -> INTNUM : . INTNUM
    ID              shift and go to state 142
    INTNUM          shift and go to state 141


state 134

    (42) indexes -> INTNUM , indexes .
    ]               reduce using rule 42 (indexes -> INTNUM , indexes .)


state 135

    (57) block -> { start } .
    {               reduce using rule 57 (block -> { start } .)
    FOR             reduce using rule 57 (block -> { start } .)
    WHILE           reduce using rule 57 (block -> { start } .)
    IF              reduce using rule 57 (block -> { start } .)
    PRINT           reduce using rule 57 (block -> { start } .)
    BREAK           reduce using rule 57 (block -> { start } .)
    CONTINUE        reduce using rule 57 (block -> { start } .)
    RETURN          reduce using rule 57 (block -> { start } .)
    [               reduce using rule 57 (block -> { start } .)
    EYE             reduce using rule 57 (block -> { start } .)
    ONES            reduce using rule 57 (block -> { start } .)
    ZEROS           reduce using rule 57 (block -> { start } .)
    -               reduce using rule 57 (block -> { start } .)
    (               reduce using rule 57 (block -> { start } .)
    STRING          reduce using rule 57 (block -> { start } .)
    FLOATNUM        reduce using rule 57 (block -> { start } .)
    INTNUM          reduce using rule 57 (block -> { start } .)
    ID              reduce using rule 57 (block -> { start } .)
    $end            reduce using rule 57 (block -> { start } .)
    }               reduce using rule 57 (block -> { start } .)
    ELSE            reduce using rule 57 (block -> { start } .)


state 136

    (45) statement -> IF expression block ELSE block .
    {               reduce using rule 45 (statement -> IF expression block ELSE block .)
    FOR             reduce using rule 45 (statement -> IF expression block ELSE block .)
    WHILE           reduce using rule 45 (statement -> IF expression block ELSE block .)
    IF              reduce using rule 45 (statement -> IF expression block ELSE block .)
    PRINT           reduce using rule 45 (statement -> IF expression block ELSE block .)
    BREAK           reduce using rule 45 (statement -> IF expression block ELSE block .)
    CONTINUE        reduce using rule 45 (statement -> IF expression block ELSE block .)
    RETURN          reduce using rule 45 (statement -> IF expression block ELSE block .)
    [               reduce using rule 45 (statement -> IF expression block ELSE block .)
    EYE             reduce using rule 45 (statement -> IF expression block ELSE block .)
    ONES            reduce using rule 45 (statement -> IF expression block ELSE block .)
    ZEROS           reduce using rule 45 (statement -> IF expression block ELSE block .)
    -               reduce using rule 45 (statement -> IF expression block ELSE block .)
    (               reduce using rule 45 (statement -> IF expression block ELSE block .)
    STRING          reduce using rule 45 (statement -> IF expression block ELSE block .)
    FLOATNUM        reduce using rule 45 (statement -> IF expression block ELSE block .)
    INTNUM          reduce using rule 45 (statement -> IF expression block ELSE block .)
    ID              reduce using rule 45 (statement -> IF expression block ELSE block .)
    $end            reduce using rule 45 (statement -> IF expression block ELSE block .)
    }               reduce using rule 45 (statement -> IF expression block ELSE block .)
    ELSE            reduce using rule 45 (statement -> IF expression block ELSE block .)


state 137

    (36) spread_elements -> spread_elements , list_element .
    ]               reduce using rule 36 (spread_elements -> spread_elements , list_element .)
    ,               reduce using rule 36 (spread_elements -> spread_elements , list_element .)


state 138

    (38) list -> list , [ spread_elements . ]
    (36) spread_elements -> spread_elements . , list_element
    ]               shift and go to state 143
    ,               shift and go to state 126


state 139

    (63) range -> ID : ID .
    {               reduce using rule 63 (range -> ID : ID .)
    FOR             reduce using rule 63 (range -> ID : ID .)
    WHILE           reduce using rule 63 (range -> ID : ID .)
    IF              reduce using rule 63 (range -> ID : ID .)
    PRINT           reduce using rule 63 (range -> ID : ID .)
    BREAK           reduce using rule 63 (range -> ID : ID .)
    CONTINUE        reduce using rule 63 (range -> ID : ID .)
    RETURN          reduce using rule 63 (range -> ID : ID .)
    [               reduce using rule 63 (range -> ID : ID .)
    EYE             reduce using rule 63 (range -> ID : ID .)
    ONES            reduce using rule 63 (range -> ID : ID .)
    ZEROS           reduce using rule 63 (range -> ID : ID .)
    -               reduce using rule 63 (range -> ID : ID .)
    (               reduce using rule 63 (range -> ID : ID .)
    STRING          reduce using rule 63 (range -> ID : ID .)
    FLOATNUM        reduce using rule 63 (range -> ID : ID .)
    INTNUM          reduce using rule 63 (range -> ID : ID .)
    ID              reduce using rule 63 (range -> ID : ID .)


state 140

    (62) range -> ID : INTNUM .
    {               reduce using rule 62 (range -> ID : INTNUM .)
    FOR             reduce using rule 62 (range -> ID : INTNUM .)
    WHILE           reduce using rule 62 (range -> ID : INTNUM .)
    IF              reduce using rule 62 (range -> ID : INTNUM .)
    PRINT           reduce using rule 62 (range -> ID : INTNUM .)
    BREAK           reduce using rule 62 (range -> ID : INTNUM .)
    CONTINUE        reduce using rule 62 (range -> ID : INTNUM .)
    RETURN          reduce using rule 62 (range -> ID : INTNUM .)
    [               reduce using rule 62 (range -> ID : INTNUM .)
    EYE             reduce using rule 62 (range -> ID : INTNUM .)
    ONES            reduce using rule 62 (range -> ID : INTNUM .)
    ZEROS           reduce using rule 62 (range -> ID : INTNUM .)
    -               reduce using rule 62 (range -> ID : INTNUM .)
    (               reduce using rule 62 (range -> ID : INTNUM .)
    STRING          reduce using rule 62 (range -> ID : INTNUM .)
    FLOATNUM        reduce using rule 62 (range -> ID : INTNUM .)
    INTNUM          reduce using rule 62 (range -> ID : INTNUM .)
    ID              reduce using rule 62 (range -> ID : INTNUM .)


state 141

    (64) range -> INTNUM : INTNUM .
    {               reduce using rule 64 (range -> INTNUM : INTNUM .)
    FOR             reduce using rule 64 (range -> INTNUM : INTNUM .)
    WHILE           reduce using rule 64 (range -> INTNUM : INTNUM .)
    IF              reduce using rule 64 (range -> INTNUM : INTNUM .)
    PRINT           reduce using rule 64 (range -> INTNUM : INTNUM .)
    BREAK           reduce using rule 64 (range -> INTNUM : INTNUM .)
    CONTINUE        reduce using rule 64 (range -> INTNUM : INTNUM .)
    RETURN          reduce using rule 64 (range -> INTNUM : INTNUM .)
    [               reduce using rule 64 (range -> INTNUM : INTNUM .)
    EYE             reduce using rule 64 (range -> INTNUM : INTNUM .)
    ONES            reduce using rule 64 (range -> INTNUM : INTNUM .)
    ZEROS           reduce using rule 64 (range -> INTNUM : INTNUM .)
    -               reduce using rule 64 (range -> INTNUM : INTNUM .)
    (               reduce using rule 64 (range -> INTNUM : INTNUM .)
    STRING          reduce using rule 64 (range -> INTNUM : INTNUM .)
    FLOATNUM        reduce using rule 64 (range -> INTNUM : INTNUM .)
    INTNUM          reduce using rule 64 (range -> INTNUM : INTNUM .)
    ID              reduce using rule 64 (range -> INTNUM : INTNUM .)


state 142

    (61) range -> INTNUM : ID .
    {               reduce using rule 61 (range -> INTNUM : ID .)
    FOR             reduce using rule 61 (range -> INTNUM : ID .)
    WHILE           reduce using rule 61 (range -> INTNUM : ID .)
    IF              reduce using rule 61 (range -> INTNUM : ID .)
    PRINT           reduce using rule 61 (range -> INTNUM : ID .)
    BREAK           reduce using rule 61 (range -> INTNUM : ID .)
    CONTINUE        reduce using rule 61 (range -> INTNUM : ID .)
    RETURN          reduce using rule 61 (range -> INTNUM : ID .)
    [               reduce using rule 61 (range -> INTNUM : ID .)
    EYE             reduce using rule 61 (range -> INTNUM : ID .)
    ONES            reduce using rule 61 (range -> INTNUM : ID .)
    ZEROS           reduce using rule 61 (range -> INTNUM : ID .)
    -               reduce using rule 61 (range -> INTNUM : ID .)
    (               reduce using rule 61 (range -> INTNUM : ID .)
    STRING          reduce using rule 61 (range -> INTNUM : ID .)
    FLOATNUM        reduce using rule 61 (range -> INTNUM : ID .)
    INTNUM          reduce using rule 61 (range -> INTNUM : ID .)
    ID              reduce using rule 61 (range -> INTNUM : ID .)


state 143

    (38) list -> list , [ spread_elements ] .
    ]               reduce using rule 38 (list -> list , [ spread_elements ] .)
    ,               reduce using rule 38 (list -> list , [ spread_elements ] .)


Conflicts:

shift/reduce conflict for ' in state 72 resolved as shift
shift/reduce conflict for = in state 72 resolved as shift
shift/reduce conflict for EQ in state 72 resolved as shift
shift/reduce conflict for NEQ in state 72 resolved as shift
shift/reduce conflict for GE in state 72 resolved as shift
shift/reduce conflict for LE in state 72 resolved as shift
shift/reduce conflict for GT in state 72 resolved as shift
shift/reduce conflict for LT in state 72 resolved as shift
shift/reduce conflict for DOTDIVIDE in state 72 resolved as shift
shift/reduce conflict for DOTTIMES in state 72 resolved as shift
shift/reduce conflict for DOTMINUS in state 72 resolved as shift
shift/reduce conflict for DOTPLUS in state 72 resolved as shift
shift/reduce conflict for / in state 72 resolved as shift
shift/reduce conflict for * in state 72 resolved as shift
shift/reduce conflict for - in state 72 resolved as shift
shift/reduce conflict for + in state 72 resolved as shift
shift/reduce conflict for ELSE in state 87 resolved as shift
shift/reduce conflict for , in state 99 resolved as shift
reduce/reduce conflict in state 116 resolved using rule expression -> expression - expression  [precedence=right, level=6]
rejected rule (expression -> - expression  [precedence=right, level=6]) in state 116